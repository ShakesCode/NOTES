================================================
            OPENSTACK MANUAL SETUP
================================================

ON MAC

========================
TENANT SETUP
========================
Obtain tenant in Openstack
Upload your keys - or generate specific keys
- If created Openstack specific key - Download the private key (or is it public key to download)
Download RC.sh file
--> more details in other dedicated section below

========================
INSTALL CLIENT TOOLS
========================
--------------------------
INSTALL ‘virtualenv’
--------------------------
NOTE:  This is a virtual-environment creator with specific Python and openstack-tools version

— THIS FAILED (as in tutorial)

Open a terminal session and run the following command. 
This will download the tool to create a virtual python environment.

~$ easy_install --user virtualenv
(NOTE: if you get an SSL: CERTIFICATE_VERIFY_FAILED error, try this command first : unset SSL_CERT_FILE)

— THIS WORKED 
https://virtualenv.pypa.io/en/stable/installation/

$ which pip
/usr/local/bin/pip

$ sudo pip install virtualenv
Password:
The directory '/Users/myusername/Library/Caches/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
The directory '/Users/myusername/Library/Caches/pip' or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag.
Collecting virtualenv
  Downloading virtualenv-15.1.0-py2.py3-none-any.whl (1.8MB)
    100% |..................| 1.8MB 233kB/s 
Installing collected packages: virtualenv
Successfully installed virtualenv-15.1.0

$ which virtualenv
/usr/local/bin/virtualenv

--------------------------
CREATE VIRTUAL ENVIRONMENT
--------------------------
NOTE: This will create a directory ~/openstack and under that all client software will be installed later on

- CREATE
$ virtualenv ~/openstack
New python executable in /Users/myusername/openstack/bin/python2.7
Also creating executable in /Users/myusername/openstack/bin/python
Installing setuptools, pip, wheel...done.

$ cd ~/openstack
$ ls -l
total 8
drwxr-xr-x  16 myusername  DHC\Domain Users  544 Nov  6 16:15 bin
drwxr-xr-x   3 myusername  DHC\Domain Users  102 Nov  6 16:15 include
drwxr-xr-x   3 myusername  DHC\Domain Users  102 Nov  6 16:15 lib
-rw-r--r--   1 myusername  DHC\Domain Users   60 Nov  6 16:15 pip-selfcheck.json
$ pwd
/Users/myusername/openstack

- ACTIVATE
source ~/openstack/bin/activate

—> You will get the following prompt
(openstack) $

--------------------------
INSTALL OPENSTACK PACKAGES
--------------------------
SOME TIPS:
     Do this to avoid errors like the following  (from https://github.com/facebook/prophet/issues/140)
      - Do this - pip install pystan
      - To avoid - Command "python setup.py egg_info" failed with error code 1 in  
        /private/var/folders/wg/yyp7cbss42x9wnlnyhjh5gq9jzvtrx/T/pip-build-F9mPif/positional/

      - or, try pip install --trusted-host pypi.python.org <package name>
      - or, try first do this “pip install certifi”  and then do the rest of the package installs
      - or try https://github.com/pypa/virtualenv/issues/964

INSTALL PREREQUISITES
(openstack) $ pip install pystan
(openstack) $ pip install pbr>=1.8
(openstack) $ pip list
certifi (2017.11.5)
Cython (0.27.3)
numpy (1.13.3)
pbr (3.1.1)
pip (9.0.1)
pystan (2.17.0.0)
setuptools (36.6.0)
wheel (0.30.0)

INSTALL OPENSTACK TOOLS
pip install python-openstackclient --upgrade
pip install python-novaclient --upgrade
pip install python-neutronclient --upgrade
pip install python-cinderclient --upgrade
pip install python-swiftclient --upgrade
pip install python-glanceclient --upgrade
pip install python-saharaclient --upgrade
pip install python-heatclient --upgrade
pip install oslo.log --upgrade

Verify
$ heat --version
$ openstack —version
…
…

============================	
OPENSTACK ENVIRONMENT FILES
============================
------------------------------------
Get the RC file and EC2 credentials
------------------------------------
- GET THE FILES
In web-UI —> Compute —> Access & Security

1. —> Download OpenStack RC File — This gives TENANT-openrc.sh
2. —> Download EC2 Credentials — This gives TENANT-x509.zip - which contains caret.pem, cert.pem, ec2rc.sh, pk.pem

- COPY THE FILES TO HOME DIRECTORY
Copy DBOPT-Openrc.sh as username_projectname.sh into home directory.

------------------------------------
CERTIFICATES
------------------------------------
Download certificates for the company and store it in home directory as ~/.company.crt
--> if it is your own install, probably haxx or self-signed certificate should do

Source it in the RC file as:
export OS_CACERT=$HOME/.company.crt

------------------------------------
SOURCE  ENVIRONMENT
------------------------------------
Source the RC file: (inside the virtualenv)

$ source ~/username_projectname.sh
--> This will prompt for a password - give the LAN password - which is same as OST password.

Verify:
(openstack) $ env | grep OS_
OS_AUTH_URL=https://openstack.company.com:5000/v2.0
OS_CACERT=/Users/myusername/.company.crt
OS_PASSWORD=<password>
OS_PROJECT_NAME=MYTENANT
OS_REGION_NAME=RegionOne
OS_TENANT_ID=alsdjfs90ad72543be89f9d54f8311ad9e
OS_TENANT_NAME=MYTENANT
OS_USERNAME=myusername

Verify actually connecting to openstack server:
$ openstack server list

