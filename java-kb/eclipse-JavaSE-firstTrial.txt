BASIC ECLIPSE IDE CONFIGURATION AND SIMPLE PROGRAM WITHOUT EE USING ECLIPSE

http://www.tutorialspoint.com/eclipse/
http://help.eclipse.org/juno/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Freference%2Fref-wizard-class.htm

INSTALL
Installed using catalog

CONFIGURATION
Workspace: C:\Data\HOME-TECH\DEV-SPACE\Java\Eclipse

====================================
JAVA PROJECT
====================================
CREATE NEW JAVA PROJECT
File --> New --> Project --> Java Project 
In the screen:
Enter project name
Choose the JDK and JRE 
-> It also has an option of choosing JDK and JRE versions
-> If your Java versions are not there, there is also a search option 
-> Choose search and point to the 'java' folder in 'program files' or 'program files(x86)'
-> It will add the java runtime and java sdk it finds there

Added a java project called HR - with JDK 1.8 and JRE 1.8

OPEN PACKAGE EXPLORER AND CHOOSE THIS PROJECT

CREATE A JAVA PACKAGE
(What is a java package: https://docs.oracle.com/javase/tutorial/java/concepts/package.html)
File --> New --> Package (or an icon)
Enter package name: mt.demo.hr

View the changes in the package explorer - what got added/changed ...

CREATE A NEW CLASS 'Employee'
File --> New --> Class
Enter class name 'Employee'

Leave rest as defaults - some of them below:
Modifiers - public (default)
Superclass - java.lang.Object (default)
Method Stubs - inherited abstract methods (default)

Now you will see in package explorer a class added and in the editor screen the class code.

CREATE AN INTERFACE
(What is an interface: https://docs.oracle.com/javase/tutorial/java/concepts/interface.html)

File --> New --> Interface
Choose the right package - mt.demo.hr
Enter interface name - ITable (used the same as in the tutorial - not sure what they wanted to use this for)

Modifier - public
Checked generate comments - it added comments as 'header' into the code
Enclosing type - leave it blank. Eclipse gives it for something - http://help.eclipse.org/juno/index.jsp?topic=%2Forg.eclipse.jdt.doc.user%2Freference%2Fref-wizard-class.htm)

ADD AN XML FILE
File --> New --> Other
In the wizard that comes up, search for xml
Choose "XML File"
Click Next
Give file name - Employee_Data.xml

(The 'Advanced' button gives option of selecting the location of the xml file - instead of creating in default location)
(Did not choose the advanced option)

CHECK THE FILES ON C DRIVE NOW:
All these files are now stored here: C:\Data\HOME-TECH\DEV-SPACE\Java\Eclipse\HR\src\mt\demo\hr
Employee.java (class)
Employee_Data.xml (xml file)
ITable.java (interface)

CHECK THE BUILD PATH
Right click on the project and choose properties
In properties, choose Java Build Path
In that, browse various items - option of JRE, additional Jars ...

CREATE A CLASS WITH A MAIN METHOD
File --> New --> Class
Package - mt.demo.hr
Enter class name - MEmpDisplay (M for the calsses with Main)
Checkbox check - 'public static void main ...'

Add a small piece of code:  System.out.println("Hello Employee, Java Program");
----> as follows ---->
package gow.demo.hr;

public class MEmpDisplay {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("Hello Employee, Java Program");
	}

}

SAVE ALL
File --> Save All

RUN
In Menubar:  Run --> Run
This should display "Hello Employee, Java Program" in the bottom right pane.

RUN CONFIGURATION
Run --> Run Configurations --> Java Application
Then press 'new' button at left top corner
Give it a name
Click 'main' tab --> give the class with main program in it
Configure other stuff like JRE, Classpath etc. (did not do as it was a simple program at this time)
Then click 'run' button at the bottom right







