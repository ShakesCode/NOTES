=======================================================================
DESIGN OF RESTFUL API FOR ORACLE USER MANAGEMENT (like reset password)
=======================================================================

See also the setup document restful-api-coding-setup.txt

========================================================
              ECLIPSE - WITH MAVEN
========================================================
Workspace:
~/c/PROGRAMMING/JAVA/Maven/workspare-oracle

======================
PACKAGES
======================
Package 1: Data handlers - com.gm.oracle.datahandlers
Package 2: Utilities - com.gm.utils.java
Package 3: User management programs - com.gm.oracle.services

----------------------------------------------------------
Package 1: Data handlers - com.gm.oracle.datahandlers
----------------------------------------------------------
- Eclipse Maven Project
Archetype - maven-archetype-quickstart
GroupID - com.gm.oracle --> the unique project name - will create all oracle work under this group-id
ArtifactID - com-gm-oracle-datahandler --> this will be the name of the jar file
Package - com.gm.oracle.datahandler --> a combination of groupid and artifact-id-part

- Oracle JDBC Jar in pom.xml
https://blogs.oracle.com/dev2dev/entry/oracle_maven_repository_instructions_for#Eclipse

<dependency>
 <groupId>com.oracle.jdbc</groupId>
 <artifactId>ojdbc7</artifactId>
 <version>12.1.0.2</version>
</dependency>

-- Settings needed for the Oracle JDBC dependency to work:
https://blogs.oracle.com/dev2dev/entry/how_to_get_oracle_jdbc#settings

- Connection vs DataSource
https://docs.oracle.com/cd/B10501_01/java.920/a96654/connpoca.htm

-----------------------------------------
Package 2: Utilities - com.gm.utils.java
-----------------------------------------

------------------------------------------------------------
Package 3: User management programs - com.gm.oracle.services
------------------------------------------------------------
Archetype - maven-archetype-webapp
Group Id - com.gm.oracle
Artifcat Id - comgmOracleServices --> Note '-' are not used as Jersey does not like path with dashes (see more explanation below)
Package - com.gm.oracle.services

Name of the war file is the part of the path in the url.
If war name is xyz.war, then url will be http://localhost:8080/xyz
Jersey does not like dashes in the URL so, x-y-z.war cannot be used.

WAR file gets produced in Maven repo as well as the project 'target'folder.
However, the Maven repo will also contain '-version' like '-1' attached to the filename.
comgmOracleServices/target/comgmOracleServices.war --> in project folder
~/.m2/repository/com/gm/oracle/comgmOracleServices/1/comgmOracleServices-1.war --> in maven repo
--> USE THE ONE IN PROJECT FOLDER TO DEPLOY TO TOMCAT OR OTHER SERVER

POM.XML
-------
NOTE: 'artifactId' reference in 'finalname' - and - that local JARs are also referenced explicitly to avoid compile errors

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.gm.oracle</groupId>
	<artifactId>comgmOracleServices</artifactId>
	<packaging>war</packaging>
	<name>comgmOracleServices Maven Webapp</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<version.jdk>1.8</version.jdk>  <!-- 1.7 for JDK 7 -->
		<version.jersey>2.25.1</version.jersey>
		<version.servlet.api>3.1.0</version.servlet.api>  <!-- use 3.0.1 for Tomcat 7 or Java EE 6 (i.e. Glassfish 3.x) -->
	</properties>

	<repositories>
		<!-- Local repository -->
		<repository>
			<id>ownjars</id>
			<name>ownjars</name>
			<url>file:/tmp/java/ownjars</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<!-- Local jar -->
		<dependency>
			<groupId>com.gm.oracle</groupId>
			<artifactId>com-gm-oracle-datahandlers</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<!-- Local jar -->
		<dependency>
			<groupId>com.gm.utils</groupId>
			<artifactId>com-gm-utils-java</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

		<!-- Jersey -->
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet</artifactId>
			<version>${version.jersey}</version>
		</dependency>

		<!-- Jackson -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-jackson</artifactId>
			<version>${version.jersey}</version>
		</dependency>

		<!-- Moxy -->
		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-moxy</artifactId>
			<version>${version.jersey}</version>
		</dependency>

	</dependencies>

	<build>
		<finalName>${artifactId}</finalName>
	</build>
	
	<version>1</version>
</project>

========================================================
              ECLIPSE - NO MAVEN
========================================================

======================
PACKAGES
======================
Note: New ones are in brackets

Package 1: Data handlers - com.dba.ora.dh  (com.gm.oracle.datahandler)
Package 2: Utilities - com.dba.utils (com.gm.oracle.util)
Package 3: User management programs - com.dba.ora.um (com.gm.oracle.service)

==================================
PROJECTS - ECLIPSE ONLY - NO MAVEN
==================================
--------------------------------------
Project - Data Handlers - Java project
--------------------------------------
Package - com.dba.ora.dh 
Project - DhOracle
Programs - 
  DbConnOracle.java - db connection methods - NOT using OracleDataSource
  DbConnOraclePooled.java - db connection methods - using OracleDataSource (will not work if requests connect to different databases)
  DhOracle.java - data handler methods
External jars - ojdbc7.jar, xsu12.jar, xmlparserv2.jar (all from Oracle - see setup help doc in this repository)

-------------------------------------
Project - Utilities - Java project
-------------------------------------
Package - com.dba.utils
Project - Utils
Programs -
  RandomString.java - to generate random string to generate random passwords
External jars - none as of now
  
------------------------------------
Project - User Management REST API - Dynamic Web Project (in Eclipse) (not Java project)
------------------------------------
Package - com.dba.ora.um
Project - RestUMOra
Programs -
  User.java - defines the 'user'
  UserDao.java - data access object for user object
  UserService.java - the Rest API
External jars - Jersey, Jackson, Oracle JDBC Driver (actually needed for data-handlers, but here, copy to Tomcat/lib and CLASSPATH)
  
------------------------------------
URLs
------------------------------------
To reset pw: http://localhost:8080/RestUMOra/rest/UserService/users/resetpw
To unlock  : http://localhost:8080/RestUMOra/rest/UserService/users/unlock
json - {"id":"username","dbServiceOrSID":"dbserviceorsid","dbScanOrHost":"hostorscan", "port":"port"}

Path method : http://localhost:8080/RestUMOra/rest/UserService/users/resetpwpath/userId/dbOrService/scanOrHost/port
