-----------------------------------------------------------
REST with Jersey and Jackson - for MySqlService:

--> Added a dummy constructor MySqlDatabase() {} for this:
(http://stackoverflow.com/questions/7625783/jsonmappingexception-no-suitable-constructor-found-for-type-simple-type-class)
No suitable constructor found for type [simple type, class gm.mysql.dh.MySqlDatabase]: can not instantiate from JSON object 
(missing default constructor or creator, or perhaps need to add/enable type information?)
 at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream@17dbff8; line: 2, column: 4]

-----------------------------------------------------------
REST with Jersey and Jackson - for MySqlService:

--> Added getPassword() method in the MySqlDatabase class. POJO conversion expects every field's get methods
Also, possibly we can set things like objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
(http://unknownerror.org/opensource/chjj/marked/q/stackoverflow/4486787/jackson-with-json-unrecognized-field-not-marked-as-ignorable)
Unrecognized field "password" (class gm.mysql.dh.MySqlDatabase), not marked as ignorable (5 known properties: "port", "hostname", 
"username", "dbname", "connection"]) at [Source: org.glassfish.jersey.message.internal.ReaderInterceptorExecutor
$UnCloseableInputStream@17e9e79; line: 6, column: 18] (through reference chain: gm.mysql.dh.MySqlDatabase["password"])

---------------------------
27-Mar-2016 21:52:44.412 WARNING [ContainerBackgroundProcessor[StandardEngine[Ca
talina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThread
s The web application [UserManager1] appears to have started a thread named [Thr
ead-31] but has failed to stop it. This is very likely to create a memory leak.
http://wiki.apache.org/tomcat/MemoryLeakProtection

----------------------------------------
Eclipse runnable jar file creation - picks up incorrect launch configuration:
    http://stackoverflow.com/questions/18218704/cant-create-a-runnable-jar-file-via-eclipse
  Either run the project once to automatically create a run configuration or go into the project options and create one manually.
  
  Try creating a new launch configuration from scratch:
  Run -> Run Configurations...
  Right click "Java Application" in the list on the left and select "New"
  On the right enter a descriptive name.
  In the Main tab browse for your project and search for and select the appropriate main class.
  Close the dialog
  Now try exporting your runnable JAR again using that run configuration.

