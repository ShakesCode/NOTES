=======================================
BASIC REST 

ECLIPSE-MAVEN, TOMCAT, JERSEY, JACKSON
=======================================

NOTE:  SEE DOC restful-api-coding-setup.txt -- contains setup needs

Initial tutorial - only Jersey - https://www.tutorialspoint.com/restful/

http://stackoverflow.com/questions/30423776/post-to-jersey-rest-service-getting-error-415-unsupported-media-type
--> states need for Jackson in addition to Jersey for POJO

https://www.nabisoft.com/tutorials/java-ee/producing-and-consuming-json-or-xml-in-java-rest-services-with-jersey-and-jackson
--> has pom.xml entries for both Jersey and Jackson

https://www.javainterviewpoint.com/json-example-jersey-jackson/ --> Later 2016 example

https://examples.javacodegeeks.com/enterprise-java/rest/jersey/json-example-with-jersey-jackson/ --> Looks oldish, 2013

https://www.mkyong.com/webservices/jax-rs/json-example-with-jersey-jackson/
http://www.vogella.com/tutorials/REST/article.html

=================================
CREATE MAVEN PROJECT IN ECLIPSE
=================================
Similar to dynamic web project in non-maven Eclipse)
Good one (very basic) - http://crunchify.com/how-to-create-dynamic-web-project-using-maven-in-eclipse/

Workspace: workspace-scratch1
Workspace Folder: C:\Data\PROGRAMMING\JAVA\Maven\workspace-scratch1

Eclipse --> new --> maven project 
Choose archetype 'org.apache.maven.archetypes' --> 'maven-archetype-webapp'

Group ID: com.gm.scratch1.rest
Artifact ID: BasicRestJJ
Package: com.gm.scratch1.webapp.BasicRestJJ (retained default auto-filled)
Button 'Finish'

This will create the WEB-INF and web.xml --> which would not be created in simple project without archetype

Also, it will create an index.jsp in src/main/java/webapp folder
  Index.jsp has the text "Hello World!" initially.
  
The pom.xml will still be created as that is standard for Maven projects

=================================
POM.XML - ADD JERSEY AND JACKSON
=================================
NOTE: In the properties section, use the required/latest jersey, servlet and jdk versions
NOTE: The two dependencies of jersey-container-servlet and jersey-media-json-jackson download many more to maven local repository

      <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.jdk>1.8</version.jdk>  <!-- 1.7 for JDK 7 -->
        <version.jersey>2.25.1</version.jersey>
        <version.servlet.api>3.1.0</version.servlet.api>  <!-- use 3.0.1 for Tomcat 7 or Java EE 6 (i.e. Glassfish 3.x) -->
      </properties>
    
        <!-- Jersey -->       
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
            <version>${version.jersey}</version>
        </dependency>
        
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>${version.jersey}</version>
        </dependency>

