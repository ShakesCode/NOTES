==================================
SUPERSET - INSTALL, CONFIGURE, USE
==================================
https://superset.incubator.apache.org/installation.html
connect strings - http://docs.sqlalchemy.org/en/rel_1_0/core/engines.html#oracle
                  http://docs.sqlalchemy.org/en/rel_1_0/dialects/oracle.html

For Fedora and RHEL-derivatives, the following command will ensure that the required dependencies are installed:

sudo yum upgrade python-setuptools
sudo yum install gcc gcc-c++ libffi-devel python-devel python-pip python-wheel openssl-devel libsasl2-devel openldap-devel

- INSTALL VIRTUALENV
pip install virtualenv

- CREATE A VIRTUAL ENVIRONMENT
virtualenv venv
. ./venv/bin/activate

Once you activated your virtualenv everything you are doing is confined inside the virtualenv. 
To exit a virtualenv just type deactivate.

-- ACTUAL STEPS
root@superset1:~# cd ~
root@superset1:~# virtualenv venv
New python executable in /root/venv/bin/python2
Also creating executable in /root/venv/bin/python
Installing setuptools, pip, wheel...done.

root@superset1:~# . ./venv/bin/activate

root@superset1:~# . ./venv/bin/activate
(venv) root@superset1:~# which pip
/root/venv/bin/pip

root@superset1:cd ~/venv/bin
# pwd
/root/venv/bin

root@superset1:~/venv/bin# ls -l
total 52
-rw-r----- 1 root root 2069 Mar 23 20:16 activate
-rw-r----- 1 root root 1011 Mar 23 20:16 activate.csh
-rw-r----- 1 root root 2165 Mar 23 20:16 activate.fish
-rw-r----- 1 root root 1137 Mar 23 20:16 activate_this.py
-rwxr-xr-x 1 root root  240 Mar 23 20:16 easy_install
-rwxr-xr-x 1 root root  240 Mar 23 20:16 easy_install-2.7
-rwxr-xr-x 1 root root  212 Mar 23 20:16 pip
-rwxr-xr-x 1 root root  212 Mar 23 20:16 pip2
-rwxr-xr-x 1 root root  212 Mar 23 20:16 pip2.7
lrwxrwxrwx 1 root root    7 Mar 23 20:16 python -> python2
-rwxr-xr-x 1 root root 7144 Mar 23 20:16 python2
lrwxrwxrwx 1 root root    7 Mar 23 20:16 python2.7 -> python2
-rwxr-xr-x 1 root root 2328 Mar 23 20:16 python-config
-rwxr-xr-x 1 root root  219 Mar 23 20:16 wheel

- INSTALL PIP AND SETUPTOOLS
pip install --upgrade setuptools pip

(venv) root@superset1:~# pip install --upgrade setuptools pip
Requirement already up-to-date: setuptools in ./venv/lib/python2.7/site-packages
Requirement already up-to-date: pip in ./venv/lib/python2.7/site-packages

- INSTALL ORACLE MODULE
NOTE: DO IT INSIDE VIRTUAL-ENV

Install cx_Oracle module to connect to Oracle
(venv) root@superset1:~# pip install cx_Oracle
Collecting cx_Oracle
  Downloading cx_Oracle-6.2.1-cp27-cp27mu-manylinux1_x86_64.whl (579kB)
    100% |████████████████████████████████| 583kB 246kB/s 
Installing collected packages: cx-Oracle
Successfully installed cx-Oracle-6.2.1

Verify with 'pip list'

--------------------------------------------------------
- INSTALL ORACLE INSTANT CLIENT (SEE ORACLE-KB for that)
--------------------------------------------------------

NOTE: DO THIS OUTSIDE OF VIRTUAL-ENV

==========================================
Superset installation and initialization
==========================================

# Install superset
pip install superset

-- VERIFY
(venv) root@superset1:~# which superset
/root/venv/bin/superset

(venv) root@superset1:~# which gunicorn
/root/venv/bin/gunicorn

# Create an admin user (you will be prompted to set username, first and last name before setting a password)
fabmanager create-admin --app superset

(username admin, password admin or something)

Username [admin]: admin
User first name [admin]: admin
User last name [user]: admin
Email [admin@fab.org]: admin@admin.org
Password: 
Repeat for confirmation: 
Recognized Database Authentications.
Admin User admin created.

# Initialize the database
superset db upgrade

-- LOOKS LIKE THIS CREATES A DB HERE:
sqlite:////root/.superset/superset.db

# Load some data to play with
superset load_examples

# Create default roles and permissions
superset init

# Start the web server on port 8088, use -p to bind to another port
superset runserver

(venv) root@superset1:~# superset runserver
Starting server with command: 
gunicorn -w 2 --timeout 60 -b  0.0.0.0:8088 --limit-request-line 0 --limit-request-field_size 0 superset:app

[2018-03-23 20:51:24 +0000] [4541] [INFO] Starting gunicorn 19.7.1
[2018-03-23 20:51:24 +0000] [4541] [INFO] Listening at: http://0.0.0.0:8088 (4541)
[2018-03-23 20:51:24 +0000] [4541] [INFO] Using worker: sync
[2018-03-23 20:51:24 +0000] [4546] [INFO] Booting worker with pid: 4546
[2018-03-23 20:51:24 +0000] [4551] [INFO] Booting worker with pid: 4551

# To start a development web server, use the -d switch
# superset runserver -d

=======================
TROUBLESHOOTING
=======================
---------------------------------------------------------------------
- IMPORTANT - Superset does not view Oracle views - FIX IT AS FOLLOWS
---------------------------------------------------------------------
https://github.com/apache/incubator-superset/issues/3658
https://github.com/apache/incubator-superset/commit/e96590744f96afb6800fec0f30da51e15612e7fd

Edit the file ~/venv/lib/python2.7/site-packages/superset/connectors/sqla/views.py
At line 247, right after the comment "# Fail before adding if the table can't be found":
--> comment out the following line:
#if not table.database.has_table(table):

--> Add the following lines:
      try:
          table.get_sqla_table_object()         
      except Exception as e:

IMPORTANT- Make sure indentation is correct, otherwise superset runserver gives error on indentation
REFERENCE INDENTATION FROM MODIFIED FILE:

    def pre_add(self, table):
        with db.session.no_autoflush:
            table_query = db.session.query(models.SqlaTable).filter(
                models.SqlaTable.table_name == table.table_name,
                models.SqlaTable.schema == table.schema,
                models.SqlaTable.database_id == table.database.id)
            if db.session.query(table_query.exists()).scalar():
                raise Exception(
                    get_datasource_exist_error_mgs(table.full_name))

        # Fail before adding if the table can't be found
        #if not table.database.has_table(table):
        try:
            table.get_sqla_table_object()
        except Exception:
            raise Exception(_(
                'Table [{}] could not be found, '
                'please double check your '
                'database connection, schema, and '
                'table name').format(table.name))

---------------------------------------------------------------------
Superset does not recognize DBA_ views even after views fix 
---------------------------------------------------------------------
FIX: Provide schema as SYS if the DB connection is not as SYS user
