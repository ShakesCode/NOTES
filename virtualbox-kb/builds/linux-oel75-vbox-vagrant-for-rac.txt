====================================================================================
VIRTUALBOX MACHINE FOR RAC AND GENERAL PURPOSE - AND PACKAGE AS VAGRANT BOX
====================================================================================

=============
DOWNLOAD
=============
- Download OEL 75 ISO from https://edelivery.oracle.com/osdc/faces/SoftwareDelivery#

=============
INSTALL
=============

------------------------
BASIC MACHINE SETTINGS
------------------------
- Memory = 4GB --> DO NOT KEEP THIS TOO LOW - LOW MEMORY MAKES INSTALL VERY SLOW
- Video Memory = 24MB
- Disk size = 80GB, VMDK, AutoExtend
- Time Zone = India
- Name oel75<myname>

------------------------
- Software options:
------------------------
MAIN:
Server with GUI

Add-On OPTIONS:
DNS Name Server
FTP Server
Hardware Monitoring Utilities
KDE (newly selected though GUI already chosen)
Large Systems Performance
NFS Client
Performance Tools
Compatibility Libraries
Development Tools
Security Tools
System Administration Tools

------------------------------------------------------------------------
- Installation Destination (partitioninig of disk)
------------------------------------------------------------------------
--> Initially default is set as 'automatic partitioning selected' --> click that and modify as follows
--> It will use LVM

Choose 'configure automatically' - and then modify

Home - remove this one
Boot - 1GB (default) - standard parition 
Root - remaining disk space (about 73 GB) - xfs
Swap - 6GB (increased from default 4GB) - xfs

Change the volume group name so that boot, root and swap look like the following: (remove reference to hostname)
/boot 
sda1

/
ol-root

/swap
ol-swap

Save changes by pressing 'Done'

------------------------
OTHER SETTINGS
------------------------
Disable Kdump
Enable network, and set hostname (from localhost.localdomain to oel75<myname>)

------------------------
- BEGIN INSTALLATION
------------------------
It starts install, and also shows 'Root Password' and 'User Creation' option in that screen
--> Set root password to 'root'
--> Did not opt to create any other users at this time

------------------------------------------------
- Reboot (at end of installation)
------------------------------------------------
It shows multiple boot options (3 in my case) - chose the first one which is UEK kernel 

------------------------
UPON REBOOT
------------------------
- Accept license
- Network/Hostname - did not change anything
  --> IPV4 says DHCP - left as is
  
- Privacy
Chose not to allow location access

- Time Zone
Chose my city

- About 'myself'
Gave name, username and password as 'myself'

------------------------
LOGON
------------------------
It already logs on you as 'myself' user
The myself user can sudo to root as well immediately

- REBOOT AGAIN
It gives login screen, with user 'myself' showing up - click it and enter password

------------------------
CHECK A FEW THINGS
------------------------
# hostname
localhost.localdomain
(because we did not set hostname)

# uname -r
4.1.12-112.16.4.el7uek.x86_64
(kernel version)
(note - uek-devel kernel may be needed for guest-additions - see guest-additions section in this doc)

# ip addr list
Does not show any IP addresses 
(because we did not set them)

- start networking
Use GUI to enable:
Applications --> System Tools --> Settings --> Network --> Wired --> set slider to ON.
Also, click the settings icon in that screen and make sure  that it is set to 'connect automatically'.
Do an ifconfig, find out the newly popped up network with 10.0.2.15, and check if the sysconnfig file has onboot=yes in it:
	/etc/sysconfig/network-scripts/ifcfg-$IFNAME

[root@localhost network-scripts]# ifconfig -a
enp0s3: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 10.0.2.15  netmask 255.255.255.0  broadcast 10.0.2.255
        inet6 fe80::df09:9144:c765:de3a  prefixlen 64  scopeid 0x20<link>
        ether 08:00:27:a7:2f:39  txqueuelen 1000  (Ethernet)
        RX packets 9647  bytes 6530020 (6.2 MiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 6162  bytes 582778 (569.1 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 0  (Local Loopback)
        RX packets 848  bytes 74920 (73.1 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 848  bytes 74920 (73.1 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

virbr0: flags=4099<UP,BROADCAST,MULTICAST>  mtu 1500
        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255
        ether 52:54:00:64:07:0f  txqueuelen 0  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

virbr0-nic: flags=4098<BROADCAST,MULTICAST>  mtu 1500
        ether 52:54:00:64:07:0f  txqueuelen 500  (Ethernet)
        RX packets 0  bytes 0 (0.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 0  bytes 0 (0.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

====================
NEXT STEPS
====================

Install guest additions
Enable host-guest bidirectional copy-paste and drag-and-drop
Stop NTP
Stop firewall (for RAC install firewall may have to be stopped)
Disable SELinux
Increase screen resolution - https://unix.stackexchange.com/questions/25236/increasing-screen-size-resolution-on-a-virtualbox-instance-of-centos

Install sshpass
PAM modules
Vagrant
Chef

OPTIONAL:
Check if open-jdk is good enough (and version) and install Oracle's JDK if that is better
Install oracle preinstall rpm / validation rpm
Install other required rpms (not all are installed with preinstall rpm)
Install oracleasm modules

------------------------
INSTALL GUEST ADDITIONS
------------------------

NOTE: This may need kernel uek-devel 
--> which seemed to be installed automatically or otherwise while installing OS or Guest Additions

When checked after installing guest-additions:
# rpm -qa|grep uek
kernel-uek-devel-4.1.12-112.16.4.el7uek.x86_64
kernel-uek-firmware-4.1.12-112.16.4.el7uek.noarch
kernel-uek-4.1.12-112.16.4.el7uek.x86_64

- STEPS
Logon as root
Click Devices --> Insert Guest Additions CD Image

This asked if it can be installed and automatically installed whatever was necessary.

It ran fine, except for the message:

Warning: unknown version of the X Window System installed.  Not installing
X Window System drivers.


----------------------------------------------------------------
Enable host-guest bidirectional copy-paste and drag-and-drop
----------------------------------------------------------------
https://www.howtogeek.com/187535/how-to-copy-and-paste-between-a-virtualbox-host-machine-and-a-guest-machine/
In Virtualbox menu, 
choose the machine -> settings -> Advanced -> 
- Shared Clipboard -> Bidirectional
- Drag'n'Drop -> Bidirectional

-------------
Stop NTP
-------------
NTP did not seem to be installed
First install ntp - in the case we want to use it sometime (https://www.tecmint.com/install-ntp-server-in-centos/)

# yum install ntp
# service ntpd status
(this shows as inactive - leave as is)

-------------
STOP FIREWALL
-------------
[root@localhost network-scripts]# service firewalld stop
Redirecting to /bin/systemctl stop firewalld.service

[root@localhost network-scripts]# chkconfig firewalld off
Note: Forwarding request to 'systemctl disable firewalld.service'.
Removed symlink /etc/systemd/system/multi-user.target.wants/firewalld.service.
Removed symlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.

-----------------
DISABLE SELINUX
-----------------

Edit the file /etc/sysconfig/selinux (which is symlink to /etc/selinux/config) 
and set SELINUX=permissive (or disabled) instead of 'enforcing'

# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#     enforcing - SELinux security policy is enforced.
#     permissive - SELinux prints warnings instead of enforcing.
#     disabled - No SELinux policy is loaded.
SELINUX=permissive
# SELINUXTYPE= can take one of three two values:
#     targeted - Targeted processes are protected,
#     minimum - Modification of targeted policy. Only selected processes are protected.
#     mls - Multi Level Security protection.
SELINUXTYPE=targeted


---------------------------
INCREASE SCREEN RESOLUTION
---------------------------
TBD

----------------------------
INSTALL SSHPASS
----------------------------
This is a utility that allows providing password to ssh commands.

- Download 
# wget ftp://rpmfind.net/linux/dag/redhat/el7/en/x86_64/dag/RPMS/sshpass-1.05-1.el7.rf.x86_64.rpm
- Install
# rpm -Uvh sshpass-1.05-1.el7.rf.x86_64.rpm

-----------------------------------------
INSTALL ORACLE PREINSTALL RPM - for 12cR1
-----------------------------------------
# yum install oracle-rdbms-server-12cR1-preinstall

--------------------
PAM MODULES
--------------------
Latest PAM modules should already be there

[root@localhost pam.d]# yum list pam
Loaded plugins: langpacks, ulninfo
Installed Packages
pam.x86_64                      1.1.8-22.el7                       @anaconda/7.5
Available Packages
pam.i686                        1.1.8-22.el7                       ol7_latest   

[root@localhost pam.d]# rpm -qa |grep pam
fprintd-pam-0.5.0-4.0.el7_0.x86_64
gnome-keyring-pam-3.20.0-3.el7.x86_64
pam-1.1.8-22.el7.x86_64

================================
VAGRANT - MAKE IT A VAGRANT BOX
================================
http://www.oaktable.net/content/preparing-oracle-linux-vagrant-box

Create vagrant user:
# useradd vagrant

Set its password to vagrant:
# passwd vagrant (and then give vagrant as password)

Download its insecure authorized keys from Vagrant git:
# sudo su - vagrant
As vagrant user:
$ mkdir ~/.ssh
$ curl -k https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub > .ssh/authorized_keys
(you can use wget also)
$ chmod 600 ~/.ssh/authorized_keys

---------------------------------
Add vagrant to sudoers file
---------------------------------
Edit /etc/sudoers:

Comment out 'Defaults requiretty' --> so that vagrant ssh and sudo does not require a terminal
#Defaults    requiretty

Add vagrant to sudoers
vagrant ALL=(ALL) NOPASSWD: ALL

================
INSTALL CHEF
================
# mkdir /root/Downloads/chef_installer
# cd /root/Downloads/chef_installer
# curl -LO https://omnitruck.chef.io/install.sh
# chmod +x install.sh

NOTE - Running install.sh without version installs the latest - which is not always desirable
Instead, provide a version also "./install.sh -v 13.2.20"

Anyway, ran without version and it installed version 14.1.1
# ./install.sh

# which chef-client
/usr/bin/chef-client

# chef-client -v
Chef: 14.1.1


#
