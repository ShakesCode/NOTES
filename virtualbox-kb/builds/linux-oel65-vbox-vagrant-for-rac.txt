========================================================================
ORACLE LINUX 6.5 64BIT VIRTUALBOX BUILD - AND VAGRANT PACKAGING
========================================================================

===========================
PACKAGES TO INSTALL
===========================
Choose the following packages:

Web browser (in some main option this comes)
Compatibility libraries - All
Legacy Unix - All
Network tools - nmap, wireshark, ipstate, iptraf, arpwatch, dropwatch
Security tools - aide
Sys Adm Tools - lscsci, mc, mgetty, tree, ocfs2, ORACLEASM SUPPORT, rdist (this helps maintain identical copies of files across machines)
Systems management - SNMP support - net-snmp utils,  ipmitool, watchdog
UEK3 Repo - kernel-uek-debug, kernel-uek-devel, kernel-uek-doc, kernel-uek-firmware

====================================
PASSWORD FOR ROOT USER
====================================
For root user gave 'oracle' as password

===========================
INSTALL GUEST ADDITIONS
===========================
This should be successful if UEK3 repo items are installed (see packages section)
Enable copy-paste between host and guest - both ways

===========================
NETWORK ENABLE
===========================
Either eth0 or Networking or both may not be enabled by default.  
See that eth0 does not have an IP below:

# ip addr list
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 08:00:27:2a:36:eb brd ff:ff:ff:ff:ff:ff
    inet6 fe80::a00:27ff:fe2a:36eb/64 scope link 
       valid_lft forever preferred_lft forever

- MAKE ETH0 START AUTOMATICALLY
System --> Preferences --> Network Connections
-> In that, choose eth0, and check the box 'connect automatically' and press the button 'apply'

OR --> EDIT the file /etc/sysconfig/network-scripts/ifcfg-eth0 and set ONBOOT=yes as below

ONBOOT=yes

- START ETH0 (and network also if necessary)
Click the icon in the Gnome screen right top corner - or do '# ifup eth0'

If networking itself is not up, then do 
# service network start

# ip addr list
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
       
2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000
    link/ether 08:00:27:2a:36:eb brd ff:ff:ff:ff:ff:ff
    inet 10.0.2.15/24 brd 10.0.2.255 scope global eth0
    inet6 fe80::a00:27ff:fe2a:36eb/64 scope link 
       valid_lft forever preferred_lft forever
       
=========================== 
ORACLEASM
===========================
IF 'oracleasm support' was chosen during installation under 'system administration tools' then it should be already there.

# which oracleasm
/usr/sbin/oracleasm

========================================================================
UPDATE CA CERTIFICATES FOR THE MACHINE (NOT FIREFOX OR OTHER BROWSERS)
========================================================================
https://access.redhat.com/solutions/1549003

# yum update ca-certificates
# update-ca-trust extract

The following message is normal:
update-ca-trust: Warning: The dynamic CA configuration feature is in the disabled state

======================================================
UPDATE CA CERTIFICATES OF FIREFOX (TBD)
======================================================
TBD

==================
VAGRANT USER
==================
Password = vagrant
http://www.oaktable.net/content/preparing-oracle-linux-vagrant-box

Create vagrant user:
# useradd vagrant

Set its password to vagrant:
# passwd vagrant (and then give vagrant as password)

Download its insecure authorized keys from Vagrant git:
# sudo su - vagrant

As vagrant user:
$ mkdir ~/.ssh
$ curl -k https://raw.githubusercontent.com/mitchellh/vagrant/master/keys/vagrant.pub > .ssh/authorized_keys
(you can use wget also)

$ chmod 600 ~/.ssh/authorized_keys

---------------------------------
Add vagrant to sudoers file
---------------------------------
Edit /etc/sudoers:

Comment out 'Defaults requiretty' --> so that vagrant ssh and sudo does not require a terminal
#Defaults    requiretty

Add vagrant to sudoers
vagrant ALL=(ALL) NOPASSWD: ALL

====================================
CLONE AND CREATE 12CR1 READY MACHINE
====================================

----------------------------
CLONE THE MODEL MACHINE
----------------------------
Clone the machine oel65XY to oel65XYRac12cr1
--> Do a full-clone and DO NOT choose reset MAC address option

-----------------------------------
SET HOSTNAME OF THE CLONED MACHINE
-----------------------------------
Logon as root

Change hostname
# echo oel65gmrac12cr1 > /proc/sys/kernel/hostname

Edit /etc/sysconfig/network file and place the new hostname in it

----------------------------
INSTALL 12CR1 PREINSTALL RPM
----------------------------

# yum install oracle-rdbms-server-12cR1-preinstall

-----------------------------------
INSTALL OTHER REQUIRED PACKAGES
-----------------------------------
NOTE: The preinstall rpm does not install other required packages.
