==================================
    SNAPSHOT STANDBY DATABASE
==================================

- General DG cheat sheet -
http://www.datadisk.co.uk/html_docs/oracle_dg/cheatsheet.htm

- Using both standby (no DG) and DG -
http://satya-dba.blogspot.in/2012/06/snapshot-standby-databases-oracle.html

- Using standby (no DG) - 
https://docs.oracle.com/cd/B28359_01/server.111/b28294/manage_ps.htm#i1033033

http://oracledbabhuvan.blogspot.in/2011/11/snapshot-standby-database-in-11gr2.html
https://databaseinternalmechanism.com/oracle-dataguard/creating-snapshot-standby/

- Using DG and DGMGRL - 

http://docs.oracle.com/cd/B28359_01/server.111/b28295/dbresource.htm#g1044508
http://www.oracle.com/technetwork/testcontent/usingsnapshot-088081.html#t1

http://www.oracle.com/us/solutions/sap/wp-ora4sap-flashback11g-1-303814.pdf

http://www.databasejournal.com/features/oracle/article.php/3834931/Using-Oracle-11gs-Active-Data-Guard-and-Snapshot-Standby-Features.htm

-- some jots
ALTER DATABASE RECOVER MANAGED STANDBY DATABASE CANCEL;

RECOVER MANAGED STANDBY DATABASE DISCONNECT FROM SESSION;

DGMGRL> disable database 'DB_UNIQUE_NAME_STBY'
Disabled.
DGMGRL> enable database 'DB_UNIQUE_NAME_STBY'
Enabled.
DGMGRL> show database 'DB_UNIQUE_NAME_STBY'

=========================
USING DGMGRL
=========================
http://www.oracle.com/technetwork/testcontent/usingsnapshot-088081.html#t1

- On the physical standby database, determine if Flashback Database is enabled by querying V$DATABASE.

SQL> select flashback_on from gv$database;
NO
NO

- Disable the MRP process
https://docs.oracle.com/cd/B28359_01/server.111/b28295/cli.htm#g1025435

DGMGRL> EDIT DATABASE 'DB_UNIQUE_NAME_STBY' SET STATE='APPLY-OFF';
Succeeded

-- Verify (see APPLY-OFF)
DGMGRL> show database 'DB_UNIQUE_NAME_STBY'

Database - DB_UNIQUE_NAME_STBY

  Role:            PHYSICAL STANDBY
  Intended State:  APPLY-OFF
  Transport Lag:   0 seconds (computed 0 seconds ago)
  Apply Lag:       (unknown)
  Apply Rate:      (unknown)
  Real Time Query: OFF
  Instance(s):
    INSTANCE1 (apply instance)
    INSTANCE2

Database Status:
SUCCESS

- Enable flashback
SQL> alter database flahback on;

- Create a restore point on standby (commands TBD)
--> This step was skipped

- Stop all instances and bring up only one instance
srvctl stop database -d DB_UNIQUE_NAME_STBY
srvctl start instance -d DB_UNIQUE_NAME_STBY -i INSTANCE_NAME -o mount

- Convert to snapshot standby

Invoke DGMGRL on primary and run the convert command.
DGMGRL> CONVERT DATABASE standby_unique_name TO SNAPSHOT STANDBY
Converting database 'standby_unique_name' to a Snapshot Standby database, please wait...
Database "standby_unique_name" converted successfully

-- Verify

---- Using SQLPLUS On the snapshot-standby:  
NOTE: The other instances also seemed to come up upon converting the standby

SQL> select open_mode from gv$database;

OPEN_MODE
--------------------
READ WRITE
READ WRITE

SQL> Select DB_UNIQUE_NAME, OPEN_MODE, DATABASE_ROLE from gv$database

DB_UNIQUE_NAME		           OPEN_MODE	    DATABASE_ROLE
------------------------------ -------------------- ----------------
DB_UNIQUE_NAME_STBY		       READ WRITE	    SNAPSHOT STANDBY
DB_UNIQUE_NAME_STBY		       READ WRITE	    SNAPSHOT STANDBY

NOTE: It also creates a restore point (if flashback is on) 
SQL> select name, guarantee_flashback_database from v$restore_point;

NAME                                                    GUA
----------------------------------------------------    ---
SNAPSHOT_STANDBY_REQUIRED_05/02/2017 08:04:38           YES

---- Using DGMGRL - on Primary
DGMGRL> show configuration

Configuration - DG_XYZ

  Protection Mode: MaxPerformance
  Databases:
    PRIM_UNIQUE_NAME   - Primary database
    STBY_UNIQUE_NAME1 - Physical standby database
    STBY_UNIQUE_NAME2 - Snapshot standby database

Fast-Start Failover: DISABLED

Configuration Status:
SUCCESS

DGMGRL> show database 'STBY_UNIQUE_NAME2'

Database - STBY_UNIQUE_NAME2

  Role:            SNAPSHOT STANDBY
  Intended State:  APPLY-OFF
  Transport Lag:   0 seconds (computed 0 seconds ago)
  Apply Lag:       16 minutes 40 seconds (computed 0 seconds ago)
  Instance(s):
    INSTANCE1 (apply instance)
    INSTANCE2

Database Status:
SUCCESS
