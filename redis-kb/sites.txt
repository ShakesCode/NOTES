https://redis.io/download —> download and install

https://www.tutorialspoint.com/redis/redis_commands.htm —> tutorial

https://seanmcgary.com/posts/how-to-build-a-fault-tolerant-redis-cluster-with-sentinel —> cluster with sentinel

https://redislabs.com/ebook/foreword/ —> Main book

https://redislabs.com/ebook/part-1-getting-started/chapter-2-anatomy-of-a-redis-web-application/

https://redislabs.com/ebook/part-2-core-concepts/chapter-5-using-redis-for-application-support/5-4-service-discovery-and-configuration/5-4-2-one-redis-server-per-application-component/  —> one redis server per application
Note that you can run multiple Redis servers on a single machine; they just need to run on different ports. 
Alternatively, if you want to reduce your system administration load, you can also use different “databases” in Redis. 
Either way, by having different data split up into different key spaces, your transition to more or larger servers is somewhat simplified. 

https://redislabs.com/ebook/part-3-next-steps/chapter-10-scaling-redis/ —> scaling
One method of addressing the slave resync issue is to reduce the total data volume
that’ll be sent between the master and its slaves. This can be done by setting up intermediate
replication servers to form a type of tree, as can be seen in figure 10.1, which
we borrow from chapter 4.

https://redislabs.com/ebook/part-3-next-steps/chapter-10-scaling-redis/10-2-scaling-writes-and-memory-capacity/ —> scaling
When presharding your system in order to preparefor growth, you may be in a situation where you have too little data to
make it worth running as many machines as you could need later. 
To still be able to separate your data, you can run multiple Redis servers on a single machine for each of your shards, 
or you can use multiple Redis databases inside a single Redis server.
 If you’re running multiple Redis servers on a single
machine, remember to have them listen on different ports, and make sure
that all servers write to different snapshot files and/or append-only files.

https://redislabs.com/ebook/part-3-next-steps/chapter-10-scaling-redis/10-2-scaling-writes-and-memory-capacity/10-2-1-handling-shard-configuration/ —> getting a shard connection
Also see chapter 5

REDIS ON OPENSTACK
https://blueprints.launchpad.net/trove/+spec/redis-cluster
--> https://specs.openstack.org/openstack/trove-specs/specs/liberty/redis-cluster.html
Dragonflow - for availability - https://docs.openstack.org/dragonflow/latest/specs/redis_availability.html
Dragonflow, Redis driver - https://docs.openstack.org/developer/dragonflow/specs/redis_driver.html

