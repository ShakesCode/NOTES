===============================
UPGRADE FROM 11G to 12C RAC
(convert to PDB is not in this doc - should be added or made another doc)
===============================
Complete Checklist for Manual Upgrades to Oracle Database 12c Release 1 (12.1) 
Based on Doc ID 1503653.1

Oracle upgrade doc: https://docs.oracle.com/database/121/UPGRD/toc.htm

Upgrading strategies: https://docs.oracle.com/database/121/UPGRD/upgrade.htm#UPGRD60130
	Upgrading a Non-CDB Oracle Database
	Upgrading an Earlier Release and Plugging a PDB into a CDB
	Upgrading a Multitenant (CDB) Oracle Database
	Upgrading a Pluggable Database (PDB)

Pre-upgrade steps: https://docs.oracle.com/database/121/UPGRD/preup.htm#UPGRD002
			(see from Requirements for Upgrading Oracle Database onwards)
Upgrading a non-CDB DB using manual method: https://docs.oracle.com/database/121/UPGRD/upgrade.htm#CHDBHAHE
Upgrading a non-CDB DB using DBUA: https://docs.oracle.com/database/121/UPGRD/upgrade.htm#UPGRD105
Upgrading and plugging as PDB into a CDB: https://docs.oracle.com/database/121/UPGRD/upgrade.htm#UPGRD60155 section 3.1.2

Upgrading in dataguard configuration: https://docs.oracle.com/database/121/SBYDB/upgrades.htm#SBYDB1200
(note, this is not the max-availability upgrade)

Migrate non-CDB to PDB:
http://www.oracle.com/webfolder/technetwork/tutorials/obe/db/12c/r1/pdb/pdb_migrate_noncdb/pdb_migrate_noncdb.html
https://oracle-base.com/articles/12c/multitenant-migrate-non-cdb-to-pdb-12cr1
https://docs.oracle.com/en/cloud/paas/database-dbaas-cloud/csdbi/mig-12c-non-cdb-12c.html (in cloud)

==========
PRE-CHECKS (some steps below are bundled into pre-check.sql in this repository)
==========
Note: The pre-check run from 12c home says EM DB Control (SYSMAN) will be removed during upgrade
	--> this is not in the script pre-check.sql yet

CHECK: The 12c home pre-check can be run from its location itself
CHECK: Check if DB Links work as they were after upgrade and conversion to PDB

---------------------------------------------
STATISTICS PREFERENCE SETTING
---------------------------------------------
Before upgrade (on 11.2 version):
Set 'concurrent statistics gathering' value to 'FALSE before the upgrade. 

SQL> SELECT dbms_stats.get_prefs('CONCURRENT') from dual;

BEGIN 
DBMS_STATS.SET_GLOBAL_PREFS('CONCURRENT','FALSE'); 
END; 
/

In both 11.2 as in 12.1 concurrency is disabled by default for both manual and automatic statistics gathering. 
If the database requires changing this value back to the original setting, do this after the upgrade.

Please see  Note 2037154.1 DBMS_STATS.GATHER_DICTIONARY_STATS Fails with "ORA-06502: PL/SQL: numeric or value error: character string buffer too small"

-----------------------------------------------
DUPLICATES AND INVALIDS - pre-check.sql 
-----------------------------------------------
-- Check duplicate objects between SYS and SYSTEM
prompt
prompt Check duplicate objects between SYS and SYSTEM
prompt
select OBJECT_NAME, OBJECT_TYPE from
DBA_OBJECTS where OBJECT_NAME||OBJECT_TYPE
in (select OBJECT_NAME||OBJECT_TYPE from
DBA_OBJECTS where OWNER='SYS') and
OWNER='SYSTEM' and OBJECT_NAME not in
('AQ$_SCHEDULES_PRIMARY', 'AQ$_SCHEDULES',
'DBMS_REPCAT_AUTH');

-- Check invalid objects - pre-check.sql
prompt
prompt Checking invalid objects in SYS and SYSTEM users
prompt
select substr(owner,1,6) owner, substr(object_name,1,30) object, substr(object_type,1,30)
type, status, LAST_DDL_TIME from dba_objects where status <>'VALID' and owner like 'SYS%';

----------------------------------------------------------------------------------------------
RUN PRE-UPGRADE DIAGNOSTIC SQL METALINK NOTE 556610.1 - pre-check.sql
----------------------------------------------------------------------------------------------
Run the script dbupgdiag.sql to diagnose oracle recommended items
NOTE: The script needs to be run in SQL*Plus both before the upgrade on the source database and after the upgrade on the upgraded database as SYS user. This will help to determine the status of the database before and after upgrade.
--> dbupgdiag.sql is in this folder in another sql file

It asks for a '1' - give an existing subdirectory name in the current folder to store its logfile.
Check logfile for errors, duplicates etc.

Pay attention to duplicates, invalid objects etc.
For fixing, metalink note 1030426.6

-----------------------------------------------
FIX ISSUES - pre-check.sql
-----------------------------------------------
@$ORACLE_HOME/rdbms/admin/utlrp.sql

-----------------------------------------------
RUN PRE-UPGRADE SCRIPT FROM 12C HOME - pre-check.sql
-----------------------------------------------
Run $ORACLE_HOME_12C/rdbms/admin/preupgrd.sql - pre-check.sql

After the run, it asks to do the following:
    1. Review results of the pre-upgrade checks:
     /u01/app/oracle/cfgtoollogs/DB_UNIQUE_NAME/preupgrade/preupgrade.log
    
    2. Execute in the SOURCE environment BEFORE upgrade:
     /u01/app/oracle/cfgtoollogs/DB_UNIQUE_NAME/preupgrade/preupgrade_fixups.sql
    
    3. Execute in the NEW environment AFTER upgrade:
     /u01/app/oracle/cfgtoollogs/DB_UNIQUE_NAME/preupgrade/postupgrade_fixups.sql
    
-----------------------------------------------
DEPRECATED CONNECT ROLE
-----------------------------------------------
Applies to 10g and 9i only.
CONNECT role in 9i and 10g DB's had more privileges than 'create session'.
Users having CONNECT role and using those privileges due to that must  be made to get those privileges in some other way
--> because 11g and 12c do not give those privileges to CONNECT role
 
Asses the need using the following SQLs:

 SQL> SELECT grantee FROM dba_role_privs
WHERE granted_role = 'CONNECT' and
grantee NOT IN (
'SYS', 'OUTLN', 'SYSTEM', 'CTXSYS', 'DBSNMP',
'LOGSTDBY_ADMINISTRATOR', 'ORDSYS',
'ORDPLUGINS', 'OEM_MONITOR', 'WKSYS', 'WKPROXY',
'WK_TEST', 'WKUSER', 'MDSYS', 'LBACSYS', 'DMSYS',
'WMSYS', 'EXFSYS', 'SYSMAN', 'MDDATA',
'SI_INFORMTN_SCHEMA', 'XDB', 'ODM');

SQL> SELECT GRANTEE,PRIVILEGE
FROM DBA_SYS_PRIVS
WHERE GRANTEE ='CONNECT';

------------------------------------------
Update Access Control Lists and Network Utility Packages 
------------------------------------------

Starting with Oracle Database 12c, the access control of the UTL packages (UTL_TCP, UTL_SMTP, UTL_MAIL, UTL_HTTP, and UTL_INADDR) 
is implemented using Oracle Database Real Application Security and does not require Oracle XML DB.

-- Dependencies on Network Utility Packages 

Execute the following query

SQL> SELECT * FROM DBA_DEPENDENCIES
WHERE referenced_name IN ('UTL_TCP','UTL_SMTP','UTL_MAIL','UTL_HTTP','UTL_INADDR','DBMS_LDAP')
AND owner NOT IN ('SYS','PUBLIC','ORDPLUGINS');

Actions are discussed in Post Upgrade tasks (Step 7.12), as the DBMS_NETWORK_ACL_ADMIN package 
is introduced after upgrading the database and not available in prior releases.

---------------------------------
GENERATE DB-LINK RE-CREATE SCRIPT
---------------------------------
Upon upgrade passwords in DB-links will be encrypted in 12c - unlike un-encrypted in 11g.
Create a db-link re-creator script using the following SQL.
NOTE: Upon upgrade AND conversion to PDB, check if DB-Links work as they were in 11g - most possibly, we may need to create them again at PDB level

    SELECT 'CREATE '||DECODE(U.NAME,'PUBLIC','public ')||'DATABASE LINK '||CHR(10)
    ||DECODE(U.NAME,'PUBLIC',Null, 'SYS','',U.NAME||'.')|| L.NAME||chr(10)
    ||'CONNECT TO ' || L.USERID || ' IDENTIFIED BY "'||L.PASSWORD||'" USING
    '''||L.HOST||''''
    ||chr(10)||';' TEXT
    FROM SYS.LINK$ L, SYS.USER$ U
    WHERE L.OWNER# = U.USER#;

---------------------------------------------------------------------------------
CHECK TIMEZONE FILE IF IT NEEDS UPDATE - for TIMESTAMP WITH TIME ZONE Data Type 
---------------------------------------------------------------------------------
The default  time zone file shipped with the  Oracle 12c Release 1 is  version 18.
--> In the case it is less than 18, then manually fix it using the note 1509653.1 to update DST using DBMS_DST.

Note 1665676.1 Actions For DST Updates When Upgrading To Or Applying The 12.1.0.2 Patchset
or
Note 1522719.1 Actions For DST Updates When Upgrading To 12.1.0.1 Base Release

To check:
--------
SQL> conn / as sysdba
Connected.
SQL>SELECT version FROM v$timezone_file;

VERSION
----------
14

SQL> select TZ_VERSION from registry$database;

TZ_VERSION
----------
        14

--------------------------------------------
COLLECT DICTIONARY STATISTICS
--------------------------------------------
SQL> exec dbms_stats.gather_dictionary_stats;

----------------------------------------------------------------------------------------
4.7   Save Database Control Files and Data with the emdwgrd Utility 
----------------------------------------------------------------------------------------

After upgrading to Oracle Database 12c , if you want to downgrade Oracle Enterprise Manager Database Control you must save your Database Control files and data before upgrading your database. 
The emdwgrd utility can be used to keep a copy of your database control files and data before upgrading your database. 
The emdwgrd utility resides in the ORACLE_HOME/bin directory in the Oracle Database 12c home.

1. Set ORACLE_HOME to your old Oracle Home
2. Set ORACLE_SID to the SID of the database being upgraded.
3. Set PATH, LD_LIBRARY_PATH and SHLIB_PATH to point to the Oracle home from which the database is being upgraded.
4. Change directory to Oracle Database 12c  home.
5. Run the emdwgrd command.
   a. Run the following command for single instance database:

$ emdwgrd -save -sid old_SID -path save_directory
where old_SID is the SID of the database being upgraded and save_directory is the path to the storage place you have chosen for your Database Control files and data.

 b. For RAC database, remote copy is required across the cluster nodes. Define an environment variable to indicate which remote copy is configured. For example: setenv EM_REMCP /usr/bin/scp

$ emdwgrd -save -cluster -sid old_SID -path save_directory
Note: If 10g Oracle Home is on a shared device, add -shared to the previous command line.

The above command(s) may core dump on the HP-UX Itanium platform, which is a known issue. For more information, refer to following article:

Note 562980.1 - emdwgrd core dumps : emdwgrd[228]: 10366 Memory fault(coredump)
6. Enter the SYS password for the database to be upgraded.
Note: On RAC databases you will be prompted to run '/tmp/racdwgrd_dbctl.sh' on each of the nodes.

--------------------------------------------
ENSURE NO MV-REFRESH IS  IN PROGRESS
--------------------------------------------
SQL> select s.obj#,o.obj#,s.containerobj#,lastrefreshdate,pflags,xpflags,o.name,o.owner#, bitand(s.mflags, 8) 
from obj$ o, sum$ s
where o.obj# = s.obj# and o.type# = 42 AND bitand(s.mflags, 8) = 8;
Note 1442457.1 : During 11g Upgrade, Mview refresh warning.
If any active refresh is reported, wait for its completion.

------------------------------------------------
CHECK IF ANY FILE NEEDS MEDIA RECOVERY
------------------------------------------------
select * from v$recover_file;

------------------------------------------------
CHECK IF ANY FILES ARE IN BACKUP MODE
------------------------------------------------
select * from v$backup where status != 'NOT ACTIVE';

--------------------------------------------
PURGE PENDING TWO PHASE COMMITS
--------------------------------------------
SQL> SELECT local_tran_id FROM dba_2pc_pending;
SQL> EXECUTE dbms_transaction.purge_lost_db_entry('');
SQL> COMMIT;

----------------------
PURGE RECYCLE BIN
----------------------
SQL> purge dba_recyclebin;

----------------------------------------
SYNCH STANDBY
----------------------------------------

To check if a standby database exists and to synchronize it:
1. Issue the following query:

SQL> SELECT SUBSTR(value,INSTR(value,'=',INSTR(UPPER(value),'SERVICE'))+1)
FROM v$parameter
WHERE name LIKE 'log_archive_dest%' AND UPPER(value) LIKE 'SERVICE%';
2. If the query in the previous step returns a row, then synchronize the standby database with the primary database.

 Make sure all the logs are transported to the standby server after a final log switch in the primary.
 Start the recovery of the standby database with the NODELAY option.

dgmgrl /
DGMGRL> show configuration;

This should show a good configuration with no transport/apply lag

-------------------------------
Disable all batch and cron jobs
-------------------------------
OEM jobs
Cron jobs
Other batch scheduled jobs

--------------------------------------------------------------
4.15 Verify SYS and SYSTEM Default tablespace
--------------------------------------------------------------

Ensure the users SYS and SYSTEM have 'SYSTEM' as their default tablespace. 
You must have sufficient space in the 'SYSTEM' tablespace or set extents to unlimited

SQL> SELECT username, default_tablespace
     FROM dba_users
     WHERE username in ('SYS','SYSTEM');
     
If DEFAULT_TABLESPACE is anything other than SYSTEM tablespace, 
modify the default tablespace for user SYS and SYSTEM to SYSTEM by using the command below:

SQL> ALTER user SYS default tablespace SYSTEM;
SQL> ALTER user SYSTEM default tablespace SYSTEM;

--------------------
SSL USERS
--------------------
Execute the following query 

SQL> SELECT name FROM sys.user$
     WHERE ext_username IS NOT NULL
     AND password = 'GLOBAL';
     
If any SSL users are found then Step 7.9 has to be followed after the upgrade.

----------------------
NOTE LOCATION OF FILES
----------------------
SELECT name FROM v$controlfile;
SELECT file_name FROM dba_data_files;
SELECT group#, member FROM v$logfile;

----------------------
BACKUP CONFIG FILES
----------------------
Create init.ora (pfile from spfile)
init.ora, listener.ora, tnsnames.ora

--------------------------------------------
REMOVE DB-CONTROL OF ENTERPRISE MANAGER
--------------------------------------------
emctl stop dbcontrol
@$ORACLE_HOME_12C/rdbms/admin/emremove.sql

--------------------------------------------
CHECK LABEL SECURITY AND DATABASE VAULT
--------------------------------------------
@$ORACLE_HOME_12C/rdbms/admin/olspreupgrade.sql
   - It prepares the move of AUD$ table from SYSTEM to SYS.
   - It processes the audit records to minimize downtime.
   - It moves records to an Interim temporary table.
   
------------------------------------------------------------------
DROP 12C ROLES AND USERS IF EXIST IN THE 11G DB
------------------------------------------------------------------
--> see output from pre-upgrade script run earlier

--------------------------------------------
REMOVE ANY HIDDEN PARAMETERS AND RESTART DB
--------------------------------------------
SELECT name, value from SYS.V$PARAMETER WHERE name LIKE '\_%' ESCAPE '\' order by name;

------------------------------------------------------------------
CHECK XDB ACL's HAVE START_DATE AND END_DATE ATTRIBUTES
------------------------------------------------------------------
SQL> select aclid, start_date, end_date from xds_ace where start_date is not null; 
If this query returns rows, then follow Note 1958876.1 Upgrade to 12.1 fails with ORA-01830 date format picture ends before converting entire input string ORA-06512: at "SYS.XS_OBJECT_MIGRATION"  to avoid failure in XDB's upgrade.

------------------------------------------------------------------------------------------------------------------------------------
4.23 Check the Mitigation patch has been applied on the source Oracle home ,it disables the Java development 
------------------------------------------------------------------------------------------------------------------------------------
in the Database which cause error during upgrade

NOTE : This step is ONLY applicable if you have applied  Mitigation Patch  on the source database

Please "enable" the Java development in source database .

Connect to the database as a SYSDBA user
  SQL> exec dbms_java_dev.enable;
  
And then upgrade the database. 

Please refer Note 1985725.1 Database Upgrade failed with Errors “ORA-02290: check constraint (SYS.JAVA_DEV_DISABLED) violated” & “ORA-04045: SYS.DBMS_ISCHED”

------------------------------------------------------------------
4.24 Changing Or Choosing the Database Character Set
------------------------------------------------------------------
In Oracle Database 12c with multitenant architecture, all pluggable databases (PDBs) in a container database (CDB) must have

The same Database character set (NLS_CHARACTERSET) or the NLS_CHARACTERSET need to be a (Plug-in compatible) binary subset of the CDB NLS_CHARACTERSET
The same National character set (NLS_NCHAR_CHARACTERSET) as the CDB's root container
 If you have PDBs with Unicode characterset, its recommended to create the CDB with characterset as AL32UTF8. Please note we cannot migrate the CDB's characterset using DMU.

Please see: 
Note 1968706.1 12c Multitenant Container Databases (CDB) and Pluggable Databases (PDB) Character set restrictions / ORA-65116/65119: incompatible database/national character set ( Character set mismatch: PDB character set CDB character set )
Note ID 225912.1 [Section E] Changing Or Choosing the Database Character Set ( NLS_CHARACTERSET )

------------------------
IF UPGRADING FROM 10G
------------------------
SEE MAIN MOS DOC

--------------------------
IF UPGRADING FROM 11.2.0.3
--------------------------
SEE MAIN MOS DOC

--------------------------------------------
DISABLE/BLACKOUT ALERTS, BACKUPS ETC
--------------------------------------------
Disable scripts, cron, oem etc that do backups, alerting etc.
Stop/suspend jobs using DBMS_SCHEDULER, DBMS_JOB etc.

----------------------
DATA GUARD SETUP
----------------------
Disable fast start failover, and configuration
DGMGRL> DISABLE FAST_START FAILOVER;
DGMGRL> DISABLE CONFIGURATION;

Connect to both primary & standby and stop the broker.
sqlplus / as sysdba
SQL> ALTER SYSTEM SET DG_BROKER_START=FALSE SCOPE=BOTH;

Take backup of broker configuration files in both primary and standby
    Do this for both config files dg_config_file1.dat  and dg_config_file2.dat
    Name f/s file to distinguish these between primary and standby
    SQL> show parameter dg_broker_config_file
    ASMCMD> cp <ASM file>  <f/s file>
    
----------------------
BACKUP SPFILE
----------------------
SQL> create pfile='$ORACLE_HOME/dbs/initDBNAME.ora.preUpgrade' from spfile;

--------------------------------------------
CHECK AND STOP/COMPLETE ANY ACTIVE BACKUPS
--------------------------------------------
SQL> SELECT * FROM v$backup WHERE status != 'NOT ACTIVE';

===============
PREPARE PRIMARY
===============

SET CLUSTER DATABASE TO FALSE (only at spfile level now)
SQL> alter system set cluster_database=FALSE scope=spfile;

CREATE A GUARANTEED RESTORE POINT 
On node1: srvctl stop database -d <primay_db_unique_name>
On node2 and other nodes: repeat this stop database in the case they have not stopped due to cluster_database=FALSE setting.

SQL> startup mount;
SQL> CREATE RESTORE POINT before_upgrade_to_12102 GUARANTEE FLASHBACK DATABASE;
Restore point created.

SQL> select NAME,SCN,TIME,GUARANTEE_FLASHBACK_DATABASE,STORAGE_SIZE from V$RESTORE_POINT;
SQL> SHUTDOWN IMMEDIATE;

BACKUP INIT.ORA FILE
SQL> create pfile='$ORACLE_HOME/dbs/initDBNAME.ora.bkp_pre12cUpgrade' from spfile;

CREATE PASSWORD FILE
orapwd file=orapwDBINSTANCENAME

COPY INIT.ORA AND PASSWORD FILE TO 12C HOME
cp $ORACLE_HOME/dbs/initDBNAME.ora $ORACLE_HOME_12C/dbs/.
cp $ORACLE_HOME/dbs/orapwDBINSTANCENAME $ORACLE_HOME_12C/dbs/.

CREATE LINKS IN 12C HOME /network/admin to TNS_ADMIN FILES
cd $ORACLE_HOME_12C
ln -s $TNS_ADMIN/listener.ora 
ln -s $TNS_ADMIN/tnsnames.ora
ln -s $TNS_ADMIN/sqlnet.ora
ln -s $TNS_ADMin/ldap.ora

UPDATE ORATAB IN ALL NODES TO POINT TO 12C HOME
For DB_UNIQUE_NAME and INSTANCE_NAME entries

<< PREPARE STANDBY >>:
---------------------
a.	Create guaranteed restore point in mount stage.

Shutdown Database
	srvctl stop database -d <stby_db_unique_name>

Create Guaranteed Restore point
	sqlplus / as sysdba
	SQL> startup mount;
	
SQL> CREATE RESTORE POINT before_upgrade_to_12102 GUARANTEE FLASHBACK DATABASE;

Restore point created.

SQL> select NAME,SCN,TIME,GUARANTEE_FLASHBACK_DATABASE,STORAGE_SIZE from V$RESTORE_POINT;

NOTE: Check if the SCN from this view is less than or equal to the Primary Restore Point’s SCN. 
If not, drop & re-Create a Restore Point from the Primary again.

Stop the Database
	SQL> SHUTDOWN IMMEDIATE;

b.	Prepare Standby’s  12.1.0.2 ORACLE_HOME 
i.	Copy  pfile & password file from OLD HOME  to the NEW HOME.
ii.	Verify the links are present  for .ora file in the 12.1.0.2 ORACLE_HOME.

NOTE: Make sure to perform this on all the nodes.

c.	In all Nodes, Update /etc/oratab file to point to the new home for the corresponding DB NAMEs and the SIDs.
Eg:-
INSTANCE_NAME:/app/oracle/product/12.1.0.2/dbs:N
DB_UNIQUE_NAME:/app/oracle/product/12.1.0.2/dbs:N

d.	On node1, Bring up standby in the new home.
i.	Set ENV Variables. This should now point to new 12c home.
. oraenv
ORACLE_SID = << INSTANCE NAME>>

ii.	Mount the standby.
sqlplus / as sysdba
SQL> startup mount
iii.	Start Redo Apply.
SQL> alter database recover managed standby database using current logfile disconnect from session;

---------------
UPGRADE PRIMARY
---------------

SQL> startup upgrade

Then on unix (Note: -n 6 --> 6 is the parallelism for upgrade actions by catupgrd.sql)
 cd $ORACLE_HOME/rdbms/admin  (ensure that this goes to the new 12c orcale home)
 $ORACLE_HOME/perl/bin/perl catctl.pl -n  6 -l $ORACLE_HOME/diagnostics catupgrd.sql
 
Check logs in nohup.out and $ORACLE_HOME/diagnostics directory for error-free execution

If issues, then rerun catctl.pl after fixing them. ORA-0001 in re-run can be ignored.
Upon completion, catupgrd0.log should show all is well, components are upgrdaed and status is valid.

START THE DB (USING 12C HOME)
$ sqlplus / as sysdba 
SQL> startup

VERIFY 0
SQL> select * from v$version;

BANNER                                                                               CON_ID
-------------------------------------------------------------------------------- ----------
Oracle Database 12c Enterprise Edition Release 12.1.0.2.0 - 64bit Production              0
PL/SQL Release 12.1.0.2.0 - Production                                                    0
CORE    12.1.0.2.0      Production                                                        0
TNS for Linux: Version 12.1.0.2.0 - Production                                            0
NLSRTL Version 12.1.0.2.0 - Production                                                    0


VERIFY 1
Run $ORACLE_HOME_12C/rdbms/admin/utlu121s.sql
It reports status of RDBMS and various options in the following file and on screen:
CATCTL REPORT = /u01/app/oracle/product/12.1.0.2/cfgtoollogs/DB_UNIQUE_NAME/upgrade/upg_summary.log

Screen Output:  (also content of CATCTL REPORT file)
-------------
SQL> @utlu121s.sql
PL/SQL procedure successfully completed.
PL/SQL procedure successfully completed.

CATCTL REPORT = /u01/app/oracle/product/12.1.0.2/cfgtoollogs/DB_UNIQUE_NAME/upgrade/upg_summary.log

PL/SQL procedure successfully completed.
Function created.

Oracle Database 12.1 Post-Upgrade Status Tool           02-14-2017 22:58:56

Component                               Current         Version  Elapsed Time
Name                                    Status          Number   HH:MM:SS

Oracle Server                          UPGRADED      12.1.0.2.0  00:19:19
JServer JAVA Virtual Machine              VALID      12.1.0.2.0  00:04:04
Oracle Real Application Clusters          VALID      12.1.0.2.0  00:00:02
Oracle Workspace Manager                  VALID      12.1.0.2.0  00:01:13
OLAP Analytic Workspace                   VALID      12.1.0.2.0  00:00:36
OLAP Catalog                         OPTION OFF      11.2.0.4.0  00:00:00
Oracle OLAP API                           VALID      12.1.0.2.0  00:00:31
Oracle XDK                                VALID      12.1.0.2.0  00:00:54
Oracle Text                               VALID      12.1.0.2.0  00:01:30
Oracle XML Database                       VALID      12.1.0.2.0  00:06:26
Oracle Database Java Packages             VALID      12.1.0.2.0  00:00:19
Oracle Multimedia                         VALID      12.1.0.2.0  00:02:55
Spatial                                UPGRADED      12.1.0.2.0  00:12:57
Oracle Application Express                VALID     4.2.5.00.08  00:39:33
Final Actions                                                    00:02:26
Post Upgrade                                                     00:03:25

Total Upgrade Time: 01:39:33

PL/SQL procedure successfully completed.
Function dropped.

SQL>
SQL> --
SQL> -- Update Summary Table with con_name and endtime.
SQL> --
SQL> UPDATE sys.registry$upg_summary SET reportname = :ReportName,
  2                                  con_name = SYS_CONTEXT('USERENV','CON_NAME'),
  3                                  endtime  = SYSDATE
  4         WHERE con_id = -1;

1 row updated.

SQL> commit;

Commit complete.


VERIFY 2
Check for existence of string "BEGIN catuppst.sql" in catupgrd0.log.
If it is missing, then run $ORACLE_HOME_12C/rdbms/admin/catuppst.sql

VERIFY 3
NOTE: Expect hundreds of invalid objects including in SYS and SYSTEM - fix them after finding
Run utluiobj.sql (for newly invalid objects)
Run dbupgdiag.sql with argument ./ (for other invalids)

FIX
Run utlrp.sql to fix any invalid objects etc.

DO VERIFY 3 AND FIX AGAIN UNTIL ALL INVALIDS ARE VALID

MAKE DB CLUSTER DATABASE AGAIN
alter system set cluster_database=TRUE scope=spfile;
shutdown immediate;

UPDATE OCR CONFIGURATION
srvctl upgrade database -d <DB_UNIQUE_NAME> -o <ORACLE_HOME_12C>

STARTUP
srvctl start database -d <DB_UNIQUE_NAME>

TIMEZONE FILE UPDATE
If pre upgrade info tool output needed you to update the time zone files, then follow the note 1579838.1  Actions For DST Updates When Upgrading To Or Applying The 11.2.0.4 Patchset

UPDATE ORATAB, INIT and PASSWORD FILES
Ensure Oratab is updated in all nodes with new oracle home.
Ensure init.ora and password files are same in all nodes for this DB and its instances.

===================================================================================
Step 7: Post Upgrade Steps
===================================================================================
7.1 Environment Variables and oratab file

Make sure the following environment variables point to the Oracle 12c Release 1 (12.1) directories             
               - ORACLE_BASE
               - ORACLE_HOME
               - PATH, LD_LIBRARY_PATH and SHLIB_PATH

Ensure that your oratab file and any client scripts that set the value of ORACLE_HOME point to the new Oracle home that is created for the new Oracle Database 12c release,

7.2 Initialization parameter file

Edit init.ora  (if used init.ora instead of spfile itself)

If you changed the CLUSTER_DATABASE parameter prior the upgrade set it back to TRUE
Migrate your initialization parameter file to a server parameter file.
Create a server parameter file with an initialization parameter file.

-- If used init.ora instead of spfile itself
SQL> create spfile from pfile;
This will create an spfile as a copy of the init.ora file located in $ORACLE_HOME/dbs (UNIX) & %ORACLE_HOME%\database (Windows).

7.3 Password File (re-create)

a) If the REMOTE_LOGIN_PASSWORDFILE initialization parameter is set to either exclusive or shared, 
   create a password file with ORAPWD.

b) Refer the following document to avoid ORA-28017 during post upgrade.
ORA-28017: The password file is in the legacy format (Doc ID 2112456.1)

7.4 COMPATIBLE Initialization Parameter

The COMPATIBLE initialization parameter controls the compatibility level of your database. 
When you are certain that you no longer need the ability to downgrade your database to its original release

Perform a backup of your database before you raise the COMPATIBLE initialization parameter (optional).
If you are using a server parameter file, then complete the following steps:
              a. Update the server parameter file to set or change the value of the COMPATIBLE initialization parameter.
                 For example, to set the COMPATIBLE initialization parameter to 12.0.0, enter the following statement:

SQL> ALTER SYSTEM SET COMPATIBLE = '12.0.0' SCOPE=SPFILE;
              b. Shut down and restart the instance.

If you are using an initialization parameter file, then complete the following steps:
              a. Shut down the instance if it is running:

SQL> SHUTDOWN IMMEDIATE
              b. Edit the initialization parameter file to set or change the value of the COMPATIBLE initialization parameter.
                 For example, to set the COMPATIBLE initialization parameter to for Oracle Database release 12.1, enter the following in the initialization parameter file:
                 COMPATIBLE = 12.1.0
              c. Start the instance using STARTUP.

7.5 Change passwords for Oracle-Supplied Accounts.

Depending on the release from which you upgraded, there might be new Oracle-supplied accounts. 
Oracle recommends that you lock all Oracle supplied accounts except for SYS and SYSTEM, and expire their passwords, thus requiring new passwords to be specified when the accounts are unlocked.

You can view the status of all accounts by issuing the following SQL statement:

SQL> SELECT username, account_status FROM dba_users ORDER BY username;
To lock and expire passwords, issue the following SQL statement:

SQL> ALTER USER username PASSWORD EXPIRE ACCOUNT LOCK;

7.6  Upgrade the Recovery Catalog After Upgrading Oracle Database

You can upgrade the Recovery catalog by executing the  UPGRADE CATALOG command 
Please refer Upgrading the Recovery Catalog for complete information and steps

7.7  Upgrade the Time Zone File Version After Upgrading Oracle Database

If the Pre-Upgrade Information Tool instructed you to upgrade the time zone files after completing the database upgrade,
then use the DBMS_DST PL/SQL package to update the RDBMS DST (timezone) version. 
(Note 1585343.1 : Scripts to automatically update the RDBMS DST (timezone) version in an 11gR2 or 12cR1 database . )

ATTENTION : Once you have updated the DST version you may still see the following warning returned by script postupgrade_fixups.sql :

******************************************************************************************
Check Tag:     OLD_TIME_ZONES_EXIST
Check Summary: Check for use of older timezone data file
Fix Summary:   Update the timezone using the DBMS_DST package after upgrade is complete.
*******************************************************************************************
  
Just ignore this warning, it is due to published Bug 17303129 : UPGRADE DATABASE FROM 11.1.0.7 TO 12.1.0.1, 
"OLDER TIMEZONE IN USE" OCCURRED

When such warning is returned then execute this query : 

SELECT PROPERTY_NAME, SUBSTR(property_value, 1, 30) value FROM DATABASE_PROPERTIES
WHERE PROPERTY_NAME LIKE 'DST_%' ORDER BY PROPERTY_NAME; 

if not DStv18 then Oracle suggests  to upgrade DST, if DSTv18 then it is Bug  17303129 and it can be safely ignored .


7.8  Upgrade Statistics Tables Created by the DBMS_STATS Package

If you created statistics tables using the DBMS_STATS.CREATE_STAT_TABLE procedure, then upgrade these tables by executing the following procedure:

EXECUTE DBMS_STATS.UPGRADE_STAT_TABLE('SYS','dictstattab');

In the example, 'SYS' is the owner of the statistics table and 'dictstattab' is the name of the statistics table. 
Execute this procedure for each statistics table.

7.8a Additionally, ran the following as prescribed by postupgrade_fixups.sql which was created by preupgrade.sql earlier
EXECUTE DBMS_STATS.GATHER_FIXED_OBJECTS_STATS;

7.9  Upgrade Externally Authenticated SSL Users

If you have upgraded from Oracle 9.2.0.x or 10.1.0.x, and you are using externally authenticated SSL users, then you must run the following command to upgrade those users:

ORACLE_HOME/rdbms/bin/extusrupgrade --dbconnectstring
<hostname:port_no:sid> --dbuser <db admin> --dbuserpassword
<password> -a
If you are upgrading from 10.2.0.x (or higher), then you are not required to run this command.

7.10  Install Oracle Text Supplied Knowledge Bases After Upgrading Oracle Database

The Oracle Text-supplied knowledge bases are part of the companion products for Oracle Database 12c and are not immediately available after an upgrade to Oracle Database 12c. 
Any Oracle Text features dependent on the supplied knowledge bases which were available before the upgrade do not function after the upgrade. 
To re-enable such features, you must install the Oracle Text supplied knowledge bases from the installation media.

After an upgrade, all user extensions to the Oracle Text supplied knowledge bases must be regenerated. These changes affect all databases installed in the given Oracle home

7.11  Update Your Oracle Application Express Configuration

If source database originally included Application Express Version 3.2 or higher, then NO additional configuration necessary .

If source database contained an earlier version of Application Express (HTML DB), then the latest version is automatically installed during the upgrade. 
You must complete a series of post installation steps to configure Application Express for use with the new Oracle  Database 12c.

7.12  Configure Fine-Grained Access to External Network Services

To avoid "ORA-24247: network access denied by access control list (ACL)" when executing UTL packages (Network related packages), access has to be granted to user using these packages.

The following example first looks for any ACL currently assigned to host_name.
If one is found, then the example grants user_name the CONNECT privilege in the ACL only if that user does not already have it. 
If no ACL exists for host_name, then the example creates a new ACL called ACL_name, grants the CONNECT privilege to user_name, and assigns the ACL to host_name.

DECLARE
acl_path VARCHAR2(4000);
BEGIN
SELECT acl INTO acl_path FROM dba_network_acls
WHERE host = 'host_name' AND lower_port IS NULL AND upper_port IS NULL;
IF DBMS_NETWORK_ACL_ADMIN.CHECK_PRIVILEGE(acl_path,'principal','privilege') IS NULL THEN
DBMS_NETWORK_ACL_ADMIN.ADD_PRIVILEGE(acl_path,'principal', is_grant, 'privilege');
END IF;
EXCEPTION
WHEN no_data_found THEN
DBMS_NETWORK_ACL_ADMIN.CREATE_ACL('ACL_name.xml','ACL description', 'principal', is_grant, 'privilege');
DBMS_NETWORK_ACL_ADMIN.ASSIGN_ACL('ACL_name.xml','host_name');
END;

COMMIT;
acl_name.xml => Enter a name for the access control list XML file.
ACL description => 'file description',
principal => 'user_or_role',
is_grant => TRUE|FALSE,
privilege => 'connect|resolve',
host_name => host name

Refer to the below note on how to use DBMS_NETWORK_ACL_ADMIN package and also to avoid ORA-24247 : network access denied by access control list (ACL).

Note 453786.1 ORA-24247 When Executing UTL_HTTP UTL_INADDR Packages
7.13  Enable Oracle Database Vault 

Refer to the following documents for enabling Oracle Database Vault:

Note 453903.1 - Enabling and Disabling Oracle Database Vault in UNIX
Note 453902.1 - Enabling and Disabling Oracle Database Vault in WINDOWS
7.14  Identify Invalid Objects With the utluiobj Script

Before the upgrade ,the list of invalid SYS/SYSTEM objects is written to registry$sys_inv_objs and non-SYS/SYSTEM objects was written to registry$nonsys_inv_objs by the Pre-Upgrade Information Tool
 
After the upgrade, run utluiobj.sql from $ORACLE_HOME/rdbms/admin/ to identify/compare any new invalid objects due to the upgrade.

7.15 Enable all batch and cron jobs diable at step 4.14 

 
 
REFERENCES


NOTE:1565816.1 - Upgrading to a higher release throws ORA-01031: insufficient privileges 

BUG:17303129 - UPGRADE DATABASE FROM 11.1.0.7 TO 12.1.0.1, "OLDER TIMEZONE IN USE" OCCURRED

NOTE:1585343.1 - Scripts to automatically update the RDBMS DST (timezone) version in an 11gR2 or 12cR1 database .
