CONVERT A 12C NON-CDB TO A CDB-PDB DATABASE
http://blog.yannickjaquier.com/oracle/multitenant-standalone-to-pluggable-migration.html
https://oracle-base.com/articles/12c/multitenant-migrate-non-cdb-to-pdb-12cr1

This scenario arises when we upgrade a 11g DB in-place to 12c.  
Then, the upgraded DB will be non-CDB.  
Oracle is going to deprecate non-CDB in 12c.
We therefore need to convert non-CDB 12c DB's to CDB with at least one PDB.

======================================
LIST DATAFILES IN THE NON-CDB DATABASE
======================================

- In CDB_DATA_FILES (of NON-CDB database)
SQL> select con_id || ' ' || tablespace_name || ' ' || file_name from cdb_data_files order by 1;

- In CDB_DATA_FILES (of the destination CDB database)
SQL> select con_id || ' ' || tablespace_name || ' ' || file_name from cdb_data_files order by 1;

- IN ASM
NOTE: Of non-CDB and the destination CDB database
$ asmcmd
ASMCMD> cd +DATA_DG01
ASMCMD> cd DB_UNIQUE_NAME
ASMCMD> ls -l
Type           Redund  Striped  Time             Sys  Name
                                                 Y    CONTROLFILE/
                                                 Y    DATAFILE/
                                                 Y    ONLINELOG/
                                                 Y    PARAMETERFILE/
                                                 Y    TEMPFILE/
PARAMETERFILE  UNPROT  COARSE   JUN 17 22:00:00  N    spfileCDB1.ora => +DATA_DG01/DB_UNIQUE_NAME/PARAMETERFILE/spfile.293.881900911

ASMCMD> cd DATAFILE
ASMCMD> ls -l
Type      Redund  Striped  Time             Sys  Name
DATAFILE  UNPROT  COARSE   JUN 16 11:00:00  Y    DBIDAT01.256.881900979
DATAFILE  UNPROT  COARSE   JUN 18 01:00:00  Y    SYSAUX.617.881900599
DATAFILE  UNPROT  COARSE   JUN 16 11:00:00  Y    SYSTEM.675.881900599
DATAFILE  UNPROT  COARSE   JUN 16 11:00:00  Y    UNDOTBS1.621.881900599
DATAFILE  UNPROT  COARSE   JUN 16 22:00:00  Y    UNDOTBS2.555.881900843
DATAFILE  UNPROT  COARSE   JUN 16 11:00:00  Y    USERS.560.881900601

ASMCMD> cd ../TEMPFILE
ASMCMD> ls -l
Type      Redund  Striped  Time             Sys  Name
TEMPFILE  UNPROT  COARSE   JUN 16 22:00:00  Y    TEMP.554.881900747

==================================================================
CREATE PDB DESCRIPTION XML FILE - in the NON-CDB DATABASE
==================================================================
- Stop the non-cdb database
$ srvctl stop database -d DB_UNIQUE_NAME

- Startup open read only
$  srvctl start database -d DB_UNIQUE_NAME -o 'read only'

- Create the description xml file (PDB1 is just a filename - you can give a different PDB name when creating pdb)
EXEC DBMS_PDB.DESCRIBE(pdb_descr_file => '/home/oracle/wip/upgrade12c/pdb-convert/PDB1.xml');

- Shutdown the non-cdb database
$ srvctl stop database -d DB_UNIQUE_NAME

===============================================
CREATE THE PDB - IN A DIFFERENT 'CDB' DATABASE
===============================================
NOTE: Create the PDB in a DIFFERENT DATABASE - using the files of the non-CDB database
OPTIONS: COPY, NOCOPY, MOVE

- FIRST, ENSURE db_create_file_dest is set to a disk group
--> for OMF standard adherence in the destination database for the new PDB
NOTE: This is a bit tricky - what if we have more than one diskgroup for tablespaces?
--> should we use FILE_NAME_CONVERT directive or PDB_FILE_NAME_CONVERT clause?

https://docs.oracle.com/database/121/ADMIN/cdb_plug.htm#GUID-39D2F826-7460-4439-B410-29E16C0CA0B1
db_create_file_dest                  string      +DATA_DG01

- Run the create-pdb command

#!/bin/ksh -x

#exec > create-pdb-using.out 2>> create-pdb-using.out

export ORACLE_SID=CDB11
export ORACLE_HOME=/u01/app/oracle/product/12.1.0.2
export LD_LIBRARY_PATH=/u01/app/oracle/product/12.1.0.2/lib
export PATH=/bin:/usr/bin:/etc:/usr/etc:/usr/local/bin:/usr/lib:/usr/sbin:/usr/ccs/bin:/usr/ucb:/home/oracle/bin:/u01/app/oracle/product/12.1.0.2/bin:/usr/bin/X11:/sbin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:

sqlplus -s '/ as sysdba' <<EOF

set timing on
set time on

select to_char(sysdate, 'DD-MON-YYYY HH24:MI:SS') from dual;

-- This worked
--CREATE PLUGGABLE DATABASE PDB1 USING '/home/oracle/wip/upgrade12c/pdb-convert/PDB1.xml' NOCOPY TEMPFILE reuse;

-- This worked
--CREATE PLUGGABLE DATABASE PDB1 USING '/home/oracle/wip/upgrade12c/pdb-convert/PDB1.xml' COPY TEMPFILE reuse ;

-- This works - when DB_CREATE_FILE_DEST is set in the destination DB
CREATE PLUGGABLE DATABASE PDB1 USING '/home/oracle/wip/upgrade12c/pdb-convert/PDB1.xml' MOVE TEMPFILE reuse ;

-- This works - when we have tablespaces on multiple disk groups. This creates OMF. Can map to same or different disk groups
CREATE PLUGGABLE DATABASE NONCDBPDB USING '/home/oracle/gowrish/pdb-convert/PDB1.xml' MOVE TEMPFILE reuse
FILE_NAME_CONVERT=('+DATA_DG01','+DATA_DG01','+FRA_DG01','+FRA_DG01');

-- WHAT ARE THESE?
--CREATE PLUGGABLE DATABASE PDB1 USING '/home/oracle/wip/upgrade12c/pdb-convert/PDB1.xml' NOCOPY TEMPFILE reuse FILE_NAME_CONVERT = ('+DATA_DG01/rl6db2_ttc/datafile/', '+DATA_DG01');

--CREATE PLUGGABLE DATABASE PDB1 USING '/home/oracle/wip/upgrade12c/pdb-convert/PDB1.xml' NOCOPY TEMPFILE reuse SOURCE_FILE_NAME_CONVERT = ('+DATA_DG01/rl6db2_ttc/datafile/', '+DATA_DG01');

select to_char(sysdate, 'DD-MON-YYYY HH24:MI:SS') from dual;

EOF

- CHECK IF PDB IS CREATED AND ITS STATUS
-- NOTE: Datafiles do not yet show up for this PDB in cdb_data_files

SQL> show pdbs
    CON_ID CON_NAME                       OPEN MODE  RESTRICTED
---------- ------------------------------ ---------- ----------
         2 PDB$SEED                       READ ONLY  NO
         3 CDB1PDB0                       READ WRITE NO
         4 PDB1                           MOUNTED    YES

==========================================================
COMPLETE THE MIGRATION OF THE PDB - in the DESTINATION CDB
==========================================================
Run the sql noncdb_to_pdb.sql -- see script below

   
#!/bin/ksh -x

#exec > noncdb-to-pdb.out 2>> noncdb-to-pdb.out

export ORACLE_SID=CDB11
export ORACLE_HOME=/u01/app/oracle/product/12.1.0.2
export LD_LIBRARY_PATH=/u01/app/oracle/product/12.1.0.2/lib
export PATH=/bin:/usr/bin:/etc:/usr/etc:/usr/local/bin:/usr/lib:/usr/sbin:/usr/ccs/bin:/usr/ucb:/home/oracle/bin:/u01/app/oracle/product/12.1.0.2/bin:/usr/bin/X11:/sbin:/usr/lib64/qt-3.3/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:

sqlplus -s '/ as sysdba' <<EOF

set timing on
set time on

select to_char(sysdate, 'DD-MON-YYYY HH24:MI:SS') from dual;

ALTER SESSION set container=PDB1;

@$ORACLE_HOME/rdbms/admin/noncdb_to_pdb.sql

select to_char(sysdate, 'DD-MON-YYYY HH24:MI:SS') from dual;

EOF

- PDB STATUS DURING PROCESSING (in destination CDB)

During the noncdb_to_pdb.sql run, status of PDB1 will show up as 'MIGRATE' and RESTRICTED-YES
SQL> show pdbs
    CON_ID CON_NAME                       OPEN MODE  RESTRICTED
---------- ------------------------------ ---------- ----------
         2 PDB$SEED                       READ ONLY  NO
         3 CDB1PDB0                       READ WRITE NO
         4 PDB1                           MIGRATE    YES

- PDB STATUS IN-BETWEEN PROCESSING CHANGES A BIT (in destination CDB)
SQL> show pdbs
    CON_ID CON_NAME                       OPEN MODE  RESTRICTED
---------- ------------------------------ ---------- ----------
         2 PDB$SEED                       READ ONLY  NO
         3 CDB1PDB0                       READ WRITE NO
         4 PDB1                           MOUNTED    YES

- After the sql ended, PDB seemed to go back to mounted state
SQL> show pdbs

    CON_ID CON_NAME                       OPEN MODE  RESTRICTED
---------- ------------------------------ ---------- ----------
         2 PDB$SEED                       READ ONLY  NO
         3 CDB1PDB0                       READ WRITE NO
         4 PDB1                           MOUNTED

SQL> SELECT name, open_mode FROM v$pdbs;

NAME                           OPEN_MODE
------------------------------ ----------
PDB$SEED                       READ ONLY
CDB1PDB0                       READ WRITE
PDB1                           MOUNTED

- OPEN THE PDB MANUALLY 
SQL> alter pluggable database pdb1 open read write instances=all;

Pluggable database altered.

-- NOTE: RESTRICTED has become NO now

SQL> show pdbs

    CON_ID CON_NAME                       OPEN MODE  RESTRICTED
---------- ------------------------------ ---------- ----------
         2 PDB$SEED                       READ ONLY  NO
         3 CDB1PDB0                       READ WRITE NO
         4 PDB1                           READ WRITE NO
         
SQL> alter pluggable database PDB1 save state;

Pluggable database altered.

- Check datafiles (in the destination CDB database)
NOTE: Now, the new PDB con-id 4 files show up

SQL>  select con_id || ' ' || tablespace_name || ' ' || file_name from cdb_data_files order by 1;

 CON_ID||''||TABLESPACE_NAME||''||FILE_NAME
-------------------------------------------------------------
1 SYSAUX +DATA_DG01/CDB1_SITE1/DATAFILE/sysaux.332.935289809
1 SYSTEM +DATA_DG01/CDB1_SITE1/DATAFILE/system.373.935289855
1 UNDOTBS1 +DATA_DG01/CDB1_SITE1/DATAFILE/undotbs1.337.935289911
1 UNDOTBS2 +DATA_DG01/CDB1_SITE1/DATAFILE/undotbs2.342.935290519
1 USERS +DATA_DG01/CDB1_SITE1/DATAFILE/users.338.935289911
3 MGMT_AD4J_TS +DATA_DG01/CDB1_SITE1/47EE09C404981C8DE053BC88420A7CD2/DATAFILE/mgmt_ad4j_ts.433.935390955
3 MGMT_ECM_DEPOT_TS +DATA_DG01/CDB1_SITE1/47EE09C404981C8DE053BC88420A7CD2/DATAFILE/mgmt_ecm_depot_ts.431.935390953
3 MGMT_TABLESPACE +DATA_DG01/CDB1_SITE1/47EE09C404981C8DE053BC88420A7CD2/DATAFILE/mgmt_tablespace.432.935390953
3 SYSAUX +DATA_DG01/CDB1_SITE1/47EE09C404981C8DE053BC88420A7CD2/DATAFILE/sysaux.368.935291083
3 SYSTEM +DATA_DG01/CDB1_SITE1/47EE09C404981C8DE053BC88420A7CD2/DATAFILE/system.429.935291083
3 USERS +DATA_DG01/CDB1_SITE1/47EE09C404981C8DE053BC88420A7CD2/DATAFILE/users.430.935291111
4 appDAT01 +DATA_DG01/CDB1_SITE1/48A4E591BF5C59B9E053BC88420AEC96/DATAFILE/appdat01.470.937978901
4 appIDX01 +DATA_DG01/CDB1_SITE1/48A4E591BF5C59B9E053BC88420AEC96/DATAFILE/appidx01.473.937978901
4 SYSAUX +DATA_DG01/CDB1_SITE1/48A4E591BF5C59B9E053BC88420AEC96/DATAFILE/sysaux.472.937978901
4 SYSTEM +DATA_DG01/CDB1_SITE1/48A4E591BF5C59B9E053BC88420AEC96/DATAFILE/system.471.937978901
4 USERS +DATA_DG01/CDB1_SITE1/48A4E591BF5C59B9E053BC88420AEC96/DATAFILE/users.469.937978901

- ONLY UNDO TABLESPACES OF SOURCE DB SEEMED TO BE IN THE DISK GROUP
ASMCMD> pwd
+DATA_DG01/SOURCEDB/DATAFILE
ASMCMD> ls -l
Type      Redund  Striped  Time             Sys  Name
DATAFILE  UNPROT  COARSE   MAR 07 06:00:00  Y    UNDOTBS1.445.936067715
DATAFILE  UNPROT  COARSE   MAR 07 06:00:00  Y    UNDOTBS2.435.936067895

- TRY START THE NON-CDB DATABASE AFTER IT IS MIGRATED TO PDB 
$  srvctl start database -d DB_UNIQUE_NAME

-- It will not start, and throws the following error
PRCR-1079 : Failed to start resource ora.db_unique_name.db
CRS-5017: The resource action "ora.db_unique_name.db start" encountered the following error:
ORA-01157: cannot identify/lock data file 1 - see DBWR trace file
ORA-01110: data file 1: '+DATA_DG01/db_unique_name/datafile/system.446.936067715'
. For details refer to "(:CLSN00107:)" in "/u01/app/grid/diag/crs/node1-hostname/crs/trace/crsd_oraagent_oracle.trc".
