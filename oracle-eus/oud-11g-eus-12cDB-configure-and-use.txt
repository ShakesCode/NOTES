===================================================
    CONFIGURE EUS FOR 12C RAC DB IN OUD 11G 
===================================================
Go through oud-11g-eus-11gDB-configure-and-use.txt for creating a root user, organization and enterprise user etc.

In this, we will use the root user, OU, realm and enterprise user created in oud-11g-eus-11gDB-configure-and-use.txt itself.

=======================================
---------------------------------------
            EUS FOR 12C CDB (PDB later in this doc)
---------------------------------------
=======================================
DB=L4D2

======================
REGISTER DB IN OUD
======================
$ dbca -silent -configureDatabase -sourceDB DB_UNIQUE_NAME -sysDBAUserName sys -sysDBAPassword "oracle#1" -registerWithDirService true -dirServiceUserName cn='eusroot,ou=eusadmins,dc=example,dc=com' -dirServicePassword oracle#1 -walletPassword 'oracle#1' -listeners listener

-- To unregister
$ dbca -silent -configureDatabase -sourceDB DB_UNIQUE_NAME -unregisterWithDirService true -dirServiceUserName cn='eusroot,ou=eusadmins,dc=example,dc=com' -dirServicePassword oracle#1 -walletPassword 'oracle#1' -listeners listener

- VERIFY with ldapsearch
$ ldapsearch -h 10.63.160.170 -p 1389 -D  cn='eusroot,ou=eusadmins,dc=example,dc=com' -w oracle#1 -b cn=oraclecontext,dc=example,dc=com "(cn=DB_UNIQUE_NAME)"
cn=DB_UNIQUE_NAME,cn=OracleContext,dc=example,dc=com
orclVersion=121000
orclcommonrpwdattribute={SASL-MD5}DnRGGBHXXflcD37D1w1n4Q==
objectClass=orclApplicationEntity
objectClass=orclService
objectClass=orclDBServer_92
objectClass=orclDBServer
objectClass=top
orclServiceType=DB
cn=RL4DB2_TTCE
orclOracleHome=/u02/app/oracle/product/12.1.0.2.RAC
orclSystemName=host-name-of-db-cluster-from-where-dbca-was-run
userPassword={AES}AZaBCiO8M0aMmrRbAnBEOV+IHy3h9njm1JnLJjq9KPVZrz5RHPkHyJgFi9Qf
userPassword={SSHA}fAYa+9kUa4M99PEtXurYGckhAMUrLOUkyLnc9A==
orclNetDescString=(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=clustername-scan)(PORT=1522)))(CONNECT_DATA=(SERVICE_NAME=DB_UNIQUE_NAME)))
orclDBGlobalName=DB_UNIQUE_NAME
orclNetDescName=000:cn=DESCRIPTION_0

- VERIFY with eusm
$ eusm listDBInfo realm_dn='dc=example,dc=com' database_name=DB_UNIQUE_NAME ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn='cn=eusroot,ou=eusadmins,dc=example,dc=com' ldap_user_password=oracle#1

INFOMATION FOR DATABASE: DB_UNIQUE_NAME
-------------------------------------------------
Database Distinguished name: cn=DB_UNIQUE_NAME,cn=OracleContext,dc=example,dc=com
Database version:       121000
ORACLE_SID:             null
Database Host:          host-name-of-db-cluster-from-where-dbca-was-run
ORACLE_HOME:            /u02/app/oracle/product/12.1.0.2.RAC
Database Service:       DB
Global Database Name:   RL4DB2_TTCE
Oracle Net Description: (DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=clustername-scan)(PORT=1522)))(CONNECT_DATA=(SERVICE_NAME=DB_UNIQUE_NAME)))

- VERIFY IN OUD WHERE THIS DB IS REGISTGERED
NOTE: It is created as a cn directly under OracleContext of dc=example,dc=com

Go to 'Data Browser' --> 'Data Tree' 
     --> dc=example,dc=com --> cn=OracleContext 
     
          --> cn=DB_UNIQUE_NAME  
          
               --> under that there will be the following 'cn' items:
                    DESCRIPTION_0
                    OracleDBAdmins
                    OracleDBAgents ... etc
                    
 --> In the optional attributes on the RHS side, find the password for DB to authenticate to OUD < needs IE to copy pw probably)

- VERIFY IF WALLET HAS BEEN CREATED
$ cd /u02/app/oracle/admin/DB_UNIQUE_NAME/wallet
$ ls -l
-rw------- 1 oracle oradba 485 Jan  5 06:38 cwallet.sso
-rw-rw-rw- 1 oracle oradba   0 Jan  5 06:38 cwallet.sso.lck
-rw------- 1 oracle oradba 440 Jan  5 06:38 ewallet.p12
-rw-rw-rw- 1 oracle oradba   0 Jan  5 06:38 ewallet.p12.lck

- VERIFY IF DB IS IN THE WALLET
$  orapki wallet display -wallet .
Oracle PKI Tool : Version 12.1.0.2
Copyright (c) 2004, 2014, Oracle and/or its affiliates. All rights reserved.

Requested Certificates:
User Certificates:
Oracle Secret Store entries:
ORACLE.SECURITY.DN
ORACLE.SECURITY.PASSWORD
Trusted Certificates:

$ mkstore -wrl . -viewEntry ORACLE.SECURITY.DN
Oracle Secret Store Tool : Version 12.1.0.2
Copyright (c) 2004, 2014, Oracle and/or its affiliates. All rights reserved.

Enter wallet password: <oracle#1>
ORACLE.SECURITY.DN = cn=DB_UNIQUE_NAME,cn=OracleContext,dc=example,dc=com

$ mkstore -wrl . -viewEntry ORACLE.SECURITY.PASSWORD
Oracle Secret Store Tool : Version 12.1.0.2
Copyright (c) 2004, 2014, Oracle and/or its affiliates. All rights reserved.

Enter wallet password:
ORACLE.SECURITY.PASSWORD = 2Mnp14j=Wz88
--> This is the password for the DB DN in OUD

- VERIFY USING LDAPBIND
$ ldapbind -h 10.63.160.170 -p 1389 -D cn=DB_UNIQUE_NAME,cn=OracleContext,dc=example,dc=com -q
password: < give the password found as value of ORACLE.SECURITY.PASSWORD >
bind successful

-----------------------------------
ASSIGN CERTIFICATE TO WALLET
-----------------------------------
NOTE: Certificate is created with keytool - self-signed (see install document)
NOTE: This is the certificate entry in orapki wallet display output - Subject: CN=oudhost.company.com,O=CompanyName,C=US  

- Add certificate
$ orapki wallet add -wallet /u02/app/oracle/admin/DB_UNIQUE_NAME/wallet -cert ./oud-server-cert.txt -trusted_cert -pwd "oracle#1"

- Verify - NOTE: This is much shorter compared to 11g display - need to check that why
$ orapki wallet display -wallet /u02/app/oracle/admin/DB_UNIQUE_NAME/wallet
Requested Certificates:
User Certificates:
Oracle Secret Store entries:
ORACLE.SECURITY.DN
ORACLE.SECURITY.PASSWORD
Trusted Certificates:
Subject:        CN=CN=oudhost.company.com,O=CompanyName,C=US

====================================
CREATE SCHEMA, ROLES, GLOBAL USERS
====================================
NOTE: In CDB, let us not create any application schema.
      Let us try only a DBA user (and later, a sysdba user - which may be same enterprise user)
NOTE: Created a shorter named c##oud_global_ident_user instead of too-long-erroring c##oud_global_ident_schema_user
spool 12ccdbsetup

set echo on

create role c##oud_appwrite_role_local;
create role c##oud_appread_role_local;

create role c##oud_appwrite_role_global identified globally;
create role c##oud_appread_role_global identified globally;
create role c##oud_dba_role_global identified globally;

grant dba     to c##oud_dba_role_global;
grant connect to c##oud_dba_role_global;

create user c##oud_global_ident_user  identified globally;

spool off

====================================================
MAP IN OUD THE GLOBAL IDENT USER FOR THIS DB 
====================================================
NOTE: 12c eusm is erroring out. Therefore, use 11g eusm.

-------------------------
DO THE MAPPING
-------------------------
$ /u02/app/oracle/product/11.2.0.4.RAC/bin/eusm createMapping database_name=DB_UNIQUE_NAME realm_dn='dc=example,dc=com' map_type=SUBTREE map_dn='dc=example,dc=com' schema=c##oud_global_ident_user ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn='cn=eusroot,ou=eusadmins,dc=example,dc=com' ldap_user_password=oracle#1

NOTE: This command does not produce any screen output
          Therefore, verify using listmappings:

---------------------------------------------------
VERIFY USING LISTMAPPINGS 
---------------------------------------------------
$ /u02/app/oracle/product/11.2.0.4.RAC/bin/eusm listMappings database_name=DB_UNIQUE_NAME realm_dn='dc=example,dc=com' ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn='cn=eusroot,ou=eusadmins,dc=example,dc=com' ldap_user_password=oracle#1

LIST OF DATABASE SCHEMA MAPPINGS::
------------------------------------
Mapping Name:  MAPPING0
Mapping Type:  SUBTREE
Mapping DN:    dc=example,dc=com
Mapping schema:c##oud_global_ident_user
Mapping Level :DATABASE

-------------------------
VERIFY IN ODSM GUI
-------------------------
Data Browser --> Data Tree --> dc=example,dc=com --> cn=OracleContext --> cn=DB_UNIQUE_NAME --> cn=mapping0
- That will show on the RHS: Distinguished Name cn=mapping0,cn=DB_UNIQUE_NAME,cn=OracleContext,dc=example,dc=com 

To see the global user of the DB that got mapped:
 CLICK 'OPTIONAL ATTRIBUTES' on the RHS
     You will see:
          orcldbnativeuser c##oud_global_ident_user

======================================
CREATE ENTERPRISE ROLES
======================================
https://wiki.loopback.org/confluence/display/KB/Configure+EUS+with+OUD%2C+AD+and+DB12c#ConfigureEUSwithOUD,ADandDB12c-Registerdatabasewithdirectory

QUESTION - We are using GLOBAL_DB_NAME as of now everywhere for database_name - should it be DB_NAME?
               Otherwise, how will primary-standby work?
               
-----------------------------------
CREATE AN ENTERPRISE ROLE (CDB_DBA)
-----------------------------------
NOTE: Create a new role CDB_DBA just to distinguish for POC purpose. 
      One role DBA should be good for 11G, 12C CDB and 12c CDB together.
      
$ /u02/app/oracle/product/11.2.0.4.RAC/bin/eusm createRole enterprise_role=CDB_DBA domain_name=OracleDefaultDomain realm_dn=dc=example,dc=com ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn=cn=eusroot,ou=eusadmins,dc=example,dc=com ldap_user_password=oracle#1

---------------------
- VERIFY IN OUD ODSM
---------------------
Directory Manager --> Data Browser --> Data Tree --> dc=example,dc=com --> --> cn=OracleContext 
     --> cn=Products --> cn=OracleDBSecurity 
          --> cn=OracleDefaultDomin
               --> cn=CDB_DBA
Its DN: Distinguished Name cn=CDB_DBA,cn=OracleDefaultDomain,cn=OracleDBSecurity,cn=Products,cn=OracleContext,dc=example,dc=com 

- To delete it
$ eusm deleteRole enterprise_role=CDB_DBA domain_name=OracleDefaultDomain realm_dn=dc=example,dc=com ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn=cn=eusroot,ou=eusadmins,dc=example,dc=com ldap_user_password=oracle#1

------------------------------------------------------------------------------------------------------
ASSOCIATE GLOBAL ROLE IN DB (C##OUD_DBA_ROLE_GLOBAL) TO THE ENTERPRISE ROLE in OUD (CDB_DBA)
------------------------------------------------------------------------------------------------------
# QUESTION - here, should it be database_name=DB_NAME or DB_UNIQUE_NAME?
$ eusm addGlobalRole enterprise_role=CDB_DBA domain_name=OracleDefaultDomain realm_dn=dc=example,dc=com database_name=DB_UNIQUE_NAME global_role=C##OUD_DBA_ROLE_GLOBAL dbuser=system dbuser_password=oracle#1 dbconnect_string=clustername-scan:1522/DB_UNIQUE_NAME ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn=cn=eusroot,ou=eusadmins,dc=example,dc=com ldap_user_password=oracle#1

----------------------------------------------
GRANT ROLE
----------------------------------------------
NOTE: This is to create/use a 'group' in OUD LDAP to associate with the enterprise role.  
        That is, 'grant' the enterprise role to a 'group' in OUD 
             Then, we can associate this 'group' with users.
      NOTE: In the 11g trial document, 'DBA' in group_dn=cn=DBA is the group DN
               -->--> BUT, in that, THE ROLE AND GROUP WERE ACTUALLY PHYSICALLY ALSO ONE AND THE SAME
                         -->--> LOOK AT THE GROUP_DN's heirarchy and the global-role's heirarchy are the same if you browse
                         -->--> Look in this site for different role and group: 
                                https://bdrouvot.wordpress.com/2016/04/30/oracle-unified-directory-and-user-security-quick-demo/
                                   -->--> PROBABLY THE IDEA IS TO KEEP THEM SEPARATE - BUT DONE THIS WAY IN SOME OTHER SITE

RAN THIS ONE: (as done in 11g - to keep it simple)
NOTE: Actually, after running this, in the 'member information' of this group, the member is ITSELF
# This has the role and group named same - to keep it simple
/u02/app/oracle/product/11.2.0.4.RAC/bin/eusm grantRole enterprise_role=CDB_DBA domain_name=OracleDefaultDomain realm_dn=dc=example,dc=com group_dn=cn=CDB_DBA,cn=OracleDefaultDomain,cn=OracleDBSecurity,cn=Products,cn=OracleContext,dc=example,dc=com ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn=cn=eusroot,ou=eusadmins,dc=example,dc=com ldap_user_password=oracle#1

# This has role and group separate - but group_dn should be pre-created
#/u02/app/oracle/product/11.2.0.4.RAC/bin/eusm grantRole enterprise_role=CDB_DBA domain_name=OracleDefaultDomain realm_dn=dc=example,dc=com group_dn=cn=cdbdbas,dc=example,dc=com ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn=cn=eusroot,ou=eusadmins,dc=example,dc=com ldap_user_password=oracle#1

------------------------------
VERIFY
------------------------------
-- VERIFY WITH EUSM COMMAND
/u02/app/oracle/product/11.2.0.4.RAC/bin/eusm listEnterpriseRoleInfo enterprise_role=CDB_DBA domain_name=OracleDefaultDomain realm_dn=dc=example,dc=com ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn=cn=eusroot,ou=eusadmins,dc=example,dc=com ldap_user_password=oracle#1

INFOMATION FOR ENTERPRISE ROLE: CDB_DBA
-------------------------------------------------
LIST OF USERS
-----------------
LIST OF GROUPS
-----------------
cn=CDB_DBA,cn=OracleDefaultDomain,cn=OracleDBSecurity,cn=Products,cn=OracleContext,dc=example,dc=com
LIST OF GLOBAL ROLES
--------------------
DBNAME: RL4DB2_TTCE GLOBALROLE :C##OUD_DBA_ROLE_GLOBAL

-- VERIFY IN OUD ODSM GUI
Traverse to the group cn=CDB_DBA,cn=OracleDefaultDomain,cn=OracleDBSecurity,cn=Products,cn=OracleContext,dc=example,dc=com
Look up the 'member information' in the RHS - 
--> for now, due to 'keep it simple' grantrole command, the same group is a member also of itself

=====================================================================
CREATE ENTERPRISE USERS IN OUD - AND ASSOCIATE THEM WITH GLOBAL USER
=====================================================================
Use the same user user1 that was created in 11g trial - this will help test that the same user can access both DB's.

However, for reference, listed the user1 user and 'dbas' group create/associate guidelines below.

-------------------------
CREATE A OU FOR PEOPLE
-------------------------
Diretory Manager --> Data Browser --> Create --> Organization Unit
Create it under dc=example,dc=com as people

It will be created as Distinguished Name ou=people,dc=example,dc=com 

------------------------------
CREATE A GROUP FOR DBAs
------------------------------
Diretory Manager --> Data Browser --> Create --> Group Entry --> Static Group Entry
Choose parent entry dc=example,dc=com
Choose groupOfNames as the type of this group
Give description as Full-access Infra DBAs

It will be created as:  Distinguished Name ou=dbas,dc=example,dc=com 

-----------------------------
CREATE A USER UNDER OU PEOPLE
-----------------------------
Diretory Manager --> Data Browser --> Create --> User Entry
Choose parent entry ou=people,dc=example,dc=com
Give 'user1' as the value for all of these - Common Name, User ID, Last Name 

It gets created as Distinguished Name cn=user1,ou=people,dc=example,dc=com 
Question: Why not get created as uid=user1...?

To Set password:
Click on the user
Go to 'Attributes' tab on the RHS
Go to 'Optional Attributes' in it --> userpassword --> 'add' a password (I gave oracle as password)
NOTE: you can also see 'uid' in the optional attributes section, with 'user1' as its value
NOTE: Looks like password is in the 'organiational information' of the user in the 'user page' tab on RHS itself

- VERIFY
$ ldapbind -h 10.63.160.170 -p 1389 -D cn=user1,ou=people,dc=example,dc=com -w oracle
bind successful

$ ldapbind -h 10.63.160.170 -p 1389 -D uid=user1,ou=people,dc=example,dc=com -w oracle
ldap_bind: Invalid credentials
Question - Why uid=user1 does not work?

$ ldapsearch -v -h  10.63.160.170 -p 1389 -D  cn='eusroot,ou=eusadmins,dc=example,dc=com' -w oracle#1 -b ou=people,dc=example,dc=com "(cn=user1)"
     ldap_open( 10.63.160.170, 1389 )
     filter pattern: (cn=user1)
     returning: ALL
     filter is: ((cn=user1))
     cn=user1,ou=people,dc=example,dc=com
     userPassword={SSHA}BLCHoGsvTX6S1C7s4sxctfj7Wz08itrzvmIkuA==
     objectclass=top
     objectclass=organizationalPerson
     objectclass=person
     objectclass=inetOrgPerson
     uid=user1
     cn=user1
     sn=user1

------------------------------------
ADD THIS USER USER1 INTO GROUP DBAS
------------------------------------
Go to group 'dbas'
In the 'Group Page' tab --> Member Information --> Add --> cn=user1,ou=people,dc=example,dc=com
NOTE: You can choose user's DN via the select button also
Click Apply

- VERIFY
Go to the user --> on RHS Additional User Information --> Group Membership --> shows Group DNs cn=dbas,dc=example,dc=com

========================================
ADD DBAS TO THE ENTERPRISE ROLE 'CDB_DBA'
========================================
NOTE: In 11g trial, did it in ODSM GUI.  Here, let us try eusm grantrole.

- EUSM METHOD
$ /u02/app/oracle/product/11.2.0.4.RAC/bin/eusm grantRole enterprise_role=CDB_DBA domain_name=OracleDefaultDomain realm_dn=dc=example,dc=com group_dn=cn=dbas,dc=example,dc=com
 ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn=cn=eusroot,ou=eusadmins,dc=example,dc=com ldap_user_password=oracle#1

- ODSM GUI METHOD
Traverse to the 'CDB_DBA' CN as we did before:
Data Tree --> Root --> dc=example,dc=com --> cn=OracleContext --> cn=Products --> cn=OracleDBSecurity --> cn=CDB_DBA

To that, on the RHS --> Group Page --> Member Information --> Unique Member 
                                        --> Add (worked - try the 'dbas' group first to see if that works for all users in that group)
                                             --> cn=dbas,dc=example,dc=com

- VERIFY USING EUSM
NOTE- Now you see 'dbas' also listed
$ /u02/app/oracle/product/11.2.0.4.RAC/bin/eusm listEnterpriseRoleInfo enterprise_role=CDB_DBA domain_name=OracleDefaultDomain realm_dn=dc=example,dc=com ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn=cn=eusroot,ou=eusadmins,dc=example,dc=com ldap_user_password=oracle#1

INFOMATION FOR ENTERPRISE ROLE: CDB_DBA
-------------------------------------------------
LIST OF USERS
-----------------
LIST OF GROUPS
-----------------
cn=CDB_DBA,cn=OracleDefaultDomain,cn=OracleDBSecurity,cn=Products,cn=OracleContext,dc=example,dc=com
cn=dbas,dc=example,dc=com
LIST OF GLOBAL ROLES
--------------------
DBNAME: RL4DB2_TTCE GLOBALROLE :C##OUD_DBA_ROLE_GLOBAL

- VERIFY USING ODSM GUI
Traverse to the group cn=CDB_DBA,cn=OracleDefaultDomain,cn=OracleDBSecurity,cn=Products,cn=OracleContext,dc=example,dc=com
Look up the 'member information' in the RHS - 
--> Now you can see 'dbas' group also added to this role/group CDB_DBA

================================================
MAP THIS USER TO THE GLOBAL-IDENT-USER IN THE DB
================================================
--------
MAP
--------
$ eusm createMapping realm_dn='dc=example,dc=com' ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn='cn=eusroot,ou=eusadmins,dc=example,dc=com' ldap_user_password=oracle#1 database_name=DB_UNIQUE_NAME map_type=ENTRY map_dn='cn=user1,ou=people,dc=example,dc=com' schema=c##oud_global_ident_user

--------
VERIFY
--------
NOTE: MAPPING0 is for the DB to its own global user
      MAPPING1 is for the db global user schema to user1 enterprise user
$ /u02/app/oracle/product/11.2.0.4.RAC/bin/eusm listMappings database_name=DB_UNIQUE_NAME realm_dn='dc=example,dc=com' ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn='cn=eusroot,ou=eusadmins,dc=example,dc=com' ldap_user_password=oracle#1

LIST OF DATABASE SCHEMA MAPPINGS::
------------------------------------
Mapping Name:  MAPPING0
Mapping Type:  SUBTREE
Mapping DN:    dc=example,dc=com
Mapping schema:c##oud_global_ident_user
Mapping Level :DATABASE

Mapping Name:  MAPPING1
Mapping Type:  ENTRY
Mapping DN:    cn=user1,ou=people,dc=example,dc=com
Mapping schema:c##oud_global_ident_user
Mapping Level :DATABASE

============================================================
CONNECT AS ENTERPRISE USER USER1 TO THE DATABASE
============================================================
NOTE: The sqlnet.ora file had a wallet for a different 11g DB.  
        --> But, sqlplus cribbed that it does not like a wallet entry in sqlnet.ora
        --> No idea why a 12c DB should be bothered about a 11g DB wallet in sqlnet.ora
NOTE: Wallet location in sqlnet.ora is not mandatory.
        --> Do setenv ORACLE_BASE and TNS_ADMIN=<location of sqlnet.ora> to the database
            --> Startup database using srvctl
        --> Alternatively, set TNS_ADMIN, ORACLE_BASE in unix environment and start DB using sqlplus
        --> Then, 11g DB also takes wallet from default location $ORACLE_BASE/admin/wallet 
            --> if authentication by password or kerberos is used 
            --> does not work if client-to-db is via ssl
            https://docs.oracle.com/cd/E11882_01/network.112/e10744/configur.htm#DBIMI254
            --> Look for sharing wallets
$  sqlplus user1/oracle

SQL*Plus: Release 12.1.0.2.0 Production on Fri Jan 6 05:31:49 2017

Copyright (c) 1982, 2014, Oracle.  All rights reserved.

ERROR:
ORA-28305: WALLET_LOCATION in sqlnet.ora file for container database is not
supported.

$ sqlplus user1/oracle

SQL*Plus: Release 12.1.0.2.0 Production on Fri Jan 6 05:32:26 2017

Copyright (c) 1982, 2014, Oracle.  All rights reserved.

Connected to:
Oracle Database 12c Enterprise Edition Release 12.1.0.2.0 - 64bit Production
With the Partitioning, Real Application Clusters, Automatic Storage Management, OLAP,
Advanced Analytics and Real Application Testing options

SQL> show user
USER is "C##OUD_GLOBAL_IDENT_USER"
SQL> select * from session_roles;

ROLE
--------------------------------------------------------------------------------
CONNECT
DBA
SELECT_CATALOG_ROLE
EXECUTE_CATALOG_ROLE
DELETE_CATALOG_ROLE
CAPTURE_ADMIN
EXP_FULL_DATABASE
IMP_FULL_DATABASE
DATAPUMP_EXP_FULL_DATABASE
DATAPUMP_IMP_FULL_DATABASE
XS_RESOURCE

ROLE
--------------------------------------------------------------------------------
GATHER_SYSTEM_STATISTICS
OPTIMIZER_PROCESSING_RATE
EM_EXPRESS_BASIC
EM_EXPRESS_ALL
SCHEDULER_ADMIN
HS_ADMIN_SELECT_ROLE
HS_ADMIN_EXECUTE_ROLE
XDBADMIN
XDB_SET_INVOKER
WM_ADMIN_ROLE
JAVA_ADMIN

ROLE
--------------------------------------------------------------------------------
JAVA_DEPLOY
OLAP_XS_ADMIN
OLAP_DBA
C##OUD_DBA_ROLE_GLOBAL

26 rows selected.

SQL> connect user1/oracle@RL4DB2_TTCE
Connected.
SQL> select * from session_roles;

ROLE
--------------------------------------------------------------------------------
CONNECT
DBA
SELECT_CATALOG_ROLE
EXECUTE_CATALOG_ROLE
DELETE_CATALOG_ROLE
CAPTURE_ADMIN
EXP_FULL_DATABASE
IMP_FULL_DATABASE
DATAPUMP_EXP_FULL_DATABASE
DATAPUMP_IMP_FULL_DATABASE
XS_RESOURCE

ROLE
--------------------------------------------------------------------------------
GATHER_SYSTEM_STATISTICS
OPTIMIZER_PROCESSING_RATE
EM_EXPRESS_BASIC
EM_EXPRESS_ALL
SCHEDULER_ADMIN
HS_ADMIN_SELECT_ROLE
HS_ADMIN_EXECUTE_ROLE
XDBADMIN
XDB_SET_INVOKER
WM_ADMIN_ROLE
JAVA_ADMIN

ROLE
--------------------------------------------------------------------------------
JAVA_DEPLOY
OLAP_XS_ADMIN
OLAP_DBA
C##OUD_DBA_ROLE_GLOBAL

26 rows selected.

=======================================
---------------------------------------
            EUS FOR 12C PDB
---------------------------------------
=======================================

======================
REGISTER PDB IN OUD
======================
$ dbca -silent -configurePluggableDatabase -sourceDB RL4DB2_TTCE -pdbname RL4DB2PD1 -sysDBAUserName sys -sysDBAPassword "oracle#1" -registerWithDirService true -dirServiceUserName cn='eusroot,ou=eusadmins,dc=example,dc=com' -dirServicePassword oracle#1 -walletPassword 'oracle#1' -listeners listener

You will see PDB as:
Distinguished Name	cn=PDBNAME_DB_UNIQUE_NAME,cn=OracleContext,dc=example,dc=com
Its password in Optional Attributes
Its wallet in /u02/app/oracle/admin/DB_UNIQUE_NAME/399C2BFF74093219E053BD88420A5996/wallet
Where 399C2BFF74093219E053BD88420A5996 is the ID of the PDB

TBD - Other types of verifications - later 

- VERIFY IF DB IS IN THE WALLET

$ cd /u02/app/oracle/admin/DB_UNIQUE_NAME/399C2BFF74093219E053BD88420A5996/wallet

$ orapki wallet display -wallet .
Oracle PKI Tool : Version 12.1.0.2
Copyright (c) 2004, 2014, Oracle and/or its affiliates. All rights reserved.

Requested Certificates:
User Certificates:
Oracle Secret Store entries:
ORACLE.SECURITY.DN
ORACLE.SECURITY.PASSWORD
Trusted Certificates:

$ mkstore -wrl . -viewEntry ORACLE.SECURITY.DN
Oracle Secret Store Tool : Version 12.1.0.2
Copyright (c) 2004, 2014, Oracle and/or its affiliates. All rights reserved.

Enter wallet password:
ORACLE.SECURITY.DN = cn=RL4DB2PD1_RL4DB2_TTCE,cn=OracleContext,dc=example,dc=com

$ mkstore -wrl . -viewEntry ORACLE.SECURITY.PASSWORD
Oracle Secret Store Tool : Version 12.1.0.2
Copyright (c) 2004, 2014, Oracle and/or its affiliates. All rights reserved.

Enter wallet password:
ORACLE.SECURITY.PASSWORD = 0~U1FhwRbXv7

- VERIFY USING LDAPBIND
$ ldapbind -h 10.63.160.170 -p 1389 -D cn=PDBNAME_DB_UNIQUE_NAME,cn=OracleContext,dc=example,dc=com -q
password: < give the password found as value of ORACLE.SECURITY.PASSWORD >
bind successful

-----------------------------------
ASSIGN CERTIFICATE TO WALLET
-----------------------------------
NOTE: This certificate is created with keytool in OUD server - self-signed (see install document)
NOTE: This is the certificate entry in orapki wallet display output - Subject: CN=oudhost.company.com,O=CompanyName,C=US  

- Add certificate
$ orapki wallet add -wallet /u02/app/oracle/admin/DB_UNIQUE_NAME/PDB_UID/wallet -cert ./oud-server-cert.txt -trusted_cert -pwd "oracle#1"

- Verify - NOTE: This is much shorter compared to 11g display - need to check that why
$ orapki wallet display -wallet /u02/app/oracle/admin/DB_UNIQUE_NAME/PDB_UID/wallet
Requested Certificates:
User Certificates:
Oracle Secret Store entries:
ORACLE.SECURITY.DN
ORACLE.SECURITY.PASSWORD
Trusted Certificates:
Subject:        CN=CN=oudhost.company.com,O=CompanyName,C=US

====================================
CREATE SCHEMA, ROLES, GLOBAL USERS
====================================
NOTE: Do this like we did for 11g - as a PDB objects are similar to 11g DB objects

spool 12cpdbsetup.lst

set echo on

create role oud_appwrite_role_local;
create role oud_appread_role_local;

create role oud_appwrite_role_global identified globally;
create role oud_appread_role_global identified globally;
create role oud_dba_role_global identified globally;

grant oud_appwrite_role_local to oud_appwrite_role_global;
grant oud_appread_role_local to oud_appread_role_global;
grant dba to oud_dba_role_global;

grant connect to oud_appwrite_role_global;
grant connect to oud_appread_role_global;
grant connect to oud_dba_role_global;

create user oudappmgr identified by oudappmgr123;

create table oudappmgr.emp (id int, name varchar2(10));
create table oudappmgr.dept (id int, name varchar2(10));

create user oud_global_ident_schema_user  identified globally;

grant select, insert, update, delete on oudappmgr.emp to oud_appwrite_role_local;
grant select, insert, update, delete on oudappmgr.emp to oud_appwrite_role_local;

grant select, insert, update, delete on oudappmgr.emp to oud_appread_role_local;
grant select on oudappmgr.emp to oud_appread_role_local;

-- Just for extra testing
create user oud_global_ident_schema_user2  identified globally;

spool off

====================================================
MAP IN OUD THE GLOBAL IDENT USER FOR THIS DB 
====================================================

NOTE: 12c eusm is erroring out. Therefore, use 11g eusm.

-------------------------
DO THE MAPPING
-------------------------
$ /u02/app/oracle/product/11.2.0.4.RAC/bin/eusm createMapping database_name=PDB_NAME_DB_UNIQUE_NAME realm_dn='dc=example,dc=com' map_type=SUBTREE map_dn='dc=example,dc=com' schema=oud_global_ident_schema_user ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn='cn=eusroot,ou=eusadmins,dc=example,dc=com' ldap_user_password=oracle#1

NOTE: This command does not produce any screen output
          Therefore, verify using listmappings:
          
---------------------------------------------------
VERIFY USING LISTMAPPINGS 
---------------------------------------------------
$ /u02/app/oracle/product/11.2.0.4.RAC/bin/eusm listMappings database_name=PDBNAME_DB_UNIQUE_NAME realm_dn='dc=example,dc=com' ldap_host=10.63.160.170 ldap_port=1389 ldap_user_dn='cn=eusroot,ou=eusadmins,dc=example,dc=com' ldap_user_password=oracle#1

LIST OF DATABASE SCHEMA MAPPINGS::
------------------------------------
Mapping Name:  MAPPING0
Mapping Type:  SUBTREE
Mapping DN:    dc=example,dc=com
Mapping schema:oud_global_ident_schema_user
Mapping Level :DATABASE

-------------------------
VERIFY IN ODSM GUI (TBD)
-------------------------
Data Browser --> Data Tree --> dc=example,dc=com --> cn=OracleContext --> cn=PDBNAME_DB_UNIQUE_NAME --> cn=mapping0
- That will show on the RHS: Distinguished Name cn=mapping0,cn=DB_UNIQUE_NAME,cn=OracleContext,dc=example,dc=com 

To see the global user of the DB that got mapped:
 CLICK 'OPTIONAL ATTRIBUTES' on the RHS
     You will see:
          orcldbnativeuser oud_global_ident_user


