===========================
STORAGE CELLS
===========================

Monitoring storage servers - http://www.oracle.com/technetwork/articles/servers-storage-admin/monitor-exadata-em12-2291964.html

-------------------
DISK ATTRIBUTES
-------------------

CellCLI> list physicaldisk where status=critical|normal detail
CellCli> list physicaldisk attributes name (attribute size does not exist for physicaldisk)

CellCLI> list celldisk attributes name, size
CellCLI> list celldisk detail

CellCLI> list griddisk attributes name,asmmodestatus,asmdeactivationoutcome
DATA1_CD_00_ed1celadm02	 ONLINE	 Yes
DATA1_CD_01_ed1celadm02	 ONLINE	 Yes

CellCLI> list griddisk attributes name, size
CellCLI> list griddisk detail

CellCLI> LIST CELLDISK where freeSpace != 0 DETAIL

-------------------
DISK ERROR
-------------------
CellCLI> LIST PHYSICALDISK WHERE diskType=HardDisk AND status=critical DETAIL

-------------------
DISK ALERTS
-------------------
CellCLI> list alerthistory
        1_1     2017-05-20T22:58:12-05:00       critical        "A processor component is suspected of causing a fault with a 33% certainty.  Component Name : /SYS/MB/PCIE6  Fault class    : fault.io.intel.iio.pcie-fatal  Fault message  : http://www.sun.com/msg/SPX86A-8002-RK"
         1_2     2017-05-22T13:08:09-05:00       clear           "A generic component fault has been cleared.  Component Name       : /SYS/MB/PCIE6  Trap Additional Info : fault.io.intel.iio.pcie-fatal"
         2_1     2017-05-20T22:58:12-05:00       critical        "A processor component is suspected of causing a fault with a 33% certainty.  Component Name : /SYS/MB/P0  Fault class    : fault.io.intel.iio.pcie-fatal  Fault message  : http://www.sun.com/msg/SPX86A-8002-RK"
         2_2     2017-05-22T13:08:09-05:00       clear           "A processor component fault has been cleared.  Component Name       : /SYS/MB/P0  Trap Additional Info : fault.io.intel.iio.pcie-fatal"
         3_1     2017-05-20T22:58:12-05:00       critical        "A generic component is suspected of causing a fault with a 33% certainty.  Component Name : /SYS/MB  Fault class    : fault.io.intel.iio.pcie-fatal  Fault message  : http://www.sun.com/msg/SPX86A-8002-RK"
         3_2     2017-05-22T13:08:09-05:00       clear           "A generic component fault has been cleared.  Component Name       : /SYS/MB  Trap Additional Info : fault.io.intel.iio.pcie-fatal"
         4       2017-05-20T22:58:11-05:00       critical        "Critical interrupt detected: . Power cycle forced."


CellCLI> LIST ALERTHISTORY WHERE severity = 'critical' AND examinedBy = '' DETAIL


----------------------------------
CREATE GRIDDISKS AND ASM DISKGROUP
----------------------------------
Celldisks are whole physical disks (formatted of sorts as 'cell disks')
Griddisks are slices of celldisk - they will be used in ASM diskgroup creation
IMPORTANT - to enable 'redundancy' during ASM diskgroup creation, 
            make griddisks to use in same disk group with the same size and naming convetion across the cells
NOTE: When asm diskgroup is created, all cells are presented to it (see later in this doc)
      However, depending upon the redundancy set for the diskgroup, the usable-space gets reduced

- NAMING CONVENTION

-- Cell Disk

CD_NN_CELLMM
'NN' is the serial number of the cell disk in the cell number 'MM'

Examlple:
CD_00_CELL01
CD_01_CELL01
...
...

CD_00_CELL02
CD_01_CELL02
...
...

-- Grid Disk
NOTE: Typically, for proper layout and efficient redundancy, use all celldisks to create griddisks for an ASM diskgroup

DISGROUP_CELLDISK

DATA1_CD_00_CELL01
DATA1_CD_01_CELL01
...
...

DATA1_CD_00_CELL02
DATA1_CD_01_CELL02

- CHECK FREE SPACE IN CELLDISK

CellCLI> LIST CELLDISK where freeSpace != 0 DETAIL

- OR -

# cellcli -e list celldisk detail 
--> Look for disks with freespace > 0 

- CREATE GRIDDISKS AND ASM DISKGROUP

-- Example 1: Use just one cell disk in each cell (though usually not done like this) and mirror across multiple cells

   NOTE: In this example the 'usable size' of the ASM diskgroup will be 25G * 1 * 4 / 3
        
        --- CREATE THE GRIDDISKS
        
        For DATA1 ASM diskgroup - Create one griddisk each in each cell  (cell01 to cell04) on celldisk 00 of each cell 

        --> on cell01
        # cellcli -e create griddisk DATA1_CD_00_cell01 celldisk=CD_00_cell01,size=25G

        --> on cell02
        # cellcli -e create griddisk DATA1_CD_00_cell03 celldisk=CD_00_cell01,size=25G

        --> on cell03
        # cellcli -e create griddisk DATA1_CD_00_cell03 celldisk=CD_00_cell01,size=25G

        --> on cell04
        # cellcli -e create griddisk DATA1_CD_00_cell04 celldisk=CD_00_cell01,size=25G

        --- CREATE ASM DISKGROUP
        NOTE: The disk name should start with 'o/'.
        NOTE: For redundancy the griddisks should be on different cells
        NOTE: DATA1_CD_00 - '00' is also added in the disk pattern so that griddisks on only 00 celldisk will be used

        SQL> CREATE DISKGROUP DATA1 HIGH REDUNDANCY  DISK 'o/*/DATA1_CD_00*' SIZE 25G attribute 
             'compatible.rdbms'='11.2.0.1', 'compatible.asm'='12.1.0.2', 'au_size'='4M', 
             'appliance.mode'='true', 'cell.smart_scan_capable'='TRUE';

-- Example 2: Use ALL cell disk in each cell (usually 12 disks will be there in each cell) and mirror across multiple cells

   NOTE: In this example the 'usable size' of the ASM diskgroup will be 25G * 12 * 4 / 3

        --- CREATE THE GRIDDISKS
        
        For DATA1 ASM diskgroup - Create one griddisk each in each cell  (cell01 to cell04) on celldisk 00 of each cell 

        --> on cell01 to cell04 (or cell05/6/7 ... per your setup)
        # cellcli -e create griddisk DATA1_CD_00_cell01 celldisk=CD_00_cell01,size=25G
        # cellcli -e create griddisk DATA1_CD_01_cell01 celldisk=CD_01_cell01,size=25G
        ...
        ...
        # cellcli -e create griddisk DATA1_CD_10_cell01 celldisk=CD_00_cell01,size=25G
        # cellcli -e create griddisk DATA1_CD_11_cell01 celldisk=CD_01_cell01,size=25G
        
        ... similarly create 12 griddisks in other cells also - replacing cell01 with cell02 etc
        
        --- CREATE ASM DISKGROUP
        NOTE: The disk name should start with 'o/'.
        NOTE: For redundancy the griddisks should be on different cells
        NOTE: DATA1_CD_* - '00' is NOT added in the disk pattern so that 'DATA1' griddisks on ALL celldisks will be used
        
        SQL> CREATE DISKGROUP DATA1 HIGH REDUNDANCY  DISK 'o/*/DATA1_CD_*' SIZE 25G attribute 
             'compatible.rdbms'='11.2.0.1', 'compatible.asm'='12.1.0.2', 'au_size'='4M', 
             'appliance.mode'='true', 'cell.smart_scan_capable'='TRUE';
   
----------------------------------
RESIZE GRIDDISKS AND ASM DISKGROUP
----------------------------------
http://asmsupportguy.blogspot.in/2014/08/how-to-resize-grid-disks-in-exadata.html

To grow an ASM diskgroup, no need to add new griddisks - resize the griddisks and resize the asm disksgroup.

STEP1 - Resize griddisks - do this on ALL CELLS that participate in 'DATA' ASM diskgroup 
# cellcli -e alter griddisk  DATA_CD_00_exacell01, DATA_CD_01_exacell01, DATA_CD_02_exacell01, DATA_CD_03_exacell01, DATA_CD_04_exacell01, DATA_CD_05_exacell01, DATA_CD_06_exacell01, DATA_CD_07_exacell01, DATA_CD_08_exacell01, DATA_CD_09_exacell01, DATA_CD_10_exacell01, DATA_CD_11_exacell01 size=50G;
...
...
Do this on all cells replacing exacell01 with appropriate string

STEP2 - Resize ASM diskgroup
SQL> ALTER DISKGROUP DATA RESIZE ALL;

This will start a rebalance - watch it with the following command until "no rows selected" for this diskgroup.
SQL> select * from gv$asm_operation;

Check that the ASM sees the new size, with the following command:
SQL> select name, total_mb from v$asm_disk_stat where name like 'DATA%';

=======
ILOM
=======
> show System
> show faulty


=======
DCLI
=======
# dcli -l root -g cell_group "cellcli -e "list celldisk detail" | grep freeSpace:"
--> where cell_group is the file containing cell server names
