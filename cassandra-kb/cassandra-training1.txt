https://dzone.com/articles/introduction-apache-cassandras

RDBMS
Strict schema
Not natively distributed - distributed is an additional feature
- so, not natively scalable
ACID

NO-SQL
Schema free - dynamic schema
Distributed natively - that is the feature
CAP instead of ACID
- Consistency, Availability, Parititioning
- Consistency is inversely proportional to partitioning
- Performance higher with more partitions

NO SQL CATEGORIES
key-value - redis
document oriented (is actually a row) - mongo, couch, dynamo…
column oriented - key-value - cassandra, hbase 
graph oriented

Mongo - heavy read ok, heavy write not ok
Cassandra - heavy write ok, heavy reads not that ok
Cassandra - does not have a single master node - so more failure tolerant

HBase is Hadoop ‘database’ - like a database designed for Hadoop workloads

CASSANDRA
Multiple machines
Write anywhere - yet user sees the whole thing as a unified one
In mysql, bigtable etc some nodes should be set up as slaves
—> but, cassandra it is decentralized - even the node/master/replication management is distributed
—> peer-to-peer ‘gossip’ protocol to keep in synch with other nodes
—> so, NO SINGLE POINT OF FAILURE - high availability ensured
Nodes can be added and removed dynamically without downtime 
- seamless scale up/down
- no downtime for the cluster overall
Patching within same major versions can be upgraded in rolling fashion

CLUSTER
Data-Centers - DC1,DC2... - for disaster recovery
Each DC with multiple racks and each rack with multiple nodes
Nodes can have different minor-versions within the same major version (like 3.1, 3.2 etc)

CQL - Cassandra - JDK - OS
- CQL is the high level API to access Cassandra
- Cassandra is written in Java
- It will talk to OS via JDK

COMMANDS, FILES ETC

/var/log/cassandra
/var/lib/cassandra
/var/lib/cassandra/data

nodetool status
cqlsh

===============
INSTALL CONFIG on Ubuntu
===============
# echo "deb http://www.apache.org/dist/cassandra/debian 311x main" | sudo tee -a /etc/apt/sources.list.d/cassandra.sources.list

# curl https://www.apache.org/dist/cassandra/KEYS | sudo apt-key add -

# apt-get update
# apt-get install cassandra  -y

# which cassandra
/usr/sbin/cassandra

# which cqlsh
/usr/bin/cqlsh

# service  cassandra status
 * Cassandra is running
 
# ls /var/lib/cassandra/
commitlog  data  hints  saved_caches

# ls /var/lib/cassandra/data/
system  system_auth  system_distributed  system_schema  system_traces

# tail /var/log/cassandra/system.log

# nodetool status
Datacenter: datacenter1
=======================
Status=Up/Down
|/ State=Normal/Leaving/Joining/Moving
--  Address    Load       Tokens       Owns (effective)  Host ID                               Rack
UN  127.0.0.1  103.67 KiB  256          100.0%            5975effd-cd85-4f8e-a83c-c66bf7840689  rack1

$ cqlsh
Connected to Test Cluster at 127.0.0.1:9042.
[cqlsh 5.0.1 | Cassandra 3.11.2 | CQL spec 3.4.4 | Native protocol v4]
Use HELP for help.
cqlsh> describe keyspaces

system_traces  system_schema  system_auth  system  system_distributed

cqlsh> create keyspace ks0 with replication = {'class':'SimpleStrategy','replication_factor':1};
cqlsh> describe keyspace ks0

CREATE KEYSPACE ks0 WITH replication = {'class': 'SimpleStrategy', 'replication_factor': '1'}  AND durable_writes = true;

cqlsh> use ks0;
cqlsh:ks0> 

cqlsh:ks0> CREATE TABLE users(user_id varchar, age int, email varchar, city varchar, PRIMARY KEY (user_id));
cqlsh:ks0> describe ks0.users

CREATE TABLE ks0.users (
    user_id text PRIMARY KEY,
    age int,
    city text,
    email text
) WITH bloom_filter_fp_chance = 0.01
    AND caching = {'keys': 'ALL', 'rows_per_partition': 'NONE'}
    AND comment = ''
    AND compaction = {'class': 'org.apache.cassandra.db.compaction.SizeTieredCompactionStrategy', 'max_threshold': '32', 'min_threshold': '4'}
    AND compression = {'chunk_length_in_kb': '64', 'class': 'org.apache.cassandra.io.compress.LZ4Compressor'}
    AND crc_check_chance = 1.0
    AND dclocal_read_repair_chance = 0.1
    AND default_time_to_live = 0
    AND gc_grace_seconds = 864000
    AND max_index_interval = 2048
    AND memtable_flush_period_in_ms = 0
    AND min_index_interval = 128
    AND read_repair_chance = 0.0
    AND speculative_retry = '99PERCENTILE';
    
