=======================
SAN MIGRATOIN USING ASM
=======================

Online - http://ittichaicham.com/2009/10/online-san-storage-migration-for-oracle-11g-rac-database-with-asm/
Online - http://www.dbaref.com/home/asm/exactstepstomigrateasmdiskgroupstoanothersanwithoutdowntime
Online - http://rudreshgwd.blogspot.in/2012/08/online-migration-of-asm-disk-groups.html

RMAN move datafile - 
  FOR DATAFILES:
  12C - https://docs.oracle.com/database/121/OSTMG/GUID-3B8D0956-0888-452D-A9E4-9FB8D98577E0.htm#OSTMG89997
  11G - 
  https://blogs.oracle.com/AlejandroVargas/entry/moving_a_datafile_from_file_sy (very good, asm)
  https://hemantoracledba.blogspot.in/2012/06/rman-backup-as-copy.html (very good, checkpoints etc, non-asm)
  https://davidalejomarcos.wordpress.com/2010/07/23/move-datafile-to-a-different-asm-diskgroup-using-rman/ (very good)
  
  File/Tablespace/DB - http://www.dba-oracle.com/t_rman_copy_command_tips.htm
  
  WHOLE TABLESPACES:
  http://oracledbabhuvan.blogspot.in/2011/09/moving-tablespacedatafiles-across-disk.html  (SYSTEM/SYSAUX, OTHER)
  https://philiphoweoracle.wordpress.com/2011/12/15/move-tablespace-to-another-disk-group-in-asm-with-rman/
  
  SYSTEM AND SYSAUX:  
  https://www.linkedin.com/pulse/how-move-datafiles-from-one-asm-diskgroup-another-ahmed-abdellatif
  http://msutic.blogspot.in/2012/05/how-to-move-system-tablespace-with.html
    
  FOR TEMPFILES: (maybe we just recreate temporary tablespace)
  10g - https://docs.oracle.com/cd/B19306_01/backup.102/b14191/rcmasm.htm#BRADV12000
  10g - https://docs.oracle.com/cd/B19306_01/backup.102/b14194/rcmsynta061.htm
  
  Whole DB - http://www.orafaq.com/node/1947
  
  Controlfile: http://www.oracle-wiki.net/startdocshowtocontrolfileasm
  
  Migrating from non-asm to asm: https://docs.oracle.com/cd/B19306_01/backup.102/b14191/rcmasm.htm#BRADV12000
  
  Redo Logs:  http://www.orafaq.com/node/1947
  
==============================
MOVE TO DIFFERENT DISKGROUP
==============================

Sections:
* DATAFILES - NON SYSTEM/SYSAUX/UNDO TABLESPACES
* DATAFILES - SYSTEM/SYSAUX TABLESPACES
* UNDO - SAME STEPS AS DATAFILES, BUT DO IN 'MOUNT EXCLUSIVE MODE'
* TEMPFILES
* WHOLE DB
* CONTROLFILE (TBD)
* SPFILE (TBD)
* REDOLOGS (TBD) - look in 'whole db' for these steps
* PARAMETERS
db_create_file_dest
db_create_online_log_dest_1          string      +DATA_DG01
db_create_online_log_dest_2          string      +FRA_DG02
db_create_online_log_dest_3          string


-----------------
DATAFILES - NON SYSTEM/SYSAUX/UNDO TABLESPACES
-----------------
Taken directly from https://docs.oracle.com/database/121/OSTMG/GUID-3B8D0956-0888-452D-A9E4-9FB8D98577E0.htm#OSTMG89997
Moving Data Files Between Oracle ASM Disk Groups Using RMAN
You may want to move an active data file in an ARCHIVELOG mode database from one Oracle ASM disk group to another. 
You can use RMAN BACKUP AS COPY to copy the data file to the new disk group and SET NEWNAME and SWITCH commands to 
rename the data file in the control file.

You can also use the ALTER DATABASE MOVE DATAFILE. SQL statement to move data files. For information about moving data 
files online with ALTER DATABASE MOVE DATAFILE, refer to "Moving Data Files Between Disk Groups With ALTER DATABASE".

For this scenario using RMAN, assume that you are using disk groups DATA and USERDATA and you want to move 
the data file users.261.689589837 to disk group USERDATA. 

Ensure that ARCHIVELOG mode is enabled for the database before beginning the procedure to move data files.

To move a data file from one Oracle ASM disk group to another disk group using the RMAN BACKUP AS COPY procedure 
with the SET NEWNAME and SWITCH commands, perform the following steps.

Start RMAN and connect to the target database.

For example:

$ rman
RMAN> CONNECT TARGET SYS@orcl
target database Password: XXXXXXXXX
connected to target database: ORCL (DBID=1217369048)
Generate a report that shows the names of the data files.

Run the following REPORT command after connecting RMAN to the target database. Note the data file name of the file to be moved.

For example:

RMAN> REPORT SCHEMA;

Report of database schema for database with db_unique_name ORCL
 
List of Permanent Datafiles
===========================
File Size(MB) Tablespace           RB segs Datafile Name
---- -------- -------------- ------- ------------------------
1    740      SYSTEM         ***     +DATA/orcl/datafile/system.258.689589737
2    570      SYSAUX         ***     +DATA/orcl/datafile/sysaux.259.689589785
3    55       UNDOTBS1       ***     +DATA/orcl/datafile/undotbs1.260.689589831
4    5        USERS          ***     +DATA/orcl/datafile/users.261.689589837

List of Temporary Files
=======================
File Size(MB) Tablespace           Maxsize(MB) Tempfile Name
---- -------- -------------- ----------- --------------------
1    20       TEMP           32767       +DATA/orcl/tempfile/temp.262.689589851
Back up the data file to the new Oracle ASM disk group.

Run the BACKUP AS COPY command to back up the data file on DATA to USERDATA.

For example:

RMAN> BACKUP AS COPY
        DATAFILE "+DATA/orcl/datafile/users.261.689589837"
        FORMAT   "+USERDATA";

Starting backup at 16-JUN-09
allocated channel: ORA_DISK_1
channel ORA_DISK_1: SID=51 device type=DISK
channel ORA_DISK_1: starting datafile copy
input datafile file number=00004 name=+DATA/orcl/datafile/users.261.689589837
output file name=+USERDATA/orcl/datafile/users.256.689682663
  tag=TAG20090616T103101 RECID=13 STAMP=689682663
channel ORA_DISK_1: datafile copy complete, elapsed time: 00:00:01
Finished backup at 16-JUN-09
You could also specify the data file by the data file number and data file type.

For example:

BACKUP AS COPY
  DATAFILE 4
  FORMAT   "+USERDATA";
Offline the data file that you intend to move to a new disk group.

Run the following SQL command in the RMAN client. Use two single quotation marks around the name of the data file, not double quotation marks.

For example:

RMAN> SQL "ALTER DATABASE DATAFILE 
       ''+DATA/orcl/datafile/users.261.689589837'' OFFLINE";

sql statement: ALTER DATABASE DATAFILE
     ''+DATA/orcl/datafile/users.261.689589837''  OFFLINE
Point the control file to the newly created copy of the data file.

Run the SWITCH...TO COPY command in the RMAN client. The TO COPY option of SWITCH switches the data file to the most recent copy of the data file.

For example:

RMAN> SWITCH DATAFILE "+DATA/orcl/datafile/users.261.689589837" TO COPY;

datafile 4 switched to datafile copy
    "+USERDATA/orcl/datafile/users.256.689682663"
The output of this command displays the new name of the data file.

Recover the renamed data file.

Run the RECOVER command in the RMAN client.

For example:

RMAN> RECOVER DATAFILE "+USERDATA/orcl/datafile/users.256.689682663";

Starting recover at 16-JUN-09
using channel ORA_DISK_1
starting media recovery
media recovery complete, elapsed time: 00:00:01
Finished recover at 16-JUN-09
Bring the data file online.

Run the SQL command in the RMAN client. Use two single quotation marks around the name of the data file, not double quotation marks.

For example:

RMAN> SQL "ALTER DATABASE DATAFILE
      ''+USERDATA/orcl/datafile/users.256.689682663'' ONLINE";

sql statement: ALTER DATABASE DATAFILE
   ''+USERDATA/orcl/datafile/users.256.689682663'' ONLINE
Delete the data file copy from the original Oracle ASM disk group.

In this scenario, +DATA/orcl/datafile/users.261.689589837 is the original data file in DATA. 
Because you issued SET NEWNAME and SWITCH commands for this data file, the original file is 
now recorded in the RMAN repository as a data file copy. Run a DELETE command in the RMAN client to remove this file.

For example:

RMAN> DELETE DATAFILECOPY "+DATA/orcl/datafile/users.261.689589837";

released channel: ORA_DISK_1
allocated channel: ORA_DISK_1
channel ORA_DISK_1: SID=51 device type=DISK
List of Datafile Copies
=======================
Key     File S Completion Time Ckp SCN    Ckp Time       
------- ---- - --------------- ---------- ---------------
14      4    A 16-JUN-09       864471     16-JUN-09      
        Name: +DATA/orcl/datafile/users.261.689589837
        Tag: TAG20090615T084217

Do you really want to delete the above objects (enter YES or NO)? y
deleted datafile copy
datafile copy file name=+DATA/orcl/datafile/users.261.689589837 RECID=14 STAMP=689683255
Deleted 1 objects

------------------------
DATAFILES - SYSTEM/SYSAUX TABLESPACES
------------------------
https://www.linkedin.com/pulse/how-move-datafiles-from-one-asm-diskgroup-another-ahmed-abdellatif
Move SYSTEM and SYSAUX datafiles to another ASM diskgroup
For System and SYSAUX an approach similar to the one given below can be used

1) Create a Copy of datafile in target Diskgroup:

RMAN> backup as copy tablespace sysaux format '+FRA';

Starting backup at 29-AUG-13
using channel ORA_DISK_1
channel ORA_DISK_1: starting datafile copy
input datafile file number=00002 name=+DATA/rac/datafile/sysaux.257.824552199
output file name=+FRA/rac/datafile/sysaux.258.824725695 tag=TAG20130829T102810 RECID=3 STAMP=824725742
channel ORA_DISK_1: datafile copy complete, elapsed time: 00:00:56
Finished backup at 29-AUG-13

2) Then shutdown the database and restart to a mounted state

RMAN> shutdown immediate;

database closed
database dismounted
Oracle instance shut down

RMAN> startup mount;

connected to target database (not started)
Oracle instance started
database mounted

Total System Global Area 400846848 bytes

Fixed Size 2213776 bytes
Variable Size 159385712 bytes
Database Buffers 234881024 bytes
Redo Buffers 4366336 bytes

3) Switch the datafiles to the copy

RMAN> switch tablespace sysaux to copy;

datafile 2 switched to datafile copy "+FRA/rac/datafile/sysaux.258.824725695"

4) Recover the changes made to these tablespaces

RMAN> recover database;

Starting recover at 29-AUG-13
allocated channel: ORA_DISK_1
channel ORA_DISK_1: SID=1 device type=DISK

starting media recovery
media recovery complete, elapsed time: 00:00:02

Finished recover at 29-AUG-13

RMAN>

5) Open the database

RMAN> sql 'alter database open';

sql statement: alter database open

RMAN>

6) Verify the new file location.

SQL> SELECT FILE_NAME FROM DBA_DATA_FILES;

FILE_NAME
--------------------------------------------------------------------------------
+FRA/rac/datafile/users.257.824724469
+DATA/rac/datafile/undotbs1.258.824552199
+FRA/rac/datafile/sysaux.258.824725695
+DATA/rac/datafile/system.256.824552197


------------------------
TEMPFILES
------------------------
Probably it is easier to drop and re-create temp tablespaces with files pointing to new diskgroup.

OR, follow steps in the links provided earlier in this doc.

------------------------
WHOLE DB
------------------------
Taken directly from: http://www.orafaq.com/node/1947

How To Move The Database To Different Diskgroup Migrating from External Redundancy to Normal Redundancy

 Submitted by reddy_uk on Mon, 2007-12-03 14:09
articles: 
RDBMS Server
Oracle RDBMS Server - Enterprise Edition - Version: 10.2.0.2
OS: Applies to any OS, But this is tested on AIX5.3L

Goal:

Moving Data between Disk groups
ASM is a Storage Manager built for Oracle Database file’s, One can store Data files, Temp files, Redologs, Archive logs, Flashback recovery, backupsets and also spfile.

This Notes helps if the Disk groups are created with some redundancy and one want to change the redundancy (e.g. External to Normal, Normal to High) or Migrating data from one Diskgroup to another.

Redundancy of the Disk cannot be changed on the fly, Better way is to move the Data from Disk groups.

The purpose of the Document is to help move the Data from external Redundancy Diskgroup to Normal Redundancy Diskgroup

Note: One need level 0 Backup (or Cold Backup) of the Database before going further

Solution
Create a new diskgroup with desired redundancy and move the existing data to newly created diskgroup.

1) If we have extra disk space available,then we can create a new diskgroup and move the files from old diskgroup to it.

-- Initially I have 3 diskgroup with external redundancy as:

This blog will move the database in all the diskgroups to one diskgroup

export ORACLE_HOME=/opt/oracle/product/10.2.0.2/asm1

export PATH=$ORACLE_HOME/bin:$PATH

export ORACLE_SID=+ASM1

SQL> select state,name from v$asm_diskgroup;

STATE NAME

----------- ------------------------------

MOUNTED DATA1

MOUNTED RMAN1

MOUNTED SYS1

SQL> !ls -ltr /dev/rhdisk*

crw------- 2 root system 14, 1 Feb 5 15:58 /dev/rhdisk1

crw------- 1 root system 14, 0 May 14 13:41 /dev/rhdisk0

crw-r----- 1 root oinstall 14, 2 May 14 17:13 /dev/rhdisk2

crw-r----- 1 root oinstall 14, 7 Jul 11 09:26 /dev/rhdisk7

crw------- 1 oracle dba 14, 9 Jul 11 09:26 /dev/rhdisk9

crw-r--r-- 1 oracle oinstall 14, 8 Jul 11 09:26 /dev/rhdisk8

crw------- 1 oracle dba 14, 14 Jul 11 09:26 /dev/rhdisk14

crw-r--r-- 1 oracle oinstall 14, 13 Jul 11 09:26 /dev/rhdisk13

crw-r----- 1 root oinstall 14, 12 Jul 11 09:26 /dev/rhdisk12

crw------- 1 oracle dba 14, 11 Jul 11 09:26 /dev/rhdisk11

crw------- 1 oracle dba 14, 10 Jul 11 09:26 /dev/rhdisk10

crw------- 1 oracle dba 14, 16 Jul 11 09:26 /dev/rhdisk16

crw------- 1 oracle dba 14, 15 Jul 11 09:26 /dev/rhdisk15

crw------- 1 oracle dba 14, 6 Jul 11 12:05 /dev/rhdisk6

crw------- 1 oracle dba 14, 5 Jul 11 12:06 /dev/rhdisk5

crw------- 1 oracle dba 14, 4 Jul 11 12:06 /dev/rhdisk4

crw-r--r-- 1 oracle oinstall 14, 3 Jul 11 12:06 /dev/rhdisk3

SQL> show PARAMETER ASM_DISKSTRING

NAME TYPE VALUE

------------------------------------ ----------- ------------------------------

asm_diskstring string

SQL> !ssh node2 ls -l /dev/rhdisk*

crw------- 2 root system 15, 0 Feb 5 10:23 /dev/rhdisk0

crw------- 1 root system 15, 1 Feb 5 10:47 /dev/rhdisk1

crw------- 1 oracle dba 15, 11 Jul 11 09:33 /dev/rhdisk10

crw------- 1 oracle dba 15, 10 Jul 11 09:35 /dev/rhdisk11

crw-r----- 1 root oinstall 15, 12 Jul 11 09:36 /dev/rhdisk12

crw-r--r-- 1 oracle oinstall 15, 13 Jul 11 09:37 /dev/rhdisk13

crw------- 1 oracle dba 15, 14 Jul 11 09:38 /dev/rhdisk14

crw------- 1 oracle dba 15, 15 Jul 11 09:40 /dev/rhdisk15

crw------- 1 oracle dba 15, 16 Jul 11 09:42 /dev/rhdisk16

crw-r----- 1 root oinstall 15, 2 Jul 11 12:07 /dev/rhdisk2

crw-r--r-- 1 oracle oinstall 15, 3 Jul 11 12:07 /dev/rhdisk3

crw------- 1 oracle dba 15, 4 Jul 11 12:07 /dev/rhdisk4

crw------- 1 oracle dba 15, 5 Jul 11 12:07 /dev/rhdisk5

crw------- 1 oracle dba 15, 6 Jul 11 12:07 /dev/rhdisk6

crw-r----- 1 root oinstall 15, 7 Jul 11 09:30 /dev/rhdisk7

crw-r--r-- 1 oracle oinstall 15, 8 Jul 11 09:31 /dev/rhdisk8

crw------- 1 oracle dba 15, 9 Jul 11 09:32 /dev/rhdisk9
2) Create a new diskgroup with normal redundancy as :

SQL> create diskgroup DATA2 normal redundancy failgroup datafg01 disk '/dev/rhdisk9' failgroup datafg02 disk '/dev/rhdisk14';

Diskgroup created.

SQL> select state,name,type from v$asm_diskgroup;

STATE NAME TYPE

----------- ------------------------------ ------

MOUNTED DATA1 EXTERN

MOUNTED RMAN1 EXTERN

MOUNTED SYS1 EXTERN

MOUNTED DATA2 NORMAL

export ORACLE_HOME=/opt/oracle/product/10.2.0.2/db1

export PATH=$ORACLE_HOME/bin:$PATH

export ORACLE_SID=db1
3)Backup the current database as follows:

SQL> show parameter db_name

NAME TYPE VALUE

------------------------------------ ----------- ------------------------------

db_name string db

SQL> show parameter control

NAME TYPE VALUE

------------------------------------ ----------- ------------------------------

control_file_record_keep_time integer 7

control_files string +SYS1/db/controlfile/current.257.623341273

SQL> alter database backup controlfile to '+DATA2';

Database altered.

SQL> alter system set control_files='+DATA2\db\CONTROLFILE\Backup.256.627662879' SCOPE=SPFILE;

System altered.

-- Connect to rman

home/oracle > rman target /

Recovery Manager: Release 10.2.0.2.0 - Production on Wed Jul 11 14:53:59 2007

Copyright (c) 1982, 2005, Oracle. All rights reserved.

connected to target database: DB (DBID=732666905)

RMAN> shutdown immediate;=== if its RAC shutdown from node 2 also

using target database control file instead of recovery catalog

database closed

database dismounted

Oracle instance shut down

RMAN> startup nomount;

connected to target database (not started)

Oracle instance started

Total System Global Area 2063597568 bytes

Fixed Size 2072480 bytes

Variable Size 469762144 bytes

Database Buffers 1577058304 bytes

Redo Buffers 14704640 bytes

RMAN> restore controlfile from '+SYS1\db\CONTROLFILE\Current.257.623341273';

Starting restore at 11-JUL-07

allocated channel: ORA_DISK_1

channel ORA_DISK_1: sid=145 instance=db1 devtype=DISK

channel ORA_DISK_1: copied control file copy

output filename=+DATA2/db/controlfile/backup.256.627662879

Finished restore at 11-JUL-07

RMAN> alter database mount;

database mounted

released channel: ORA_DISK_1

RMAN> backup as copy database format '+DATA2';
4)Switch the database to copy. At this moment we are switching to the new Diskgroup

== A SWITCH is equivalent to using the PL/SQL "alter database rename file" statement.

RMAN> switch database to copy;

RMAN > alter database open;==wil not work
this is a bug in 10.2.0.2

exit out and

sqlplus “/ as sysdba”

alter database open

shutdown immediate;

startup

alter system set db_create_file_dest ='+DATA2';
5)Add new tempfile to newly created database.

SQL> create bigfile temporary tablespace temp03 tempfile size 100M;

Tablespace created.

SQL> alter database default temporary tablespace temp03;

Database altered.

Drop any existing tempfile on the old diskgroup

SQL> drop tablespace temp;

Tablespace dropped.
6)Find out how many members we have have in redolog groups, make sure that we have only one member in each log group.(drop other members).

SQL> select * from v$log;

Suppose we have 4 log groups, then add one member to each log group as following:

SQL> alter database add logfile member '+data2' to group 1;

Database altered.

SQL> alter database add logfile member '+data2' to group 2;

Database altered.

SQL> alter database add logfile member '+data2' to group 3;

Database altered.

SQL> alter database add logfile member '+data2' to group 4;

Database altered.

SQL> 
Then we can drop the old logfile member from earlier diskgroups as:

Issue the below command till all the logfiles are in valid state

alter system switch logfile;

SQL> alter database drop logfile member '+SYS1/db/onlinelog/group_2.260.623341307';

Database altered.

SQL> select * from v$logfile;
Logfiles from group 3 and 4 cannot be dropped at this point from node 1 as node 2 is still down

start the database on node 2 and delete the old logfiles in the data1/sys1 diskgroup

7)Use the following query to verify that all the files are moved to new diskgroup with desired redundancy:

SQL> select name from v$controlfile

union

select name from v$datafile

union

select name from v$tempfile

union

select member from v$logfile

union

select filename from v$block_change_tracking
union
select name from v$flashback_database_logfile;

** Change the following afterwards:
db_create_file_dest
db_create_online_log_dest_1       
db_create_online_log_dest_2       
db_create_online_log_dest_3       

-----------------------
CONTROLFILE
-----------------------
http://www.oracle-wiki.net/startdocshowtocontrolfileasm
How to Add Control File when Using ASM
Oracle Database » How To Guides » How to Add Control File when Using ASM
Fold
Table of Contents
Background & Overview
Step-By-Step Guide
Background & Overview

This document provides a step by step guide to add extra control files to a database whose storage is on ASM. In this case the database has one control file on diskgroup +DATA01 and the procedure explains how to add an additional control file located on diskgroup +FRA01

This has not been tested on databases prior to version 11g

Step-By-Step Guide

1. Take a backup of your spfile

sqlplus '/ as sysdba'
SQL> create pfile='/tmp/spfileBACKUP.ora' from spfile;
2. Update the control_file parameter in the spfile.

sqlplus '/ as sysdba'
SQL> select name from v$controlfile;
NAME
--------------------------------------------------------------------------------
+DATA01/MYDB/controlfile/current.200.899418013

SQL> alter system set control_files='+DATA01/MYDB/controlfile/current.200.899418013','+FRA01' scope=spfile sid='*';
3. Restart the database in nomount mode

sqlplus '/ as sysdba'
SQL> shutdown immediate;
SQL> startup nomount;
4. Create the new control file using RMAN.

rman
RMAN> connect target /
RMAN> restore controlfile from '+DATA1/MYDB/controlfile/current.200.899418013';
Starting restore at 09-NOV-12
allocated channel: ORA_DISK_1
channel ORA_DISK_1: sid=111 instance=MYDB devtype=DISK

channel ORA_DISK_1: copied control file copy
output filename=+DATA1/MYDB/controlfile/current.200.899418013
output filename=+FRA01/MYDB/controlfile/current.200.800418013
Finished restore at 09-NOV-12

5. Update the spfile with the new control file name

sqlplus '/ as sysdba'
SQL> alter system set control_files='+DATA01/MYDB/controlfile/current.200.899418013','+FRA01/MYDB/controlfile/current.200.800418013' scope=spfile sid='*';
6. Restart the database and check the new control file

sqlplus '/ as sysdba'
SQL> shutdown immediate;
SQL> startup;
SQL> select name from v$controlfile;
NAME
--------------------------------------------------------------------------------
+DATA01/MYDB/controlfile/current.200.899418013
+FRA01/MYDB/controlfile/current.200.800418013

7. Remove the backup spfile

rm /tmp/spfileBACKUP.ora

----------------------------
SPFILE
----------------------------
http://kb.dbatoolz.com/tp/3372.move_spfile_asm_diskgroup_oracle_rac.html
##
## "Move" spfile from:
##    +OLDLOC/DBNAME/spfileDBNAME.ora
##  to:
##    +NEWLOC/DBNAME/spfileDBNAME.ora
##

## NOTE:
##   in this example there are FOUR nodes:
##      rac1
##      rac2
##      rac3
##      rac4


## run all steps from first node
##
## "copy" spfile to +NEWLOC
sqlplus /nolog
connect / as sysdba
create pfile='/u01/app/oracle/admin/DBNAME/scripts/init_new.ora' from spfile='+OLDLOC/DBNAME/spfileDBNAME.ora';
create spfile='+NEWLOC/DBNAME/spfileDBNAME.ora' from pfile='/u01/app/oracle/admin/DBNAME/scripts/init_new.ora';
exit

## modify init*.ora files to point to new location
##
echo "SPFILE='+NEWLOC/DBNAME/spfileDBNAME.ora'" > /u01/app/oracle/product/10.2.0/db_1/dbs/initDBNAME1.ora
ssh rac2 "echo \"SPFILE='+NEWLOC/DBNAME/spfileDBNAME.ora'\" > /u01/app/oracle/product/10.2.0/db_1/dbs/initDBNAME2.ora"
ssh rac3 "echo \"SPFILE='+NEWLOC/DBNAME/spfileDBNAME.ora'\" > /u01/app/oracle/product/10.2.0/db_1/dbs/initDBNAME3.ora"
ssh rac4 "echo \"SPFILE='+NEWLOC/DBNAME/spfileDBNAME.ora'\" > /u01/app/oracle/product/10.2.0/db_1/dbs/initDBNAME4.ora"

## modify OCR with new SPFILE location
##
export ORACLE_HOME=$CRS_HOME
export PATH=$ORACLE_HOME/bin:$PATH
srvctl modify database -d DBNAME -p +NEWLOC/DBNAME/spfileDBNAME.ora

## bounce ALL instances to switch to new SPFILE
##
export ORACLE_HOME=$CRS_HOME
export PATH=$ORACLE_HOME/bin:$PATH
srvctl stop database -d DBNAME
srvctl start database -d DBNAME

## all services will be down because DB got bounced -- restart it
##
srvctl start service -d DBNAME



## drop old spfile
##
export ORACLE_HOME=/u01/app/oracle/product/10.2.0/asm
export PATH=$ORACLE_HOME/bin:$PATH
export ORACLE_SID=+ASM1
sqlplus /nolog
connect / as sysdba
ALTER DISKGROUP OLDLOC DROP FILE '+OLDLOC/DBNAME/spfileDBNAME.ora';
exit

## verify "old" spfile is gone from OLDLOC
##
export ORACLE_HOME=/u01/app/oracle/product/10.2.0/asm
export PATH=$ORACLE_HOME/bin:$PATH
export ORACLE_SID=+ASM1
asmcmd
ASMCMD> find / *spfile*
+NEWLOC/DBNAME/PARAMETERFILE/spfile.259.667587125
+NEWLOC/DBNAME/spfileDBNAME.ora
