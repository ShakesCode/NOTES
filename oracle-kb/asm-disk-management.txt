ASM DISK MANAGEMENT

CONTENTS (some TBD)

LIST ASM DISKS
LIST ASM DISK DEVICE MAPPING
LIST CANDIDATE DEVICES TO ADD TO ASM
CREATE ASMLIB DISK
CREATE DISK GROUP
ADD DISK TO DISK GROUP
REMOVE DISK FROM DISK GROUP
MULTIPATH CONFIGURATION

=================
LIST ASM DISKS
=================

> ORACLEASM
$oracleasm listdisks

> KFOD UTILITY

$ $GRID_HOME/bin/kfod
--------------------------------------------------------------------------------
ORACLE_SID ORACLE_HOME
================================================================================
     +ASM1 /u01/app/12.1.0.2.GRD
     +ASM2 /u01/app/12.1.0.2.GRD

$ kfod disks=all

--------------------------------------------------------------------------------
 Disk          Size Path                                     User     Group
================================================================================
   1:     262138 Mb ORCL:ASM001
   2:     262138 Mb ORCL:ASM002
   3:     262138 Mb ORCL:ASM003
   4:     262138 Mb ORCL:ASM004
   5:     262138 Mb ORCL:ASM005

--------------------------------------------------------------------------------
ORACLE_SID ORACLE_HOME
================================================================================
     +ASM1 /u01/app/12.1.0.2.GRD
     +ASM2 /u01/app/12.1.0.2.GRD

============================
LIST ASM DISK DEVICE MAPPING
============================
https://blogs.oracle.com/AlejandroVargas/entry/mapping_asm_disks_to_physical

The following is not working well - it  is not listing 'on device' information.
[root@orcldb2 ~]# /etc/init.d/oracleasm querydisk VOL1
Disk "VOL1" is a valid ASM disk on device [8, 97]

[root@orcldb2 ~]# ls -l /dev | grep 8, | grep 97
brw-rw----   1 root disk     8,      81 Nov  4 13:02 sdg1

========================================
ADD DISK TO DISK GROUP AND REBALANCE
========================================
ARTICLE1: http://vijaydumpa.blogspot.in/2008/01/asm-san-migration-case-study.html
Friday, January 4, 2008
ASM SAN migration Case Study:
Problem: 
I need to remove 3 old SAN disks(size of 150 G each) from my ASM database without any down time.

Server, OS and DB details:
OS: RHEL 4 Update 4 (64 bit)
DB: 10.2.0.3.0
Server: DELL PowerEdgeTM 2950(16G Memory, 4 CPU's(Intel(R) Xeon(R) CPU 5160 @ 3.00GHz))


Procedure:
1. Make sure you have free disks available to add to the ASM diskgroup, before dropping the disk's:

On ASM instance:
sqlplus / as sysdba

set linesize 200;
col path format a20;

select NAME, PATH, MOUNT_STATUS, HEADER_STATUS, MODE_STATUS, TOTAL_MB, FREE_MB
from v$asm_disk;


2. Add new ASM disks to the diskgroup:

alter diskgroup ORADB_DATA01_DG add disk 'ORCL:H_1253_1521';
alter diskgroup ORADB_DATA01_DG add disk 'ORCL:H_1253_1522';
alter diskgroup ORADB_DATA01_DG add disk 'ORCL:H_1253_1523';

alter diskgroup ORADB_DATA01_DG REBALANCE POWER 10; or
alter system set asm_power_limit=10 scope=memory;

-- Check the rebalance operation
select * from v$asm_operation;


Time taken to rebalance the diskgroup: app. 90 min.


3. Identify the disks to drop from the diskgroup:

set linesize 200;
col path format a20;

select NAME, PATH, MOUNT_STATUS, HEADER_STATUS, MODE_STATUS, TOTAL_MB, FREE_MB
from v$asm_disk;

ALTER DISKGROUP ORADB_DATA01_DG DROP DISK B_1530_1091;
ALTER DISKGROUP ORADB_DATA01_DG DROP DISK C_1530_1090;
ALTER DISKGROUP ORADB_DATA01_DG DROP DISK D_1530_1081;

alter diskgroup ORADB_DATA01_DG REBALANCE POWER 10; or
alter system set asm_power_limit=10 scope=memory;

-- Check the rebalance operation
select * from v$asm_operation;


Time taken to rebalance the diskgroup: app. 90 min.


4. Physically removing the disks from the server:

as root only!!!

/etc/init.d/oracleasm deletedisk B_1530_1091
/etc/init.d/oracleasm deletedisk C_1530_1090
/etc/init.d/oracleasm deletedisk D_1530_1081


How to find mapping of ASM disks to Physical Devices?

a.
atlxd215 | +ASM | /dev
> /etc/init.d/oracleasm querydisk H_1253_1521
Disk "H_1253_1521" is a valid ASM disk on device [120, 113]

b.
atlxd215 | +ASM | /dev
> ls -l /dev | grep 120 | grep 113
brwxrwx--- 1 oracle dba 120, 113 Oct 1 10:55 emcpowerh1

[or] 

atlxd215 | +ASM | /dev
> cd oracleasm
atlxd215 | +ASM | /dev/oracleasm
> cd disks

atlxd215 | +ASM | /dev/oracleasm/disks
> ls -lt
total 0
brw-rw---- 1 oracle dba 120, 177 Oct 1 11:04 L_1253_1561
brw-rw---- 1 oracle dba 120, 161 Oct 1 11:04 K_1253_1560
brw-rw---- 1 oracle dba 120, 145 Oct 1 11:04 J_1253_1541
brw-rw---- 1 oracle dba 120, 129 Oct 1 11:03 I_1253_1540
brw-rw---- 1 oracle dba 120, 113 Oct 1 11:03 H_1253_1521
brw-rw---- 1 oracle dba 120, 97 Oct 1 11:03 G_1253_1520
brw-rw---- 1 oracle dba 120, 81 Oct 1 11:03 F_1253_1501
brw-rw---- 1 oracle dba 120, 65 Oct 1 10:59 E_1253_1500

c. 
If you are using multi-path, you will need an additional step to map the physical device to the multi-path device:

as root only!!!

# /sbin/powermt display dev=emcpowerh1


ARTICLE2: http://harvarinder.blogspot.in/2015/01/ora-15031-disk-specification.html
SHOW PARAMETER ASM_DISKSTRING

NAME                                 TYPE        VALUE
------------------------------------ ----------- ------------------------------
asm_diskstring                       string      ORCL:*

ALTER DISKGROUP DATA01 ADD DISK 'ORCL:DISK04';
ALTER DISKGROUP DATA01 ADD DISK 'ORCL:DISK05' rebalance;

======================================
MOVE A DATAFILE TO ANOTHER DISK GROUP
======================================
NOTE: NEEDS DOWNTIME

http://www.dba-oracle.com/t_migrate_asm_datafiles_from_one_diskgroup_to_another.htm
(stuff below is direct copy from the above website)

Question:  I need to move datafiles from one diskgroup to another ASM diskgroup.  How do I migrate ASM files between diskgroups?

Answer:  Moving data files from one ASM diskgroup to another diskgroup involves these steps:

Step 1: Get the data file name:

select
   file_name
from
   dba_data_files;

Step 2:  Identify the target diskgroup to migrate to:

select
   name
from
   v$asm_diskgroup;

Step 3:  Take the old data file offline:

alter database datafile 
   '+MYDB_OLDDATA/mysid/app_data.nnn' 
offline; 

Step 4:  Copy the datafile to the new diskgroup (using RMAN)

$ rman target / 

connected to target database: TESTDB (DBID=1234) 

RMAN> copy datafile '+MYDB_OLDDATA/mysid/app_data.nnn' to '+MYDB_NEWDATA'; 

Step 6: Get the new filename:

select    
   file_name 
from 
   dba_data_files; 

Step 7: Re-name the data file:

SQL> alter database rename file 
2 '+MYDB_OLDDATA/mysid/app_data.nnn' 
3 to 
4 '+MYDB_NEWDATA/mysid/app_data.nnn';

After Oracle renames the ASM database file in the data dictionary, it will remove the original ASM database file (+MYDB_OLDDATA/mysid/app_data.nnn). 

Step 8: Rename the RMAN data file:

RMAN> switch datafile '+MYDB_NEWDATA/mysid/app_data.nnn' to copy;

Step 9: Use RMAN recovery to the new data file:

RMAN> recover datafile '+MYDB_NEWDATA/mysid/app_data.nnn';

Step 10:  Put the data file online:

RMAN> alter database datafile '+MYDB_NEWDATA/mysid/app_data.nnn' online;

Step 11: Delete the old ASM file from the old diskgroup.
$ ORACLE_SID=+ASM; export ORACLE_SID

$ sqlplus "/ as sysdba"

SQL> ALTER DISKGROUP TESTDB_DATA2 DROP FILE '+TESTDB_OLDDATA/mysid/app_data.nnn';

======================================
REBALANCE - RISKS
======================================
https://kevinclosson.net/2016/08/21/stop-constantly-adding-disks-to-your-asm-disk-groups-resize-your-asm-disks-on-all-flash-array-storage-adding-disks-is-really-the-y2k-way-heres-why/
In other words, with the add-disk method administrators are a) making changes in the array, making changes in the Operating System 
and physically rebalancing existing data and doing so in a maintenance window or with a low rebalance power limit and likely 
causing data placement skew.

The resize-disk approach makes no changes and causes no disruption and is nearly immediate. It is a task administrators can 
perform outside maintenance windows.

=======================================
FAST MIRROR RESYNCH, FAST REBALANCE
=======================================
http://jeyaseelan-m.blogspot.in/2011/08/fast-mirror-resync-and-fast-rebalance.html
