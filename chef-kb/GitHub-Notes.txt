Github

MOST USEFUL TUTORIALS
http://www.vogella.com/tutorials/Git/article.html

CONFIGURATION INFORMATION
www.github.com  gdba@y,  s14
http://gitref.org/basic/   for help
http://nathanj.github.io/gitguide/tour.html   about the git gui that came with Chef Toolchain
http://matthew-brett.github.io/pydagogue/git_gui_windows.html   using Git GUI on windows
http://gitbyexample.org/  command line and other tutorials

Repositories:
DBA-Scripts01

HTTPS - https://github.com/coderdba/DBA-Scripts01.git
SSH - git@github.com:coderdba/DBA-Scripts01.git

SETUP – EMAIL, USERNAME, GITHUB URL
git config --global user.name "username given to github or company git"
git config --global user.email "email given to github or company git"
git config --global http.proxy http://proxyserver.company.com:8080  (if necessary)

SETUP SSH KEYS – ON LINUX/WINDOWS MACHINE WITH GIT BASH
https://help.github.com/articles/generating-ssh-keys/

Go to ~/.ssh folder
List the files 
If ssh has been setup, you will find id_dsa.pub, id_rsa.pub etc
Create keys:  ssh-keygen –t  rsa  -C  “email given to github or company git”
It asks which file to keep the keys:  ~/.ssh/‘id_rsa’ is default and accept it
It asks for passphrase:  give a passphrase or leave it blank
After that, two files id_rsa and id_rsa.pub will be created

Add key to ssh agent as follows:
In Git-bash turn on ssh-agent:  ssh-agent –s
Add the key:  ssh-add ~/.ssh/id_rsa

Add ssh public key to git account as follows:
Open the id_rsa.pub file with vi or notepad or wordpad
Copy the contents
Logon to github or your company github
Go to account settings
Click SSH Keys on left hand side panel
Paste the copied key
Click add key button
It asks for account ID and password – provide it to confirm

Test the connection: ssh –T git@github.com or ssh –T git@companygit

CREATING A NEW REPOSITORY WITH GUI
Did create a new repository online in browser itself  DBA-Scripts01
However, it can be created using command line from laptop or a Windows app as described in quick setup below.

Initially, when created using browser, I had not created a readme.md.  Therefore, every time I went to the repository it was showing the quick-setup screen as below.  Then, I edited the readme file online and ‘committed’ it  - and then on, it was taking to me a proper directory structure.

Quick setup — if you've done this kind of thing before
 Set up in Desktop   either download a windows app and install it  - OR – see below
or
HTTPSSSH 
We recommend every repository include a README, LICENSE, and .gitignore.
…or create a new repository on the command line
echo # DBA-Scripts01 >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:coderdba/DBA-Scripts01.git
git push -u origin master
…or push an existing repository from the command line
git remote add origin git@github.com:coderdba/DBA-Scripts01.git
git push -u origin master
…or import code from another repository
You can initialize this repository with code from a Subversion, Mercurial, or TFS project.
= = = = 

Quick setup — if you've done this kind of thing before
 Set up in Desktop  either download a windows app and install it  - OR – see below
or
HTTPSSSH 
We recommend every repository include a README, LICENSE, and .gitignore.
…or create a new repository on the command line
echo # DBA-Scripts01 >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/coderdba/DBA-Scripts01.git
git push -u origin master
…or push an existing repository from the command line
git remote add origin https://github.com/coderdba/DBA-Scripts01.git
git push -u origin master
…or import code from another repository
You can initialize this repository with code from a Subversion, Mercurial, or TFS project.
Import code

HTTP:
…or create a new repository on the command line
touch README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://git.github.com/coderdba/testrepo.git
git push -u origin master
…or push an existing repository from the command line
git remote add origin https://git.github.com/coderdba/testrepo.git
git push -u origin master
SSH:
…or create a new repository on the command line
touch README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin git@git.github.com:coderdba/testrepo.git
git push -u origin master
…or push an existing repository from the command line
git remote add origin git@git.github.com:coderdba/testrepo.git
git push -u origin master

INITIATE A REPOSITORY FROM GUI AND README PUSH FROM GIT-BASH
Logon to github or company’s git
Create a new repository
In git-bash - create a folder to contain repositories, say, ~/git-repositories
Create a sub-folder for your repository in it, say, testrepo :   ~/git-repositories/testrepo
Go into that directory and run the following commands:

echo README >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin git@github.com:coderdba/testrepo.git
git push -u origin master

INITIATE A REPOSITORY FULLY FROM GIT-BASH
http://gitbyexample.org/
An error fix for ‘bare’ - http://stackoverflow.com/questions/19155097/git-clone-bare-fatal-repository-does-not-exist

In git-bash - create a folder to contain repositories, say, ~/git-repositories
git - -bare init alma.git  (or just alma??) (older versions used git clone - - bare alma alma.git)

PUSH CODE TO REPOSITORY
http://stackoverflow.com/questions/9577968/how-to-upload-files-on-github
http://readwrite.com/2013/10/02/github-for-beginners-part-2
<< to be done>>

GIT COMMANDS
List git configuration:  git config --list  

Initialize Git:  git init (this will create a .git folder in the current directory and initializes git)

To change remote repository from configuration (either to switch repositories to push/pull OR to switch from public github to company github etc):  git remote set-url origin git@git.github.com:username/testrepo.git  
(https://help.github.com/articles/changing-a-remote-s-url)

To remove remote repository from configuration:  git remote remove origin

Generate SSH key: https://help.github.com/articles/generating-ssh-keys/

