============================================================================================
            CHEF TOOLCHAIN INSTALL/CONFIG AND VM CREATION WITH VAGRANT
============================================================================================

==============================
INSTALLATION
==============================

Installation is of 'Bill's Kitchen' that bundles ChefDK, vagrant etc:
https://github.com/tknerr/bills-kitchen/releases
(https://github.com/tknerr/bills-kitchen)

Installs the following:
  Chef-DK
  Vagrant
  Bill's Kitchen CLI/Console
  Packer
  Berkshire
  Consul
  Terraform
  
-----------
INSTALL
-----------
Create a directory c:\Local
Download bills-kitchen's right zip version and unzip using 7-zip

-----------------
MOUNT THE O DRIVE
-----------------
Check to see if you already have an O:\ drive.  
2. Mount the kitchen to the O:\ drive by double-clicking the C:\Local\billx\billy\mount-drive.cmd file
3. Open the O:\ drive in Windows File Explorer.
4. Click O:\Launch ConEmu.lnk to open a command prompt
5. The first time you run the console it will prompt you for a git username and git email address. 
            Provide it
6. If you already have an ssh key, copy your private key to O:\home\.ssh\ 
    -- if you don't have a key  you can create one and set it up with your GitHub Enterprise account.
    
    --> NOTE: I had created them already, so copied from c:\Users\myusername\.ssh to o:\home\.ssh
    -->       Files: id_rsa, id_rsa.pub, known_hosts
    
-------------
SSH KEY STEPS
-------------

NOTE: FIRST CREATE KEYS AND REGISTER IN SSH-CLIENT IN GIT-BASH, THEN COPY THE KEYS TO O DRIVE ALSO

If you dont have a key:
 See: https://help.github.com/articles/generating-ssh-keys/
    
  NOTE: Used Git-Bash instead of Bill's Kitchen interface
  
  Create the key:
      $ ssh-keygen -t rsa -C "gdba@y" (or g.m@t.com)
      Generating public/private rsa key pair.
      Enter file in which to save the key (/c/Users/mysername/.ssh/id_rsa):
      Enter passphrase (empty for no passphrase):
      Enter same passphrase again:
      Your identification has been saved in /c/Users/myusername/.ssh/id_rsa.
      Your public key has been saved in /c/Users/myusername/.ssh/id_rsa.pub.
      The key fingerprint is:
      11:22:aa:bb:... g.m@t.com (or gdba@y)

      $ cd ~/.ssh (master)
      $ ls -l (or dir)
      -rw-r--r--    1 username   Administ     1675 Oct 28 21:08 id_rsa
      -rw-r--r--    1 username   Administ      413 Oct 28 21:08 id_rsa.pub

  Add the private key to the ssh-agent:  (used git-bash for this)
    Windows: (this seems like it is for Unix)
    # start the ssh-agent in the background
    $ eval "$(ssh-agent -s)"
    Agent pid 57488
    $ chgrp -R Users ~/.ssh
    $ chmod 0600 ~/.ssh/id_rsa
    $ ssh-add ~/.ssh/id_rsa
  
  Add your SSH public key to your Github account
      $ cat ~/.ssh/id_rsa.pub
      # Displays the contents of the id_rsa.pub file. You'll now need to highlight and copy the output

        Import your public SSH key into your GitHub. 
          1.Navigate to https://git.company.com and sign in using your AD Credentials (or to www.github.com)
          2.In the upper righthand corner, click the 'Account Settings' icon 
          3.In the menu on the left side of the page, click on 'SSH keys'
          4.Click 'Add SSH key'
          5.Add a title (Example: Coder's Window's machine machine1)
          6.Paste your public key into the area below titled 'Key'
          7.Click 'Add key' and confirm by entering your password

            It shows on the screen as follows after 'add key':
            
            g.m@t.com Laptop machine1 
            
            xx:yy:aa:bb:....
             Added on Oct 28, 2015 â€” Never used 

  IMPORTANT: (for Bill's Kitchen to work)
  Copy the key files to O:\home\.ssh
  
  Verify git connection with keys:
    
    With Bill's Kitchen:  (creates known_hotss file in o:\home\.ssh)
      o:\home>ssh -T git@git.company.com  (or git@github.com)
      The authenticity of host 'git.company.com (999.999.999.999)' can't be established.
      ECDSA key fingerprint is aa:bb:....
      Are you sure you want to continue connecting (yes/no)? yes
      Warning: Permanently added 'git.company.com,999.999.999.999' (ECDSA) to the list of known hosts.
      Hi user! You've successfully authenticated, but GitHub does not provide shell access.

    With git-bash:  (creates known_hosts file under c:/users/username/.ssh)
      $ cd ~/.ssh (master)
      $ ssh -T git@git.company.com
      The authenticity of host 'git.company.com (999.999.999.999)' can't be established.
      
      RSA key fingerprint is aa:bb:cc:dd.....
      Are you sure you want to continue connecting (yes/no)? yes
      Warning: Permanently added 'git.company.com,999.999.999.999' (RSA) to the list of
      known hosts.
      Hi user! You've successfully authenticated, but GitHub does not provide shell access.
      
-------------------
VERIFY INSTALL
-------------------
Launch Bill's Kitchen interface by clicking "O:\Launch ConEmu.lnk"

Chef-dk is installed under o:\tools\chefdk:
  $ which kitchen
  o:\tools\chefdk\bin\kitchen
  
  $ which chef-client
  o:\tools\chefdk\bin\chef-client

Under o:\tools all other tools also are installed (except virtualbox)
  Vagrant
  Packer 
  ...
  Ruby (under chefdk\embedded)
  ...
  
o:\cookbooks\node0>vagrant plugin list 
  vagrant-berkshelf (4.0.3)              
    - Version Constraint: 4.0.3          
  vagrant-cachier (1.2.0)                
    - Version Constraint: 1.2.0          
  vagrant-omnibus (1.4.1)                
    - Version Constraint: 1.4.1          
  vagrant-share (1.1.3, system)          
  vagrant-toplevel-cookbooks (0.2.4)     
    - Version Constraint: 0.2.4       

Directory of CO:\tools                                      
                                                            
02/28/2015  02:29 AM    <DIR>          .                    
02/28/2015  02:29 AM    <DIR>          ..                   
02/28/2015  02:24 AM    <DIR>          chefdk               
02/28/2015  02:19 AM    <DIR>          clink                
02/28/2015  02:19 AM    <DIR>          conemu               
02/28/2015  02:22 AM    <DIR>          consul               
02/28/2015  02:29 AM    <DIR>          cygwin-rsync         
02/28/2015  02:29 AM    <DIR>          cygwin-ssh           
02/28/2015  02:20 AM    <DIR>          devkit               
02/28/2015  02:20 AM    <DIR>          kdiff3               
02/28/2015  02:22 AM    <DIR>          packer               
02/28/2015  02:19 AM    <DIR>          portablegit          
02/28/2015  02:20 AM    <DIR>          putty                
10/28/2015  09:23 PM    <DIR>          sublimetext2         
02/28/2015  02:22 AM    <DIR>          terraform            
02/28/2015  02:21 AM    <DIR>          vagrant  

------------
Proxy on/off
------------
https://github.com/tknerr/bills-kitchen/tree/master/files/tools/scripts has some proxy-on-off scripts
(check this and other sites as required)

==============================
KITCHEN AS DONE ON WORK LAPTOP
==============================
----------
Tasks done
----------
1. Try out creating a kitchen manually
2. Create a Unix machine using cookbook and kitchen (USING BERKS - not manually)

---------
Reference
---------
http://kitchen.ci/
https://docs.chef.io/kitchen.html
https://docs.chef.io/ctl_kitchen.html

====
TASK - Try out creating a kitchen manually
====

o:\cookbooks>mkdir dummy1                                                              
                                                                                       
o:\cookbooks>cd dummy1                                                                 
                                                                                       
o:\cookbooks\dummy1>kitchen init --driver=kitchen-vagrant                              
      create  .kitchen.yml                                                             
      create  test/integration/default                                                 
Fetching: test-kitchen-1.4.2.gem (100%)                                                
Successfully installed test-kitchen-1.4.2                                              
Fetching: kitchen-vagrant-0.19.0.gem (100%)                                            
Successfully installed kitchen-vagrant-0.19.0                                          
Parsing documentation for test-kitchen-1.4.2                                           
Installing ri documentation for test-kitchen-1.4.2                                     
Parsing documentation for kitchen-vagrant-0.19.0                                       
Installing ri documentation for kitchen-vagrant-0.19.0                                 
2 gems installed                                                                       
                                                                                       
o:\cookbooks\dummy1>dir                                                                
 Volume in drive O is OSDisk                                                           
 Volume Serial Number is 5299-C0F6                                                     
                                                                                       
 Directory of o:\cookbooks\dummy1                                                      
                                                                                       
10/29/2015  10:47 AM    <DIR>          .                                               
10/29/2015  10:47 AM    <DIR>          ..                                              
10/29/2015  10:47 AM    <DIR>          .kitchen                                        
10/29/2015  10:47 AM               190 .kitchen.yml                                    
10/29/2015  10:47 AM    <DIR>          test                                            
               1 File(s)            190 bytes                                          
               4 Dir(s)  137,201,287,168 bytes free                                    
                                                                                       
o:\cookbooks\dummy1>cat .kitchen.yml                                                   
---                                                                                    
driver:                                                                                
  name: vagrant                                                                        
                                                                                       
provisioner:                                                                           
  name: chef_solo                                                                      
                                                                                       
platforms:                                                                             
  - name: ubuntu-12.04                                                                 
  - name: centos-6.4                                                                   
                                                                                       
suites:                                                                                
  - name: default                                                                      
    run_list:                                                                          
                                                                                       
    attributes:                                                                        
                                                                                       

----
Verify
----

ERRORS OUT:
o:\cookbooks\dummy1>kitchen list  (errored out)
>>>>>> ------Exception-------
>>>>>> Class: Kitchen::ClientError
>>>>>> Message: Could not load the 'vagrant' driver from the load path. Please ensure that your driver is installed as a gem or included in your Gemfile if using Bundler.
>>>>>> ----------------------
>>>>>> Please see .kitchen/logs/kitchen.log for more details
>>>>>> Also try running `kitchen diagnose --all` for configuration

To fix: https://github.com/chef/chef-dk/issues/15

o:\cookbooks\dummy1>chef gem list kitchen-vagrant

*** LOCAL GEMS ***

kitchen-vagrant (0.19.0, 0.15.0)

o:\cookbooks\node0>chef gem uninstall kitchen-vagrant -v 0.19.0
Successfully uninstalled kitchen-vagrant-0.19.0

NOW THIS WILL WORK PROPERLY:
---------------------------
o:\cookbooks\dummy1>kitchen list
Instance             Driver   Provisioner  Last Action
default-ubuntu-1204  Vagrant  ChefSolo     <Not Created>
default-centos-64    Vagrant  ChefSolo     <Not Created>

====================================================================================
TASK - Create a Unix machine using cookbook and kitchen (USING BERKS - not manually)
====================================================================================

-----------
ENVIRONMENT
-----------
Bill's kitchen as CLI
berks
vagrant
chef-solo

Cookbooks location:  O:\cookbooks
Software location :  O:\tools

--------------------------------------
CREATE A COOKBOOK SKELETON USING BERKS
--------------------------------------

$ berks cookbook node0

Creates o:\cookbooks\node0 and files/folders under it

Main files: 
Vagrantfile
.kitchen.yml

-----------
Vagrantfile
-----------
CHANGES DONE:
config.vm.hostname --> changed to 'node0' from  'node0-berkshelf'
config.vm.box = 'chef/ubuntu-14.04' --> change this to bento/ubuntu-14.04 - as the URL has changed
                (error without change and fix is described below)

o:\cookbooks\node0>cat Vagrantfile                                                           
# -*- mode: ruby -*-                                                                         
# vi: set ft=ruby :                                                                          
                                                                                             
# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!             
VAGRANTFILE_API_VERSION = '2'                                                                
                                                                                             
Vagrant.require_version '>= 1.5.0'                                                           
                                                                                             
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|                                       
  # All Vagrant configuration is done here. The most common configuration                    
  # options are documented and commented below. For a complete reference,                    
  # please see the online documentation at vagrantup.com.                                    
                                                                                             
  config.vm.hostname = 'node0'                                                     
                                                                                             
  # Set the version of chef to install using the vagrant-omnibus plugin                      
  # NOTE: You will need to install the vagrant-omnibus plugin:                               
  #                                                                                          
  #   $ vagrant plugin install vagrant-omnibus                                               
  #                                                                                          
  if Vagrant.has_plugin?("vagrant-omnibus")                                                  
    config.omnibus.chef_version = 'latest'                                                   
  end                                                                                        
                                                                                             
  # Every Vagrant virtual environment requires a box to build off of.                        
  # If this value is a shorthand to a box in Vagrant Cloud then                              
  # config.vm.box_url doesn't need to be specified.                                          
  config.vm.box = 'chef/ubuntu-14.04'                                                        

  # Assign this VM to a host-only network IP, allowing you to access it                      
  # via the IP. Host-only networks can talk to the host machine as well as                   
  # any other machines on the same network, but cannot be accessed (through this             
  # network interface) by any external networks.                                             
  config.vm.network :private_network, type: 'dhcp'                                           
                                                                                             
  # Create a forwarded port mapping which allows access to a specific port                   
  # within the machine from a port on the host machine. In the example below,                
  # accessing "localhost:8080" will access port 80 on the guest machine.                     
 
  # Share an additional folder to the guest VM. The first argument is                        
  # the path on the host to the actual folder. The second argument is                        
  # the path on the guest to mount the folder. And the optional third                        
  # argument is a set of non-required options.                                               
  # config.vm.synced_folder "../data", "/vagrant_data"                                       
                                                                                             
  # Provider-specific configuration so you can fine-tune various                             
  # backing providers for Vagrant. These expose provider-specific options.                   
  # Example for VirtualBox:                                                                  
  #                                                                                          
  # config.vm.provider :virtualbox do |vb|                                                   
  #   # Don't boot with headless mode                                                        
  #   vb.gui = true                                                                          
  #                                                                                          
  #   # Use VBoxManage to customize the VM. For example to change memory:                    
  #   vb.customize ["modifyvm", :id, "--memory", "1024"]                                     
  # end                                                                                      
  #                                                                                          
  # View the documentation for the provider you're using for more                            
  # information on available options.                                                        
                                                                                             
  # The path to the Berksfile to use with Vagrant Berkshelf                                  
  # config.berkshelf.berksfile_path = "./Berksfile"                                          
                                                                                             
  # Enabling the Berkshelf plugin. To enable this globally, add this configuration           
  # option to your ~/.vagrant.d/Vagrantfile file                                             
  config.berkshelf.enabled = true                                                            
                                                                                             
  # An array of symbols representing groups of cookbook described in the Vagrantfile         
  # to exclusively install and copy to Vagrant's shelf.                                      
  # config.berkshelf.only = []                                                               
                                                                                             
  # An array of symbols representing groups of cookbook described in the Vagrantfile         
  # to skip installing and copying to Vagrant's shelf.                                       
  # config.berkshelf.except = []                                                             
 
  config.vm.provision :chef_solo do |chef|                                                   
    chef.json = {                                                                            
      mysql: {                                                                               
        server_root_password: 'rootpass',                                                    
        server_debian_password: 'debpass',                                                   
        server_repl_password: 'replpass'                                                     
      }                                                                                      
    }                                                                                        
                                                                                             
    chef.run_list = [                                                                        
                                                                                             
      'recipe[node0::default]'                                                               
    ]                                                                                        
  end                                                                                        
                                                                                             
end                                                                                          
                                                                                             
-----------
Kitchen.yml
-----------
CHANGES DONE:
Platforms:  Added platform -name: ubuntu-14.04 as Vagrantfile box is ubuntu-14.04

o:\cookbooks\node0>cat .kitchen.yml
---
driver:
  name: vagrant

provisioner:
  name: chef_solo

platforms:
  - name: ubuntu-12.04
  - name: ubuntu-14.04
  - name: centos-6.4

suites:
  - name: default
    run_list:

    attributes:

------------
Start the VM
------------
NOTE: This will 'create' the machine also when run the first time (downloads the image also the first time)

$ vagrant up

o:\cookbooks\node1>grep node1 Vagrantfile
  config.vm.hostname = 'node1-berkshelf'
      'recipe[node1::default]'

o:\cookbooks\node1>vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'chef/ubuntu-14.04' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: >= 0
==> default: Loading metadata for box 'chef/ubuntu-14.04'
    default: URL: https://atlas.hashicorp.com/chef/ubuntu-14.04
The box you're adding has a name different from the name you
requested. For boxes with metadata, you cannot override the name.
If you're adding a box using `vagrant box add`, don't specify
the `--name` parameter. If the box is being added via a Vagrantfile,
change the `config.vm.box` value to match the name below.

Requested name: chef/ubuntu-14.04
Actual name: bento/ubuntu-14.04

ERROR - chef/ubuntu-14.04 is now bento/ubuntu-14.04 --> edit Vagrantfile to reflect that

ERROR - Private network could not be brought up --> comment out that line in Vagrantfile as that  needs local admin rights

SUCCESS - Machine is created after downloading the box image.  
          However, error in chef-client install (Vagrantfile has line on chef-omnibus install)
          
ERROR - Error in chef-client install
After creating the machine, Vagrant tries to install chef-client on the VM.  This is due to the chef-omnibus line in 
Vagrantfile.  However, as wget from VM requires certificate it failed.
https://tickets.opscode.com/browse/CHEF-4178 --> looks like the bento image does not have the right certificates (fixed below)
https://github.com/chef/omnibus/issues/347 --> another item where it says use version instead of 'latest' in omnibus line

https://tickets.opscode.com/browse/CHEF-4178 -->
            http://eric.lubow.org/2011/security/fixing-centos-root-certificate-authority-issues/
Or: http://serverfault.com/questions/394815/how-to-update-curl-ca-bundle-on-redhat

That was due to certificates missing in the Ubuntu box
  Did the following to get the certificates curl uses:
  Logon to the VM - $ vagrant ssh (from Bill's kitchen)
  cd /etc/ssl/certs
  Backup ca-bundle.crt before next steps
  wget http://curl.haxx.se/ca/cacert.pem (??and copy it to ca-bundle.crt??)
  -OR-
  curl http://curl.haxx.se/ca/cacert.pem -o /etc/pki/tls/certs/ca-bundle.crt
  
Also see: http://stackoverflow.com/questions/23032165/where-is-the-official-download-location-for-cacert-pem

SEE THE MESSAGES WITH ERRORS AND POST-FIX MESSAGES BELOW

-----------------------------
Vagrant Up - Screen Output
-----------------------------
O:\cookbooks\node0>vagrant up

Bringing machine 'default' up with 'virtualbox' provider...
==> default: Loading Berkshelf datafile...
==> default: Sharing cookbooks with VM
==> default: Checking if box 'bento/ubuntu-14.04' is up to date...
==> default: Updating Vagrant's Berkshelf...
==> default: Resolving cookbook dependencies...
==> default: Fetching 'node0' from source at .
==> default: Using node0 (0.1.0) from source at .
==> default: Vendoring node0 (0.1.0) to O:/home/.berkshelf/vagrant-berkshelf/shelves/berkshelf20151029-3608-1ns1cjw-default/node0
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
==> default: Forwarding ports...
    default: 22 => 2222 (adapter 1)
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2222
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Warning: Connection timeout. Retrying...
    default: Warning: Connection timeout. Retrying...
    default:
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default:
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if its present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default:
    default: Guest Additions Version: 5.0.6
    default: VirtualBox Version: 4.3
==> default: Setting hostname...
==> default: Mounting shared folders...
    default: /vagrant => O:/cookbooks/node0
    default: /tmp/vagrant-cache => O:/home/.vagrant.d/cache/bento/ubuntu-14.04
    default: /tmp/vagrant-chef/e26967a8b31a08341162f9e37e9eab97/cookbooks => O:/home/.berkshelf/vagrant-berkshelf/shelves/berkshelf20151029-3608-1ns1cjw-default
==> default: Installing Chef 12.5.1 Omnibus package...
==> default: Downloading Chef 12.5.1 for ubuntu...
==> default: downloading https://www.chef.io/chef/metadata?v=12.5.1&prerelease=false&nightlies=false&p=ubuntu&pv=14.04&m=x86_64
==> default:   to file /tmp/install.sh.1468/metadata.txt
==> default: trying wget...
==> default: trying perl...
==> default: trying python...
==> default: Unable to retrieve a valid package!
==> default: Version: 12.5.1

==> default: Please file a Bug Report at https://github.com/opscode/opscode-omnitruck/issues/new
==> default: Alternatively, feel free to open a Support Ticket at https://www.getchef.com/support/tickets
==> default: More Chef support resources can be found at https://www.getchef.com/support

==> default: Please include as many details about the problem as possible i.e., how to reproduce
==> default: the problem (if possible), type of the Operating System and its version, etc.,
==> default: and any other relevant details that might help us with troubleshooting.

==> default: Metadata URL: https://www.chef.io/chef/metadata?v=12.5.1&prerelease=false&nightlies=false&p=ubuntu&pv=14.04&m=x86_64
==> default:
==> default: DEBUG OUTPUT FOLLOWS:
==> default:
==> default: STDERR from wget:
==> default:
==> default: --2015-10-29 06:48:33--  https://www.chef.io/chef/metadata?v=12.5.1&prerelease=false&nightlies=false&p=ubuntu&pv=14.04&m=x86_64
==> default: Resolving www.chef.io (www.chef.io)... 23.235.40.65
==> default: Connecting to www.chef.io (www.chef.io)|23.235.40.65|:443... connected.
==> default: ERROR: cannot verify www.chef.io's certificate, issued by =US/ST=MN/L=India/O=XXX Corporation/OU=Bluecoat/CN=Target Bluecoat SSL Intercept CA/emailAddress=support@company.com
==> default:   Self-signed certificate encountered.
==> default: To connect to www.chef.io insecurely, use `--no-check-certificate'.
==> default:
==> default: STDERR from perl:
==> default:
==> default: Can't locate LWP/Simple.pm in @INC (you may need to install the LWP::Simple module) (@INC contains: /etc/perl /usr/local/lib/perl/5.18.2 /usr/local/share/perl/5.18.2 /usr/lib/perl5 /usr/share/perl5 /usr/lib/perl/5.18 /usr/share/perl/5.18 /usr/local/lib/site_perl .) at -e line 1.
==> default: BEGIN failed--compilation aborted at -e line 1.
==> default:
==> default: STDERR from python:
==> default:
==> default: Traceback (most recent call last):
==> default:   File "<string>", line 1, in <module>
==> default:   File "/usr/lib/python2.7/urllib2.py", line 127, in urlopen
==> default:     return _opener.open(url, data, timeout)
==> default:   File "/usr/lib/python2.7/urllib2.py", line 410, in open
==> default:     response = meth(req, response)
==> default:   File "/usr/lib/python2.7/urllib2.py", line 523, in http_response
==> default:     'http', request, response, code, msg, hdrs)
==> default:   File "/usr/lib/python2.7/urllib2.py", line 448, in error
==> default:     return self._call_chain(*args)
==> default:   File "/usr/lib/python2.7/urllib2.py", line 382, in _call_chain
==> default:     result = func(*args)
==> default:   File "/usr/lib/python2.7/urllib2.py", line 531, in http_error_default
==> default:     raise HTTPError(req.get_full_url(), code, msg, hdrs, fp)
==> default: urllib2.HTTPError: HTTP Error 401: Unauthorized
The following SSH command responded with a non-zero exit status.
Vagrant assumes that this means the command failed!

sh install.sh -v 12.5.1 -d /tmp/vagrant-cache/vagrant_omnibus 2>&1

Stdout from the command:

Downloading Chef 12.5.1 for ubuntu...
downloading https://www.chef.io/chef/metadata?v=12.5.1&prerelease=false&nightlies=false&p=ubuntu&pv=14.04&m=x86_64
  to file /tmp/install.sh.1468/metadata.txt
trying wget...
trying perl...
trying python...
Unable to retrieve a valid package!
Version: 12.5.1

Please file a Bug Report at https://github.com/opscode/opscode-omnitruck/issues/new
Alternatively, feel free to open a Support Ticket at https://www.getchef.com/support/tickets
More Chef support resources can be found at https://www.getchef.com/support

Please include as many details about the problem as possible i.e., how to reproduce
the problem (if possible), type of the Operating System and its version, etc.,
and any other relevant details that might help us with troubleshooting.

Metadata URL: https://www.chef.io/chef/metadata?v=12.5.1&prerelease=false&nightlies=false&p=ubuntu&pv=14.04&m=x86_64

-----------------------------------------------
AFTER FIX:
-----------------------------------------------
Do a 'vagrant halt' to stop the VM
Then do a 'vagrant up'

----------------------
Messages of vagrant up
----------------------
==> default: Installing Chef 12.0.3 Omnibus package...
==> default: Downloading Chef 12.0.3 for ubuntu...
==> default: downloading https://www.getchef.com/chef/metadata?v=12.0.3&prerelease=false&nightlies=false&p=ubuntu&pv=14.04&m=x86_64
==> default:   to file /tmp/install.sh.1077/metadata.txt
==> default: trying wget...
==> default: url        https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/13.04/x86_64/chef_12.0.3-1_amd64.deb
==> default: md5        76910abba3f7902d1b4d176f7a568c3a
==> default: sha256     3e172853aa0bcc27415a14b1013811dd44e5f523f4ba34714b66191ba365e796
==> default: downloaded metadata file looks valid...
==> default: downloading https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/13.04/x86_64/chef_12.0.3-1_amd64.deb
==> default:   to file /tmp/vagrant-cache/vagrant_omnibus/chef_12.0.3-1_amd64.deb
==> default: trying wget...
==> default: trying curl...
==> default: trying perl...
==> default: trying python...
==> default: Comparing checksum with sha256sum...
==> default: Installing Chef 12.0.3
==> default: installing with dpkg...
==> default: Selecting previously unselected package chef.
==> default: (Reading database ... 32999 files and directories currently installed.)
==> default: Preparing to unpack .../chef_12.0.3-1_amd64.deb ...
==> default: Unpacking chef (12.0.3-1) ...
==> default: Setting up chef (12.0.3-1) ...
==> default: Thank you for installing Chef!
==> default: Configuring cache buckets...
==> default: Running provisioner: chef_solo...
==> default: Detected Chef (latest) is already installed
Shared folders that Chef requires are missing on the virtual machine.
This is usually due to configuration changing after already booting the
machine. The fix is to run a `vagrant reload` so that the proper shared
folders will be prepared and mounted on the VM.

-----------------------------------------------
o:\cookbooks\node0>vagrant reload 
-----------------------------------------------
==> default: Loading Berkshelf datafile...                                                                                                             
==> default: Sharing cookbooks with VM                                                                                                                 
==> default: Attempting graceful shutdown of VM...                                                                                                     
==> default: Checking if box 'bento/ubuntu-14.04' is up to date...                                                                                     
==> default: Clearing any previously set forwarded ports...                                                                                            
==> default: Updating Vagrant's Berkshelf...                                                                                                           
==> default: Resolving cookbook dependencies...                                                                                                        
==> default: Fetching 'node0' from source at .                                                                                                         
==> default: Using node0 (0.1.0) from source at .                                                                                                      
==> default: Vendoring node0 (0.1.0) to O:/home/.berkshelf/vagrant-berkshelf/shelves/berkshelf20151029-3608-1ns1cjw-default/node0                      
==> default: Clearing any previously set network interfaces...                                                                                         
==> default: Preparing network interfaces based on configuration...                                                                                    
    default: Adapter 1: nat                                                                                                                            
==> default: Forwarding ports...                                                                                                                       
    default: 22 => 2222 (adapter 1)                                                                                                                    
==> default: Booting VM...                                                                                                                             
==> default: Waiting for machine to boot. This may take a few minutes...                                                                               
    default: SSH address: 127.0.0.1:2222                                                                                                               
    default: SSH username: vagrant                                                                                                                     
    default: SSH auth method: private key                                                                                                              
    default: Warning: Connection timeout. Retrying...                                                                                                  
    default: Warning: Connection timeout. Retrying...                                                                                                  
==> default: Machine booted and ready!                                                                                                                 
==> default: Checking for guest additions in VM...                                                                                                     
    default: The guest additions on this VM do not match the installed version of                                                                      
    default: VirtualBox! In most cases this is fine, but in rare cases it can                                                                          
    default: prevent things such as shared folders from working properly. If you see                                                                   
    default: shared folder errors, please make sure the guest additions within the                                                                     
    default: virtual machine match the version of VirtualBox you have installed on                                                                     
    default: your host and reload your VM.                                                                                                             
    default:                                                                                                                                           
    default: Guest Additions Version: 5.0.6                                                                                                            
    default: VirtualBox Version: 4.3                                                                                                                   
==> default: Setting hostname...                                                                                                                       
==> default: Mounting shared folders...                                                                                                                
    default: /vagrant => O:/cookbooks/node0                                                                                                            
    default: /tmp/vagrant-cache => O:/home/.vagrant.d/cache/bento/ubuntu-14.04                                                                         
==> default: Configuring cache buckets...                                                                                                              
==> default: Machine already provisioned. Run `vagrant provision` or use the `--provision`                                                             
==> default: to force provisioning. Provisioners marked to run always will still run.                                                                  
                                                                                                                                                       
