==============================
BOOTSTRAPPING QUICK STEPS
- OCT 2017 
==============================

-------------------------------------------------------------------------------------------
BOOTSTRAPPING FROM WORKSTATION - USING VALIDATOR-CLIENT (LIKE MY OWN CHEF SERVER USERID)
-------------------------------------------------------------------------------------------
NOTE: In the bootstrap command: (the IP is for the FQDN of the node being bootstrapped)
 
Necesssary files in .chef directory:
 
File 1. knife.rb
NOTE: Here, we have not given org-validator and org-validator.pem
 
# See https://docs.getchef.com/config_rb_knife.html for more information on knife configuration options
 
current_dir = File.dirname(__FILE__)
log_level                :info
log_location             STDOUT
node_name                "my_chef_svr_username"
client_key               "#{current_dir}/my_chef_svr_username.pem"
chef_server_url          "https://chefsvr.company.com/organizations/my_org"
cookbook_path            ["#{current_dir}/../cookbooks"]
 
File 2. my_chef_svr_username.pem
 
Run the command:
knife bootstrap ip_of_the_node_like_101.63.165.201 -N nodename.company.com -x username_on_node --sudo

The run will create the following in the node machine in /etc/chef directory:
-rw-------. 1 root root 1679 Sep 11 04:29 client.pem
-rw-r--r--. 1 root root  216 Sep 11 04:29 client.rb
-rw-r--r--. 1 root root   16 Sep 11 04:29 first-boot.json
drwxr-xr-x. 2 root root   36 Sep 11 04:29 trusted_certs
-rw-------. 1 root root 1679 Sep 11 04:29 validation.pem

Then, run the following command to delete validation.pem:
chef-client -o chef-client::delete_validation --once

-----------------------------------------------------------------
BOOTSTRAPPING FROM WORKSTATION - USING ORG VALIDATOR ITSELF
-----------------------------------------------------------------

Same steps as above, but knife.rb will have node_name and client_key removed/commented, and
validation_client_name and validation_key instead (which are for the organization)
 
# See https://docs.getchef.com/config_rb_knife.html for more information on knife configuration options
 
current_dir = File.dirname(__FILE__)
log_level                :info
log_location             STDOUT
#
#node_name                "my_chef_svr_username"
#client_key               "#{current_dir}/my_chef_svr_username.pem"
 
#
validation_client_name   "my_org-validator"
validation_key           "#{current_dir}/my_org-validator.pem"
 
#
chef_server_url          "https://chefsvr.company.com/organizations/my_org"
cookbook_path            ["#{current_dir}/../cookbooks"]

----------------------------------------------------------------------
BOOTSTRAPPING FROM WORKSTATION - USING PRIVATE KEY OF NODE'S ROOT USER
----------------------------------------------------------------------

Generate key in #/root/.ssh on the server node01
Copy the private key of it to O:\.chef on the laptop

Bootstrap as follows:
O:\.chef>knife bootstrap node01 --ssh-user root --identity-file 'O:\.chef\node01-root-id-rsa.pem' --node-name node01

Connecting to node01
node01 Starting first Chef Client run...
node01 Starting Chef Client, version 12.4.0
node01 resolving cookbooks for run list: []
node01 Synchronizing Cookbooks:
node01 Compiling Cookbooks...
node01 [2016-02-28T21:56:49-06:00] WARN: Node node01 has an empty run list.
node01 Converging 0 resources
node01
node01 Running handlers:
node01 Running handlers complete
node01 Chef Client finished, 0/0 resources updated in 6.716135316 seconds

Upload Oracle client cookbook:
O:\.chef>knife cookbook upload cbora12cclt
Uploading cbora12cclt    [0.1.0]
Uploaded 1 cookbook.

Set node run list

O:\.chef>knife node run_list set node01 'recipe[cbora12cclt]'
node01:
  run_list: recipe[cbora12cclt]'

chef-reset.rb
-------------
stop chef client
restart chef client with 15 min interval
verify
exit

O:\.chef>knife node run_list set node01 'recipe[cbora12cclt]','recipe[chef-reset]'
node01:
  run_list: recipe[cbora12cclt]','recipe[chef-reset]'

metadata.rb
0.1.1

---------------------------------------
BOOTSTRAP FROM NODE ITSELF
--------------------------------------- 
Files in /etc/chef
 
File 1: client.rb
 
log_location     STDOUT
chef_server_url  "https://chefsvr.company.com/organizations/my_org"
validation_client_name "my_org-validator"
validation_key '/etc/chef/my_org-validator.pem'
node_name "nodename.company.com"
trusted_certs_dir "/etc/chef/trusted_certs"
 
File2: validation.pem --> which is a copy of my_org-validator.pem
 
Run bootstrap by running chef-client --once (not client bootstrap)
 
This will create /etc/chef/client.pem

Then, run the following command to delete validation.pem:
chef-client -o chef-client::delete_validation --once

=====================================
TROUBLESHOOTING
=====================================

---------------------
SSL VALIDATION ERROR
---------------------
You may get ssl certification verification error during bootstrap or chef-client run.
To avoid it:  https://stackoverflow.com/questions/29131020/ssl-validation-error-coming-while-doing-chef-client-setup

From the site:
I think the bug is still open about knife not pushing the trusted_certs directory to bootstraping nodes.

Workaround for now, bootstrap with --node-ssl-verify-mode none so the chef client will not verify ssl 
(and it will write the ssl_verify_mode :verify_none to node's client.rb - like /etc/chef/client.rb)
--> Or, add the following to knife.rb while bootstrapping:
ssl_verify_mode    :verify_none

--> Or, add the following into client.rb on the node:
ssl_verify_mode    :verify_none



= = = = = = = = = = = = = = = 
RANDOM NOTES
= = = = = = = = = = = = = = = 
 
----- from workstation thru knife command
 
knife bootstrap ip_of_the_node_like_101.63.165.201 -N nodename.company.com -x username_on_node --sudo
 
it creates the trusted certs in the node
[root@nodename chef]# ls -ltr
total 16
-rw-------. 1 root root 1679 Sep 11 04:45 validation.pem
drwxr-xr-x. 2 root root   36 Sep 11 04:45 trusted_certs
-rw-r--r--. 1 root root  216 Sep 11 04:45 client.rb
-rw-r--r--. 1 root root   16 Sep 11 04:45 first-boot.json
-rw-------. 1 root root 1679 Sep 11 04:45 client.pem
