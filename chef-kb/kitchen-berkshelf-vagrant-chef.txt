=================================================
CHEF DEVELOPMENT WITH KITCHEN, BERKSHELF, VAGRANT
=================================================

BASED ON - http://www.davidmataro.com/chef-development-workflow-with-kitchen-berkshelf-vagrant

https://github.com/chef/omnitruck/issues/78

SSL issue: (was 'kitchen converge' ssl certificate errors due to proxy settings - as it worked well from home)
https://groups.google.com/forum/#!topic/vagrant-up/MHmAg0DOQic
https://github.com/chef/chef-dk/issues/106
https://curl.haxx.se/docs/sslcerts.html
https://github.com/test-kitchen/kitchen-docker/issues/72 --> proxy settings
http://stackoverflow.com/questions/35519389/vagrant-cannot-find-box --> says do 'vagrant box add ubuntu/trusty64' manually

Proxy settings:
https://www.kickflop.net/blog/2015/10/28/using-test-kitchen-and-kitchen-vagrant-behind-an-http-proxy/  (READ THIS)
https://github.com/test-kitchen/test-kitchen/issues/1020 (has some extended discussion)

https://docs.chef.io/config_yml_kitchen.html
https://github.com/tmatilai/vagrant-proxyconf/issues/64
https://github.com/tmatilai/vagrant-proxyconf/pull/21
https://github.com/test-kitchen/kitchen-vagrant/issues/90

================================
PROJECT WORKSPACE AND REPOSITORY
================================

- WHAT IS A REPOSITORY
A project repository with the cookbooks and other stuff.

The project contains:
  cookbooks
  roles
  environments
  data_bags

  A Berksfile inside the project repository.
  A .kitchen.yml definition inside the project repository.

- CREATE PROJECTS DIRECTORY
$ mkdir projects
$ cd projects

- CREATE A REPOSITORY FOR A STACK 'MYSTACK' 
$ chef generate app mystack
(screen output further below)

This creates the following files:
NOTE: The cookbooks directory in it

mystack/
  |__ .git
  |__ .gitignore
  |__ .kitchen.yml
  |__ README.md
  |__ cookbooks/
  |    |__ mystack/
  |__ test

- CREATE BERKSFILE
NOTE: You can add into Berskfile file as many cookbooks as you wish. 
NOTE: Each cookbook have their own metadata.rb with their dependencies.

Create a Berksfile inside mystack directory and add your cookbooks.

Content of 'Berksfile' file:
source "https://supermarket.chef.io"
cookbook "mystack", path: "cookbooks/mystack"

- CREATE .kitchen.yml in mystack folder

---
driver:
  name: vagrant

provisioner:
  name: chef_zero
  cookbook_path: cookbooks
  roles_path: roles
  environments_path: environments
  data_bags_path: data_bags
  client_rb:
    environment: development

platforms:
  - name: ubuntu/trusty64

suites:
  - name: default
    driver:
      vm_hostname: mystack.loc
      network:
      - ["private_network", {ip: "10.0.0.31"}]
      customize:
        memory: 512
        cpus: 1
    run_list:
      - recipe[mystack::default]
    attributes:
   
- CREATE DEVELOPMENT.JSON FILE

Because I use a development environment in my .kitchen.yml file configuration, 
I need create a environment/development.json file.

{
  "name": "development",
  "description": "Development environment",
  "cookbook_versions": {
  },
  "json_class": "Chef::Environment",
  "chef_type": "environment",
  "default_attributes": {
    "authorization": {
      "sudo": {
        "users": [
          "vagrant"
        ]
      }
    }
  },
  "override_attributes": {
  }
}

- INSTALL COOKBOOKS USING BERKSHELF

To download all cookbooks dependencies run the next command:

berks install

NOTE: By default all the cookbook dependencies are located at '~/.berkshelf/cookbooks' (G:\home\.berkshelf\cookbooks in Bills Kitchen) 
NOTE: And each cookbook is named using the convention {name}-{version}.

- KITCHEN CONVERGE
Finally, run 'kitchen converge' to start a vagrant virtual machine and install and configure all the software components.

$ cd projects/mystack
$ kitchen converge default

- KITCHEN PROVISION
TBD

- UPLOAD COOKBOOKS TO CHEF SERVER
To upload all cookbooks to Chef server, you must create a knife.rb configuration inside the .chef/ directory, 
add the validation and user keys and run:

$ berks upload

==================================
PROXY SETTINGS IN KITCHEN.YML
==================================
NOTE: http_proxy_user and http_proxy_password (and so https_ also) may be needed for sections under provisioners

https://www.kickflop.net/blog/2015/10/28/using-test-kitchen-and-kitchen-vagrant-behind-an-http-proxy/

Using test-kitchen and kitchen-vagrant behind an HTTP proxy
Hereâ€™s what got us working with test-kitchen and kitchen-vagrant behind an HTTP proxy. Comments inline.

---
driver:
  name: vagrant
  driver_config:
    # Allows fetching boxes if required
    http_proxy: http://yourproxy.example.com:80
    https_proxy: https://yourproxy.example.com:80
  # This vagrantfiles callout is needed because of
  # https://github.com/test-kitchen/test-kitchen/issues/821
  # You should check that issue to see if this is still required.
  vagrantfiles:
    - your-site-specific-vagrantfile-block.rb
  network:
    - ["private_network", {ip: "192.168.1.2"}]

provisioner:
  name: chef_zero
  # Allows fetching Omnibus Chef installer if required
  http_proxy: http://yourproxy.example.com:80
  https_proxy: http://yourproxy.example.com:80

platforms:
  - name: centos-6.7

suites:
  - name: default
    run_list:
      - recipe[things::default]
    attributes:
      chef-client:
        # Allows your Chef run to fetch stuff it requires
        config:
          http_proxy: "http://yourproxy.example.com:80"
          https_proxy: "http://yourproxy.example.com:80"
And finally your-site-specific-vagrantfile-block.rb, your custom Vagrantfile piece that is merged in via the vagrantfiles directive in your YAML file:

unless Vagrant.has_plugin?("vagrant-proxyconf")
  raise "Missing required plugin 'vagrant-proxyconf', run `vagrant plugin install vagrant-proxyconf`"
end

Vagrant.configure(2) do |config|
  # Allows busser gem and deps to be fetched as required
  config.proxy.http     = "#{ENV['http_proxy']}"
  config.proxy.https    = "#{ENV['https_proxy']}"
  config.proxy.no_proxy = "localhost,127.0.0.1"
end

======================
MISCELLANEOUS STUFF
======================
------------------------------------
OUTPUT OF CHEF GENERATE APP MYSTACK
------------------------------------
G:\projects>chef generate app mystack
Installing Cookbook Gems:
Compiling Cookbooks...
Recipe: code_generator::app
  * directory[G:/projects/mystack] action create
    - create new directory G:/projects/mystack
  * template[G:/projects/mystack/.kitchen.yml] action create
    - create new file G:/projects/mystack/.kitchen.yml
    - update content in file G:/projects/mystack/.kitchen.yml from none to dad5ad
    (diff output suppressed by config)
  * directory[G:/projects/mystack/test/integration/default/serverspec] action create
    - create new directory G:/projects/mystack/test/integration/default/serverspec
  * directory[G:/projects/mystack/test/integration/helpers/serverspec] action create
    - create new directory G:/projects/mystack/test/integration/helpers/serverspec
  * cookbook_file[G:/projects/mystack/test/integration/helpers/serverspec/spec_helper.rb] action create_if_missing
    - create new file G:/projects/mystack/test/integration/helpers/serverspec/spec_helper.rb
    - update content in file G:/projects/mystack/test/integration/helpers/serverspec/spec_helper.rb from none to d85df4
    (diff output suppressed by config)
  * template[G:/projects/mystack/test/integration/default/serverspec/default_spec.rb] action create_if_missing
    - create new file G:/projects/mystack/test/integration/default/serverspec/default_spec.rb
    - update content in file G:/projects/mystack/test/integration/default/serverspec/default_spec.rb from none to 85cbc2
    (diff output suppressed by config)
  * template[G:/projects/mystack/README.md] action create
    - create new file G:/projects/mystack/README.md
    - update content in file G:/projects/mystack/README.md from none to 7a87fb
    (diff output suppressed by config)
  * directory[G:/projects/mystack/cookbooks] action create
    - create new directory G:/projects/mystack/cookbooks
  * directory[G:/projects/mystack/cookbooks/mystack] action create
    - create new directory G:/projects/mystack/cookbooks/mystack
  * template[G:/projects/mystack/cookbooks/mystack/metadata.rb] action create
    - create new file G:/projects/mystack/cookbooks/mystack/metadata.rb
    - update content in file G:/projects/mystack/cookbooks/mystack/metadata.rb from none to c33348
    (diff output suppressed by config)
  * cookbook_file[G:/projects/mystack/cookbooks/mystack/chefignore] action create
    - create new file G:/projects/mystack/cookbooks/mystack/chefignore
    - update content in file G:/projects/mystack/cookbooks/mystack/chefignore from none to 15fac5
    (diff output suppressed by config)
  * cookbook_file[G:/projects/mystack/cookbooks/mystack/Berksfile] action create
    - create new file G:/projects/mystack/cookbooks/mystack/Berksfile
    - update content in file G:/projects/mystack/cookbooks/mystack/Berksfile from none to 9f08dc
    (diff output suppressed by config)
  * directory[G:/projects/mystack/cookbooks/mystack/recipes] action create
    - create new directory G:/projects/mystack/cookbooks/mystack/recipes
  * template[G:/projects/mystack/cookbooks/mystack/recipes/default.rb] action create
    - create new file G:/projects/mystack/cookbooks/mystack/recipes/default.rb
    - update content in file G:/projects/mystack/cookbooks/mystack/recipes/default.rb from none to 5296c4
    (diff output suppressed by config)
  * directory[G:/projects/mystack/cookbooks/mystack/spec/unit/recipes] action create
    - create new directory G:/projects/mystack/cookbooks/mystack/spec/unit/recipes
  * cookbook_file[G:/projects/mystack/cookbooks/mystack/spec/spec_helper.rb] action create_if_missing
    - create new file G:/projects/mystack/cookbooks/mystack/spec/spec_helper.rb
    - update content in file G:/projects/mystack/cookbooks/mystack/spec/spec_helper.rb from none to 587075
    (diff output suppressed by config)
  * template[G:/projects/mystack/cookbooks/mystack/spec/unit/recipes/default_spec.rb] action create_if_missing
    - create new file G:/projects/mystack/cookbooks/mystack/spec/unit/recipes/default_spec.rb
    - update content in file G:/projects/mystack/cookbooks/mystack/spec/unit/recipes/default_spec.rb from none to 2ee54c
    (diff output suppressed by config)
  * execute[initialize-git] action run
    - execute git init .
  * cookbook_file[G:/projects/mystack/.gitignore] action create
    - create new file G:/projects/mystack/.gitignore
    - update content in file G:/projects/mystack/.gitignore from none to 33d469
    (diff output suppressed by config)

------------------------------------------
KITCHEN CONVERGE ERROR
------------------------------------------
G:\projects\mystack>kitchen converge default                                                                               
-----> Starting Kitchen (v1.6.0)                                                                                           
-----> Creating <default-ubuntu-trusty64>...                                                                               
       Bringing machine 'default' up with 'virtualbox' provider...                                                         
       ==> default: Box 'ubuntu/trusty64' could not be found. Attempting to find and install...                            
           default: Box Provider: virtualbox                                                                               
           default: Box Version: >= 0                                                                                      
       The box 'ubuntu/trusty64' could not be found or                                                                     
       could not be accessed in the remote catalog. If this is a private                                                   
       box on HashiCorp's Atlas, please verify you're logged in via                                                        
       `vagrant login`. Also, please double-check the name. The expanded                                                   
       URL and error message are shown below:                                                                              
                                                                                                                           
       URL: ["https://atlas.hashicorp.com/ubuntu/trusty64"]                                                                
       Error: SSL certificate problem: self signed certificate in certificate chain                                        
       More details here: http://curl.haxx.se/docs/sslcerts.html                                                           
                                                                                                                           
       curl performs SSL certificate verification by default, using a "bundle"                                             
        of Certificate Authority (CA) public keys (CA certs). If the default                                               
        bundle file isn't adequate, you can specify an alternate file                                                      
        using the --cacert option.                                                                                         
       If this HTTPS server uses a certificate signed by a CA represented in                                               
        the bundle, the certificate verification probably failed due to a                                                  
        problem with the certificate (it might be expired, or the name might                                               
        not match the domain name in the URL).                                                                             
       If you'd like to turn off curl's verification of the certificate, use                                               
        the -k (or --insecure) option.                                                                                     
>>>>>> ------Exception-------                                                                                              
>>>>>> Class: Kitchen::ActionFailed                                                                                        
>>>>>> Message: Failed to complete #create action: [Expected process to exit with [0], but received '1'                    
---- Begin output of vagrant up --no-provision --provider virtualbox ----                                                  
STDOUT: Bringing machine 'default' up with 'virtualbox' provider...                                                        
==> default: Box 'ubuntu/trusty64' could not be found. Attempting to find and install...                                   
    default: Box Provider: virtualbox                                                                                      
    default: Box Version: >= 0                                                                                             
STDERR: The box 'ubuntu/trusty64' could not be found or                                                                    
could not be accessed in the remote catalog. If this is a private                                                          
box on HashiCorp's Atlas, please verify you're logged in via                                                               
`vagrant login`. Also, please double-check the name. The expanded                                                          
URL and error message are shown below:                                                                                     
                                                                                                                           
URL: ["https://atlas.hashicorp.com/ubuntu/trusty64"]                                                                       
Error: SSL certificate problem: self signed certificate in certificate chain                                               
More details here: http://curl.haxx.se/docs/sslcerts.html                                                                  
                                                                                                                           
curl performs SSL certificate verification by default, using a "bundle"                                                    
 of Certificate Authority (CA) public keys (CA certs). If the default                                                      
 bundle file isn't adequate, you can specify an alternate file                                                             
 using the --cacert option.                                                                                                
If this HTTPS server uses a certificate signed by a CA represented in                                                      
 the bundle, the certificate verification probably failed due to a                                                         
 problem with the certificate (it might be expired, or the name might                                                      
 not match the domain name in the URL).                                                                                    
If you'd like to turn off curl's verification of the certificate, use                                                      
 the -k (or --insecure) option.                                                                                            
---- End output of vagrant up --no-provision --provider virtualbox ----                                                    
Ran vagrant up --no-provision --provider virtualbox returned 1]                                                            
>>>>>> ----------------------                                                                                              
>>>>>> Please see .kitchen/logs/kitchen.log for more details                                                               
>>>>>> Also try running `kitchen diagnose --all` for configuration                                                         
                                                                                                                           
