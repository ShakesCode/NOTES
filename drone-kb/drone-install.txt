======================
DRONE INSTALLATION
======================
https://github.com/drone/drone
Setup Documentation docs.drone.io/installation
Usage Documentation docs.drone.io/getting-started
Plugin Index plugins.drone.io
Getting Help docs.drone.io/getting-help

http://readme.drone.io/admin/installation-guide/

For github:
http://docs.drone.io/install-for-github/ --> install for github
https://auth0.com/docs/connections/social/github --> how to get git client id and secret for the app

================
STEPS
================
Setup Documentation docs.drone.io/installation

----------------------------
Download Dronke docker image
----------------------------

$ docker pull drone/drone:0.7

$ docker images
REPOSITORY             TAG                 IMAGE ID            CREATED             SIZE
drone/drone            0.7                 c58de76939e9        20 hours ago        25.72 MB
postgres               latest              ca3a55649cfc        6 days ago          269.1 MB

------------------------------------------
GET THE GIT CLIENT AND SECRET FOR YOUR APP
------------------------------------------
You must register Drone with GitHub to obtain the client and secret. The authorization callback url must match <scheme>://<host>/authorize

- Inputs to Git Oauth settings
Application name = dronemymac
Homepage URL = http://localhost:80
Authorization callback URL = http://localhost:80/authorize

- Client ID and Secret for the above inputs
Client ID
1db26416fe00b33ac38f
Client Secret
980af5650a9bb97e6874e868fd292fe53059dd4d

- Client ID and secret for http://329afe65.ngrok.io

Client ID
d2a5ca90e87f7dc0a0cf
Client Secret
de04fac85d3bdc6a9acaddb930336ded31a7a319

----------------------------
Set the environment
----------------------------

-- USE THIS
export DRONE_GITHUB_CLIENT=1db26416fe00b33ac38f
export DRONE_GITHUB_SECRET=980af5650a9bb97e6874e868fd292fe53059dd4d
export DRONE_SECRET=some_string (and remember it)

-- DONT USE THIS
export DRONE_GITHUB_CLIENT=1b5721a6c13bf3cbd1bd
export DRONE_GITHUB_SECRET=36547eba420b7f268a687f4696e24569d65e076d
export DRONE_SECRET=some_string (and remember it)

----------------------------
CREATE DOCKER-COMPOSE.YML
----------------------------
NOTE: Port forwarding is done in the following directive
    ports:
      - 80:8000

- docker-compose.yml
version: '2'

services:
  drone-server:
    image: drone/drone:0.7
    ports:
      - 80:8000
    volumes:
      - ./drone:/var/lib/drone/
    restart: always
    environment:
      - DRONE_OPEN=true
      - DRONE_GITHUB=true
      - DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT}
      - DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET}
      - DRONE_SECRET=${DRONE_SECRET}

  drone-agent:
    image: drone/drone:0.7
    command: agent
    restart: always
    depends_on: [ drone-server ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=ws://drone-server:8000/ws/broker
      - DRONE_SECRET=${DRONE_SECRET}
      
---------------------------------
BRING UP DRONE
---------------------------------
$ docker-compose up -d
$ <run your tests>
$ docker-compose down

up will bring up a container with drone in it
down will destroy the container

- Create/start
$ docker-compose up -d
Creating network "docker_default" with the default driver
Creating docker_drone-server_1
Creating docker_drone-agent_1

- Verify
$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                                   NAMES
adc6bc98be6e        drone/drone:0.7     "/drone agent"      5 seconds ago       Up 3 seconds        80/tcp, 443/tcp, 8000/tcp               docker_drone-agent_1
2208c95f5b47        drone/drone:0.7     "/drone server"     6 seconds ago       Up 4 seconds        80/tcp, 443/tcp, 0.0.0.0:80->8000/tcp   docker_drone-server_1

- Shutdown/destroy
$ docker-compose down

------------
Access Drone
------------
http://localhost:80 --> note: 80 of host is forwarded to 8000 of drone container

Upon login, an authorization screen comes:
--> this is to authorize access drone to access the github account (based on the github client and secret)

Click the authorization button
--> It will ask Github password - provide that
--> Then it will take you back to Drone 

On the left hand side, you see "Activate your repositories to get started"
--> Click on the link 'Activate' - it will bring up your repositories in Github
--> TBD TBD - Sliders next to the repository names are to be used for activation - TBD TBD TBD TBD
