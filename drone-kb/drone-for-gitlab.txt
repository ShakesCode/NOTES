==================================
      DRONE FOR GITLAB
==================================

===========================
GET OAUTH CLIENT AND SECRET
===========================
Drone URL: https://olx0003:8080

How to: https://docs.gitlab.com/ee/integration/gitlab.html

https://docs.gitlab.com/ee/integration/oauth_provider.html

Application: droneolx0003

Application Id	0f68ec502b07d165c5eb491e724ab5c3c6e1e410d7dac4f5b8897aec4b6e6083
Secret:	57beb189487ff2fb64405fa3fe35ed0924fdd14451b160ddeb075f7e28cf0841
Callback url	
http://olx0003:8080/authorize
Scopes	
api (Access your API)
read_user (Read user information)
openid (Authenticate using OpenID Connect)

=====================
docker-compose.yml
=====================
version: '2'

services:
  drone-server:
    image: drone/drone:0.7
    ports:
      - 8080:8000
    volumes:
      - ./drone:/var/lib/drone/
      - ./drone/cert:/var/lib/drone/cert/
      - /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem:/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
    restart: always
    environment:
      - DRONE_OPEN=true
      - DRONE_GITLAB=true
      - DRONE_GITLAB_URL=${DRONE_GITLAB_URL}
      - DRONE_GITLAB_CLIENT=${DRONE_GITLAB_CLIENT}
      - DRONE_GITLAB_SECRET=${DRONE_GITLAB_SECRET}
      - DRONE_SECRET=${DRONE_SECRET}
      - DRONE_GITLAB_SKIP_VERIFY=${DRONE_GITLAB_SKIP_VERIFY}

  drone-agent:
    image: drone/drone:0.7
    command: agent
    restart: always
    depends_on: [ drone-server ]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DRONE_SERVER=wss://olx0003:8080/ws/broker
      - DRONE_SECRET=${DRONE_SECRET}

=====================
START AND STOP
=====================

docker-compose up  -d

docker-compose down

=====================
ACCESS DRONE
=====================
http://olx0003:8080

It comes with a login screen - and clicking 'login' will take you to gitlab application authorization screen.

TBD - oauth_error every time trying to authroize
https://stackoverflow.com/questions/43689235/setting-up-a-drone-io-server-with-a-github-repo-get-oauth-error

docker ps --> to get the server container id
docker logs -f <container id>

Then do an authroize
--> gives the following log message in 'docker logs ...'
time="2017-06-14T14:50:39Z" level=error msg="cannot authenticate user. Error exchanging token. Post http://olx0003:8090/oauth/token: dial tcp: lookup oralx0003 on 127.0.0.11:53: server misbehaving" 

With firewalld down on olx0003:
time="2017-06-14T15:15:27Z" level=error msg="cannot authenticate user. Error exchanging token. Post http://olx0003:8090/oauth/token: dial tcp: lookup olx0003 on 127.0.0.11:53: read udp 127.0.0.1:51072->127.0.0.11:53: i/o timeout" 

Also look into: https://github.com/moby/moby/issues/20335
https://github.com/drone/drone/issues/140

- Added extra_hosts pointing to the default host access IP for the container
extra_hosts:
     - "oralx0003:192.168.0.1"
that gave:
time="2017-06-15T06:19:54Z" level=error msg="cannot authenticate user. Error exchanging token. Post http://oralx0003:8090/oauth/token: dial tcp 192.168.0.1:8090: getsockopt: connection timed out" 

=====================
PRODUCT DOCUMENTATION
=====================
http://readme.drone.io/0.5/install/setup/gitlab/

How to configure Drone for GitLab
Drone comes with built-in support for the GitLab version 8.2 and higher. To enable GitLab you should configure the Drone container using the following environment variables:

docker run \
  -e DRONE_GITLAB=true \
  -e DRONE_GITLAB_URL=http://gitlab.mycompany.com \
  -e DRONE_GITLAB_CLIENT=... \
  -e DRONE_GITLAB_SECRET=...
Configuration

This is a full list of configuration options. Please note that many of these options use default configuration value that should work for the majority of installations.

DRONE_GITLAB=true
Set to true to enable the GitLab driver.
DRONE_GITLAB_URL=https://gitlab.com
GitLab Server address.
DRONE_GITLAB_CLIENT
GitLab oauth2 client id.
DRONE_GITLAB_SECRET
GitLab oauth2 client secret.
DRONE_GITLAB_GIT_USERNAME
Optional. Use a single machine account username to clone all repositories.
DRONE_GITLAB_GIT_PASSWORD
Optional. Use a single machine account password to clone all repositories.
DRONE_GITLAB_SKIP_VERIFY=false
Set to true to disable SSL verification.
DRONE_GITLAB_PRIVATE_MODE=false
Set to true if GitLab is running in private mode.
Registration

You must register your application with GitLab in order to generate a Client and Secret. Navigate to your account settings and choose Applications from the menu, and click New Application.

Please use http://drone.mycompany.com/authorize as the Authorization callback URL.
