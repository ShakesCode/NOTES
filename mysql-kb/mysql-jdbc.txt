===============================
MYSQL JDBC
===============================
Connector documenttaion: http://dev.mysql.com/doc/connector-j/5.1/en/connector-j-overview.html

===========================
INSTALL CONNECTOR
===========================

-----------
DOWNLOAD
-----------
Conncetor download
http://dev.mysql.com/downloads/connector/j/
Tar or zip
Platform independent JAR file

---------------
INSTALL OPTIONS
---------------
http://dev.mysql.com/doc/connector-j/5.1/en/connector-j-installing.html

MySQL Connector/J is distributed as a .zip or .tar.gz archive, available for download from the Connector/J Download page. 
The archive contains the sources and the JAR archive named mysql-connector-java-version-bin.jar.

You can install the Connector/J package using either the binary or source distribution. 
The binary distribution provides the easiest method for installation; the source distribution lets you customize 
your installation further. With either solution, you manually add the Connector/J location to your Java CLASSPATH.

If you are upgrading from a previous version, read the upgrade information in Section 3.3, “Upgrading from an Older Version” 
before continuing.

Connector/J is also available as part of the Maven project. For more information and to download the Connector/J JAR files, 
see the Maven repository.

-------------------
INSTALL AND CONFIGURE CLASSPATH
-------------------
http://dev.mysql.com/doc/connector-j/5.1/en/connector-j-installing-classpath.html

Once you have extracted the distribution archive, you can install the driver by placing mysql-connector-java-version-bin.jar 
in your classpath, either by adding the full path to it to your CLASSPATH environment variable, or by directly specifying it 
with the command line switch -cp when starting the JVM.

To use the driver with the JDBC DriverManager, use com.mysql.jdbc.Driver as the class that implements java.sql.Driver.

You can set the CLASSPATH environment variable under Unix, Linux, or OS X either locally for a user within their .profile, 
.login or other login file. You can also set it globally by editing the global /etc/profile file.

For example, add the Connector/J driver to your CLASSPATH using one of the following forms, depending on your command shell:

# Bourne-compatible shell (sh, ksh, bash, zsh):
shell> export CLASSPATH=/path/mysql-connector-java-ver-bin.jar:$CLASSPATH

# C shell (csh, tcsh):
shell> setenv CLASSPATH /path/mysql-connector-java-ver-bin.jar:$CLASSPATH
For Windows platforms, you set the environment variable through the System Control Panel.

To use MySQL Connector/J with an application server such as GlassFish, Tomcat, or JBoss, read your vendor's documentation 
for more information on how to configure third-party class libraries, as most application servers ignore the CLASSPATH 
environment variable. For configuration examples for some J2EE application servers, see Chapter 7, 
Connection Pooling with Connector/J, Section 8.2, “Configuring Load Balancing with Connector/J”, and Section 8.4, 
“Advanced Load-balancing and Failover Configuration”. However, the authoritative source for JDBC connection pool 
configuration information for your particular application server is the documentation for that application server.

If you are developing servlets or JSPs, and your application server is J2EE-compliant, you can put the driver's .jar 
file in the WEB-INF/lib subdirectory of your webapp, as this is a standard location for third party class libraries in 
J2EE web applications.

You can also use the MysqlDataSource or MysqlConnectionPoolDataSource classes in the com.mysql.jdbc.jdbc2.optional package, 
if your J2EE application server supports or requires them. Starting with Connector/J 5.0.0, the javax.sql.XADataSource interface 
is implemented using the com.mysql.jdbc.jdbc2.optional.MysqlXADataSource class, which supports XA distributed transactions when 
used in combination with MySQL server version 5.0 and later.

The various MysqlDataSource classes support the following parameters (through standard set mutators):

user
password
serverName (see the previous section about failover hosts)
databaseName
port


