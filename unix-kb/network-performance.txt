https://www.ibm.com/developerworks/aix/library/au-networkperfanalysis/index.html

=============================
METHODS
=============================
Two types of methods are covered here:

NETWORK STATISTICS
PHYSICAL

=============================
NETWORK STATISTICS 
=============================
-----------------------------
ETHERNET CARD QUICK STATS
-----------------------------

Statistics like the following are available with simple ifconfig command output:
RX are sent packets
TX are received packets

          RX packets:7916836 errors:0 dropped:78489 overruns:0 frame:0
          TX packets:6285476 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:11675092739 (10.8 GiB)  TX bytes:581702020 (554.7 MiB)

$ ifconfig eth1
eth1      Link encap:Ethernet  HWaddr 00:1a:ee:01:01:c0  
          inet addr:192.168.0.2  Bcast:192.168.3.255  Mask:255.255.252.0
          inet6 addr: fe80::21a:eeff:fe01:1c0/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:7916836 errors:0 dropped:78489 overruns:0 frame:0
          TX packets:6285476 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:11675092739 (10.8 GiB)  TX bytes:581702020 (554.7 MiB)
          Interrupt:16 Base address:0x2000

-----------------------------
PING
-----------------------------
Ping sends an echo packet to the device, and expects the device to echo the packet contents back
Ping can monitor the time it takes to send and receive the response, 
which can be an effective method of measuring the response time of the echo process

- PING WITH DEFAULT PACKET SIZE (56 BYTES) CONTINUOUSLY
# ping servername
 
PING servername.example.com (192.168.0.2): 56 data bytes
64 bytes from 192.168.0.2: icmp_seq=0 ttl=64 time=0.169 ms
64 bytes from 192.168.0.2: icmp_seq=1 ttl=64 time=0.167 ms
^C
--- example.example.pri ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max/stddev = 0.167/0.168/0.169/0.001 ms

- PING WITH SPECIFIC PACKET SIZE (-s packetSize) FOR A FEW TIMES (-c count)
# ping -c 2 -s 256 www.oracle.com
PING e11582.dscx.akamaiedge.net (23.72.65.210): 256 data bytes
264 bytes from 23.72.65.210: icmp_seq=0 ttl=40 time=255.357 ms
264 bytes from 23.72.65.210: icmp_seq=1 ttl=40 time=256.116 ms

--- e11582.dscx.akamaiedge.net ping statistics ---
2 packets transmitted, 2 packets received, 0.0% packet loss
round-trip min/avg/max/stddev = 255.357/255.736/256.116/0.380 ms

-----------------------------
SPRAY
-----------------------------
'spray' is a utility - and its daemon should be running to use it.
Location - /usr/sbin/spray.
Spray sends many packets at a time and reports how many were lost.

# spray servername
sending 1162 packets of length 86 to servername ...
        101 packets (8.692%) dropped by servername
        70 packets/sec, 6078 bytes/sec

-----------------------------
NETWORK TRAFFIC ON A MACHINE
-----------------------------
# netstat -s |grep packets |egrep "sent|received"

-----------------------------
NFS TRAFFIC
-----------------------------
# Both client and server
# nfsstat

# Client (-v3 is for version 3 which may or may not work)
# nfsstat -c -v3

# Server (-v3 is for version 3 which may or may not work)
# nfsstat -s -v3

-----------------------------
ROUTE AND HOPS
-----------------------------
'traceroute' provides ping times betwee routers over the route from source and destination.
This can help isolate the problem - which segment of the route is slow.

# traceroute servername.example.com

=======================
PHYSICAL TESTS
=======================

-----------------------------
COPY A FILE AND TAKE TIMING
-----------------------------
- Create a large file
# mkfile 2g large.file 

- Copy the large file across network (various ways)

- NOTE: use 'time' before scp or cp to get timing
    It will give output similar to
    real	0m14.65s
    user	0m0.05s
    sys	0m0.02s

# scp large.file remotehostname:/tmp/.
# cp large.file /mount/nfsmount
# cp /mount/nfsmount/large.file .


