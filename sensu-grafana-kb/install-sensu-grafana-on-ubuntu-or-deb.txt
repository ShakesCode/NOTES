=====================================================
   INSTALL SENSU AND GRAFANA ON UBUNTU OR DEBIAN
=====================================================
https://github.com/kamon-io/docker-grafana-graphite/blob/master/Dockerfile
https://github.com/sstarcher/docker-sensu/blob/master/Dockerfile
https://community.netapp.com/fukiw75442/attachments/fukiw75442/oncommand-storage-management-software-articles-and-resources/717/2/Graphite_Grafana_Quick_Start_v1.4.pdf

NOTE: 
apt-get update for grafana was failing due to some certificate issue.
Thereore, use this site to get deb package download-install method
https://www.vultr.com/docs/install-grafana-on-debian-jessie

====================  THIS TUTORIAL IS USED FOR THIS DOC:

Sensu-grafana tutorial: https://blog.powerupcloud.com/step-by-step-install-and-configure-sensu-grafana-9cedca333396
--> this notes file is based on this site

NOTE: Go through the Dockerfile in this folder for more correct install steps actually used

-ERROR NOTE1: This tutorial uses apt-get install to install grafana. However, that failed due to certificate issues
      Instead, download the deb package and install - as in the official site http://docs.grafana.org/installation/debian/
-ERROR NOTE2: service grafana-server start is missing in the tutorial
====================

Sensu official doc: https://sensuapp.org/docs/latest/platforms/sensu-on-ubuntu-debian.html
Grafana official doc: https://packagecloud.io/grafana/stable/install
--> has shell script to install grafana also - can help instead of having several RUN commands in Dockerfile
NOTE: This official site has manual steps: https://packagecloud.io/grafana/stable/install#manual 

Redis:
https://sensuapp.org/docs/latest/reference/redis.html
https://sensuapp.org/docs/0.25/installation/install-redis-on-ubuntu-debian.html

Sensu - very detailed, ssl etc:
http://vinodpandey.com/documentation/sensu/introduction.html

Grafana
Official install on Debian doc - http://docs.grafana.org/installation/debian/

==================================================
DOWNLOAD UBUNTU IMAGE AND CREATE CONTAINER
==================================================
# docker pull ubuntu:14.04

# docker images
REPOSITORY              TAG                 IMAGE ID            CREATED             SIZE
docker.io/ubuntu        14.04               4a2820e686c4        2 weeks ago         188 MB

NOTE: Sensu and Graphana work on ports 8080 and 3000. Map them to host now itself as after image is built, 
      it can be opened only by creating a cone of that image
      
# docker run --name sengraf -it -p 8080:8081 3000:3001 -d ubuntu:14.04 tail -f /dev/null

(or docker run --name sengraf -it -p 8080:8081 3000:3001 -d 4a2820e686c4 tail -f /dev/null)
 
NOTE: tail -f /dev/null is necessary so that the machine keeps doing something and not exit immediately
      DO SO when you are yet to install stuff into the machine and create a persistent service

# docker ps
CONTAINER ID        IMAGE               COMMAND               CREATED             STATUS              PORTS               NAMES
9443b37377de        ubuntu:14.04        "tail -f /dev/null"   6 minutes ago       Up 6 minutes                            sengraf


======================
LOGON TO THE CONTAINER
======================
# docker exec -it e9c2a94348d4 /bin/bash

# hostname
9443b37377de

# ip addr list
1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
       
18: eth0@if19: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default 
    link/ether 02:42:ac:11:00:02 brd ff:ff:ff:ff:ff:ff
    inet 172.17.0.2/16 scope global eth0
       valid_lft forever preferred_lft forever
    inet6 fe80::42:acff:fe11:2/64 scope link 
       valid_lft forever preferred_lft forever

======================================================     
SENSU INSTALL - Sensu Master Installation
======================================================
- Install the GPG public key
# wget -q http://sensu.global.ssl.fastly.net/apt/pubkey.gpg -O- | sudo apt-key add -
OK

- Create an APT configuration file at /etc/apt/sources.list.d/sensu.list
echo "deb http://sensu.global.ssl.fastly.net/apt sensu main" | sudo tee /etc/apt/sources.list.d/sensu.list

- Create an APT configuration file at /etc/apt/sources.list.d/sensu.list
echo "deb http://sensu.global.ssl.fastly.net/apt sensu main" | sudo tee /etc/apt/sources.list.d/sensu.list

- Update APT and Install Sensu
# sudo apt-get install sensu
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following NEW packages will be installed:
  sensu
  
0 upgraded, 1 newly installed, 0 to remove and 3 not upgraded.
Need to get 30.0 MB of archives.
After this operation, 89.0 MB of additional disk space will be used.
Get:1 http://sensu.global.ssl.fastly.net/apt/ sensu/main sensu amd64 0.26.5-2 [30.0 MB]
Fetched 30.0 MB in 26s (1127 kB/s)                                             
Selecting previously unselected package sensu.
(Reading database ... 11883 files and directories currently installed.)
Preparing to unpack .../sensu_0.26.5-2_amd64.deb ...
Unpacking sensu (0.26.5-2) ...
Processing triggers for ureadahead (0.100.0-16) ...
Setting up sensu (0.26.5-2) ...

- Client Configuration 
Copy the following contents to a configuration file located at /etc/sensu/conf.d/client.json

{
          "client": {
            "name": "sensu-server",
            "address": "127.0.0.1",
            "environment": "sensu",
            "subscriptions": [ "linux"],
            "keepalive":
            {
           "handler": "mailer",
            "thresholds": {
            "warning": 250,
            "critical": 300
          }
            },
"socket": {
          "bind": "127.0.0.1",
          "port": 3030
            }
          }
}

- At minimum, all of the Sensu processes require configuration to tell them how to connect 
to the configured Sensu Transport.

Copy the following contents to a configuration file located at /etc/sensu/conf.d/transport.json

{
"transport": 
{
"name": "rabbitmq",
"reconnect_on_error": true
}
}

- Copy the following contents to an api configuration file located at /etc/sensu/conf.d/api.json
{
         "api": 
{
         "host": "localhost",
         "bind": "0.0.0.0",
         "port": 4567
         }
}

- Install Redis
# apt-get -y install redis-server

# apt-get -y install redis-server
Reading package lists... Done
Building dependency tree       
Reading state information... Done
The following extra packages will be installed:
  libjemalloc1 redis-tools
The following NEW packages will be installed:
  libjemalloc1 redis-server redis-tools
0 upgraded, 3 newly installed, 0 to remove and 3 not upgraded.
Need to get 410 kB of archives.
After this operation, 1272 kB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu/ trusty/universe libjemalloc1 amd64 3.5.1-2 [76.8 kB]
Get:2 http://archive.ubuntu.com/ubuntu/ trusty/universe redis-tools amd64 2:2.8.4-2 [65.7 kB]
Get:3 http://archive.ubuntu.com/ubuntu/ trusty/universe redis-server amd64 2:2.8.4-2 [267 kB]
Fetched 410 kB in 8s (45.7 kB/s)                                               
Selecting previously unselected package libjemalloc1.
(Reading database ... 19044 files and directories currently installed.)
Preparing to unpack .../libjemalloc1_3.5.1-2_amd64.deb ...
Unpacking libjemalloc1 (3.5.1-2) ...
Selecting previously unselected package redis-tools.
Preparing to unpack .../redis-tools_2%3a2.8.4-2_amd64.deb ...
Unpacking redis-tools (2:2.8.4-2) ...
Selecting previously unselected package redis-server.
Preparing to unpack .../redis-server_2%3a2.8.4-2_amd64.deb ...
Unpacking redis-server (2:2.8.4-2) ...
Processing triggers for ureadahead (0.100.0-16) ...
Setting up libjemalloc1 (3.5.1-2) ...
Setting up redis-tools (2:2.8.4-2) ...
Setting up redis-server (2:2.8.4-2) ...
invoke-rc.d: policy-rc.d denied execution of start.
Processing triggers for libc-bin (2.19-0ubuntu6.13) ...
Processing triggers for ureadahead (0.100.0-16) ...

# apt-get -y install redis-server
Reading package lists... Done
Building dependency tree       
Reading state information... Done
redis-server is already the newest version.
0 upgraded, 0 newly installed, 0 to remove and 3 not upgraded.

Copy the following contents to a configuration file located at /etc/sensu/conf.d/redis.json
{
"redis": 
{
"host": "127.0.0.1",
"port": 6379
}
}

- Install Erlang
Add the Erlang Solutions APT repository
sudo wget http://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb 
sudo dpkg -i erlang-solutions_1.0_all.deb 
sudo apt-get update 
sudo apt-get -y install erlang-nox
           
- Install RabbitMQ
Download the official RabbitMQ 3.6.0 .deb installer package
sudo wget http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.0/rabbitmq-server_3.6.0-1_all.deb

Install the package using dpkg
sudo dpkg -i rabbitmq-server_3.6.0-1_all.deb  

- Copy the following contents to a configuration file located at /etc/sensu/conf.d/rabbitmq.json
{
      "rabbitmq": 
{
        "host": "127.0.0.1",
            "port": 5672,
        "vhost": "/sensu",
        "user": "sensu",
        "password": "secret"
        }
}

- Start the services
service sensu-server start && service sensu-client start && service rabbitmq-server start && service redis-server start && service sensu-api start

- OR - 
service sensu-server start
service sensu-client start
service rabbitmq-server start
service redis-server start
service sensu-api start

- Create a dedicated RabbitMQ vhost for Sensu
sudo rabbitmqctl add_vhost /sensu

# rabbitmqctl list_vhosts
Listing vhosts ...
/
/sensu

- Create a RabbitMQ user for Sensu
# rabbitmqctl add_user sensu secret
# rabbitmqctl set_permissions -p /sensu sensu ".*" ".*" ".*"

- Install Uchiwa
-- Install Uchiwa dashboard
# apt-get install uchiwa

-- Replace the configuration in /etc/sensu/uchiwa.json
{
      "sensu": [
            {
          "name": "sensu",
          "host": "localhost",
          "port": 4567,
          "timeout": 10
            }
          ],
          "uchiwa": {
            "host": "0.0.0.0",
            "port": 8080,
            "refresh": 10
          }
}

-- Start the service
# service uchiwa start

- Install Sensu Plugins
Go to the following location and run the commands to install sensu plugins cd /opt/sensu/embedded/bin/
sensu-install -p cpu-checks  
sensu-install -p disk-checks  
sensu-install -p memory-checks  
sensu-install -p nginx  
sensu-install -p process-checks  
sensu-install -p load-checks  
sensu-install -p vmstats  
sensu-install -p mailer

-- Copy the following contents to a CPU check configuration file located at /etc/sensu/conf.d/check_cpu_linux.json
{
      "checks": {
         "check-cpu-linux": {
       "handlers": ["mailer"],
       "command": "/opt/sensu/embedded/bin/check-cpu.rb -w 80 -c 90 ",
       "interval": 60,
       "occurrences": 5,
          "subscribers": [ "linux" ]
       }
         }
}

- Copy the following contents to a memory check configuration file located at /etc/sensu/conf.d/check_memory_linux.json
{
      "checks": {
        "check_memory_linux": {
      "handlers": ["mailer"],
         "command": "/opt/sensu/embedded/bin/check-memory-percent.rb -w 90 -c 95",
      "interval": 60,
      "occurrences": 5,
      "subscribers": [ "linux" ]
        }
      }
}

- Copy the following contents to a disk check configuration file located at /etc/sensu/conf.d/check_disk_usage_linux.json
{
     "checks": {
        "check-disk-usage-linux": {
"handlers": ["mailer"],
      "command": "/opt/sensu/embedded/bin/check-disk-usage.rb -w 80 -c 90",
      "interval": 60,
      "occurrences": 5,
      "subscribers": [ "linux" ]
        }
      }
    }

- Enable alerts
Install postfix (MTA) to send alert mails

# apt-get install postfix
NOTE: Choose 'no configuration' in the configuration that pops up
-- OR -- use the following command set to install without that popoup 
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y postfix && cp /usr/share/postfix/main.cf.debian /etc/postfix/main.cf && /etc/init.d/postfix reload

Copy the following contents to a pipe handler configuration file located at /etc/sensu/conf.d/handler_mail.json
{
          "handlers": {
            "mailer": {
          "type": "pipe",
          "command": "/opt/sensu/embedded/bin/handler-mailer.rb"
            }
          }
}

Copy the following contents to a mailer configuration file located at /etc/sensu/conf.d/mailer.json
{
            "mailer": {
            "admin_gui": "http://yoursensuserverip:8080/",
            "mail_from": "alerts@powerupcloud.com",
            "mail_to": "alerts@powerupcloud.com",
            "smtp_address": "localhost",
            "smtp_port": "25",
            "smtp_domain": "localhost"
            }
}

Note : Change your mailing address according to your needs.

- Restart the sensu server to update the configurations
# service sensu-server restart

- Enable sensu services to start automatically
sudo update-rc.d sensu-server defaults  
sudo update-rc.d sensu-client defaults  
sudo update-rc.d sensu-api defaults  
sudo update-rc.d uchiwa defaults

At this point, you can access Sensu dashboard at http://sensuserver-ip-address:8080

======================================================
INSTALL GRAPHITE AND GRAFANA
======================================================
-------------------------------
Installing Graphite
-------------------------------
What is Graphite?
Graphite is used to store metrics. It does not provide a facility for collecting metrics. It only receive the metrics from different platform. It’s made up of three major components.

1.Carbon — A high-performance service that listens for time-series data 
2. Whisper — A simple database library for storing time-series data
3. Django — Graphite’s user interface & API for rendering graphs and dashboards (web frontend)


- Install carbon. 
The default carbon configuration stores only one day. 
If you need to customize adjust the Retention rates.

# apt-get install -y graphite-carbon  
-- OR -- (to avoid popup prompt for configuration)
# DEBIAN_FRONTEND=noninteractive apt-get -q -y --force-yes install graphite-carbon 

echo "CARBON_CACHE_ENABLED=true" > /etc/default/graphite-carbon  
service carbon-cache start

- Install the web frontend
apt-get install -y graphite-web apache2 libapache2-mod-wsgi  
chown _graphite /var/lib/graphite  
sudo -u _graphite graphite-manage syncdb --noinput  
rm -f /etc/apache2/sites-enabled/000-default.conf  
cp /usr/share/graphite-web/apache2-graphite.conf /etc/apache2/sites-enabled/graphite.conf  
service apache2 restart

At this point, you can access Graphite dashboard at http://sensuserver-ip-address (port 80 of apache)

-------------------------------
Install Grafana
-------------------------------
NOTE: apt-get install failed due to certificate issues.
      --> Installed directly downloading the deb package instead
      
- What is grafana?
Grafana provides a powerful and easy way to create, explore, and share dashboards. It provides rich graphing experience.

- Install Grafana
Install grafana to visualize the metrics. 

Add the following line to your /etc/apt/sources/grafana_sources.list
deb https://packagecloud.io/grafana/stable/debian/ jessie main

Then add the Package Cloud key. This allows you to install signed packages.
# curl https://packagecloud.io/gpg.key | sudo apt-key add –

Update your Apt repositories and install Grafana
# sudo apt-get update sudo apt-get install grafana

--> IF THIS FAILS, use the following method to download and isntall the deb package itself:
# wget https://grafanarel.s3.amazonaws.com/builds/grafana_4.1.1-1484211277_amd64.deb && apt-get install -y adduser libfontconfig && dpkg -i grafana_4.1.1-1484211277_amd64.deb

# service grafana-server start

At this point, you can access Grafana dashboard at http://sensuserver-ip-address:3000

===============
TROUBLESHOOTING
===============
In /var/log/sensu/sensu-client.log
      {"timestamp":"2017-07-10T08:13:05.710488+0000","level":"warn","message":"loading config file","file":"/etc/sensu/conf.d/relay.json"}
      {"timestamp":"2017-07-10T08:13:05.710550+0000","level":"warn","message":"config file applied changes","file":"/etc/sensu/conf.d/relay.json","changes":{"relay":[null,{"graphite":{"host":"localhost","port":2003}}]}}
      {"timestamp":"2017-07-10T08:13:05.710587+0000","level":"warn","message":"loading config file","file":"/etc/sensu/conf.d/metrics-vmstat.json"}
      {"timestamp":"2017-07-10T08:13:05.710632+0000","level":"warn","message":"config file applied changes","file":"/etc/sensu/conf.d/metrics-vmstat.json","changes":{"checks":{"metric-vmstat":[null,{"type":"metric","command":"/opt/sensu/embedded/bin/metrics-vmstat.rb","subscribers":["linux"],"interval":20,"handlers":["relay"]}]}}}
      {"timestamp":"2017-07-10T08:13:05.710698+0000","level":"warn","message":"applied sensu client overrides","client":{"name":"sensu-server","address":"127.0.0.1","environment":"sensu","subscriptions":["linux","client:sensu-server"],"keepalive":{"handler":"mailer","thresholds":{"warning":250,"critical":300}},"socket":{"bind":"127.0.0.1","port":3030}}}
      {"timestamp":"2017-07-10T08:13:05.727440+0000","level":"warn","message":"loading extension files from directory","directory":"/etc/sensu/extensions"}
      {"timestamp":"2017-07-10T08:13:05.727501+0000","level":"warn","message":"loading extension file","file":"/etc/sensu/extensions/handlers/relay.rb"}
      {"timestamp":"2017-07-10T08:13:05.727534+0000","level":"warn","message":"loading extension file","file":"/etc/sensu/extensions/mutators/metrics.rb"}
      {"timestamp":"2017-07-10T08:13:05.727563+0000","level":"warn","message":"loading extension file","file":"/etc/sensu/extensions/handlers/relay.rb"}
      {"timestamp":"2017-07-10T08:13:05.727592+0000","level":"warn","message":"loading extension file","file":"/etc/sensu/extensions/mutators/metrics.rb"}
      {"timestamp":"2017-07-10T08:13:05.727641+0000","level":"info","message":"configuring sensu spawn","settings":{"limit":12}}
      {"timestamp":"2017-07-10T08:13:05.823352+0000","level":"error","message":"[amqp] Detected TCP connection failure: Errno::ECONNREFUSED"}
      {"timestamp":"2017-07-10T08:13:07.824621+0000","level":"error","message":"[amqp] Detected TCP connection failure: Errno::ECONNREFUSED"}
https://github.com/sensu/sensu/issues/1332
