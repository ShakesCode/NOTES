=====================================
       POSTGRES PERFORMANCE 1
=====================================
https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server
http://pghintplan.osdn.jp/pg_hint_plan.html --> for using hints
http://blog.2ndquadrant.com/hinting_at_postgresql/

================
SETUP
================
Tablespace TS1 on /disk1/postgres/data
Database db1

---------------
TABLES
---------------
CREATE TABLE DEPT
(
DEPTID      INT primary key using index tablespace ts1,
NAME        VARCHAR(100)  NOT NULL,
CREATEDATE  DATE         NOT NULL,
MANAGER     INT          
) TABLESPACE TS1;

CREATE TABLE EMP 
(
EMPID    INT primary key using index tablespace ts1,
NAME     VARCHAR(100) NOT NULL,
JOINDATE DATE        NOT NULL,
SALARY   INT         NOT NULL,
DEPTID   INT         NOT NULL,
FOREIGN KEY (DEPTID) REFERENCES DEPT (DEPTID)
) TABLESPACE TS1;

ALTER TABLE DEPT ADD CONSTRAINT MANAGERID_FK FOREIGN KEY (MANAGER) REFERENCES EMP (EMPID);

----------------------------------
SCHEMA DESCRIPTION AFTER CREATION
----------------------------------
postgres=# \c db1
You are now connected to database "db1" as user "postgres".

db1=# \d
        List of relations
 Schema | Name | Type  |  Owner
--------+------+-------+----------
 public | dept | table | postgres
 public | emp  | table | postgres
(2 rows)

db1=# \d dept
              Table "public.dept"
   Column   |         Type          | Modifiers
------------+-----------------------+-----------
 deptid     | integer               | not null
 name       | character varying(30) | not null
 createdate | date                  | not null
 managerid  | integer               | not null
Indexes:
    "dept_pkey" PRIMARY KEY, btree (deptid), tablespace "ts1"
Tablespace: "ts1"

db1=# \d emp
              Table "public.emp"
  Column  |         Type          | Modifiers
----------+-----------------------+-----------
 empid    | integer               | not null
 name     | character varying(30) | not null
 joindate | date                  | not null
 salary   | integer               | not null
 deptid   | integer               | not null
Indexes:
    "emp_pkey" PRIMARY KEY, btree (empid), tablespace "ts1"
Tablespace: "ts1"

--------------------------------   
INSERT INITIAL DATA - TAKING CARE TO UPDATE MANAGER IN DEPT TABLE AFTER AN EMPLOYEE IS IN EMP TABLE
--------------------------------
insert into dept values (1,'DB','01-JAN-2001',null);
insert into emp values (1,'ME','01-JAN-2016',1000,1);
update dept set manager=1;

==========================================
INSERT RANDOM BULK DATA
==========================================
----------
- Guidance
----------
http://stackoverflow.com/questions/3371503/sql-populate-table-with-random-data
SELECT generate_series(1,10) AS id, md5(random()::text) AS descr;

------------------
POPULATE DEPT
------------------
insert into dept values (1,'DB','01-JAN-2001',null);
insert into dept values (2,'UNIX','01-JAN-2002',null);
insert into dept values (3,'AIX','01-JAN-2002',null);
insert into dept values (4,'LINUX','01-JAN-2002',null);
insert into dept values (5,'SERVER','01-JAN-2003',null);
insert into dept values (6,'NETWORK','01-JAN-2003',null);
insert into dept values (7,'SECURITY','01-JAN-2003',null);
insert into dept values (8,'ART','01-JAN-2003',null);
insert into dept values (9,'SPORT','01-JAN-2003',null);

------------------
POPULATE EMP
------------------
- FOR 1M ROWS
select 'insert into emp values (' ||  generate_series(1,100000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 1);';
select 'insert into emp values (' ||  generate_series(100001,200000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 2);';
select 'insert into emp values (' ||  generate_series(200001,250000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 3);';
select 'insert into emp values (' ||  generate_series(300001,500000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 4);';
select 'insert into emp values (' ||  generate_series(500001,600000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 5);';
select 'insert into emp values (' ||  generate_series(600001,750000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 6);';
select 'insert into emp values (' ||  generate_series(800001,900000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 7);';
select 'insert into emp values (' ||  generate_series(900001,970000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 8);';
select 'insert into emp values (' ||  generate_series(970000,999999) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 9);';

- FOR 100000 rows
select 'insert into emp values (' ||  generate_series(1,10000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 1)';
select 'insert into emp values (' ||  generate_series(10001,20000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 2)';
select 'insert into emp values (' ||  generate_series(20001,25000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 3)';
select 'insert into emp values (' ||  generate_series(30001,50000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 4)';
select 'insert into emp values (' ||  generate_series(50001,60000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 5)';
select 'insert into emp values (' ||  generate_series(60001,75000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 6)';
select 'insert into emp values (' ||  generate_series(80001,90000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 7)';
select 'insert into emp values (' ||  generate_series(90001,97000) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 8)';
select 'insert into emp values (' ||  generate_series(97000,99999) || ',' || '''' || md5(random()::text) || '''' || ',' || '''' || '01-JAN-2016' || '''' || ', 1000, 9)';

=========================================
TEST QUERIES
=========================================

-----------------------------------------
IN POSTGRES (2 CPU cores, default mem settings)
-----------------------------------------
db1=#\timing

db1=# select count(*) from emp;
 count
--------
 899999
(1 row)

Time: 94.479 ms


db1=# select count(*) from emp where name similar to '%c8%';
 count
--------
 102810
(1 row)

Time: 988.804 ms

db1=# select
count(*) from emp a,
(select name from emp where name like '%c8') b
 where a.name like '%d8%' and a.name > b.name;

   count
-----------
 177580446
(1 row)

Time: 103602.092 ms


-----------------------------------------
IN ORACLE (24 cores, 4GB SGA, Oracle 11g)
-----------------------------------------
SQL> select count(*) from emp;

  COUNT(*)
----------
    899999

Elapsed: 00:00:00.07
SQL> select count(*) from emp where name like select count(*) from emp where name^C

SQL> select count(*) from emp where name like '%c8%';

  COUNT(*)
----------
    102810

Elapsed: 00:00:00.66

SQL> !cat test3.sql
set timing on
alter session set current_schema=psql;

spool test3

select
count(*) from emp a,
(select name from emp where name like '%c8') b
 where a.name like '%d8%' and a.name > b.name;

spool off


SQL> !cat test3.lst

  COUNT(*)
----------
 177580446

Elapsed: 00:00:32.75

-----------------------------------------
IN ORACLE EXADATA (4 cores, 4GB SGA, Oracle 11g)
-----------------------------------------

  COUNT(*)
----------
 177580446

Elapsed: 00:00:18.45

------------------------------
TUNE POSTGRES A BIT
------------------------------

Edit /var/lib/pgsql/9.5/data/postgresql.conf with enhanced settings:
       shared_buffers - 2GB
       work_mem - not set yet as this applies to every query requiring sort

Performance of the complex query below did not become any better.
       count(*) from emp a,
       (select name from emp where name like '%c8') b
        where a.name like '%d8%' and a.name > b.name;

       Both before and after were about 100sec.
