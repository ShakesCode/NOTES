===============================================
      SINATRA INSTALL AND SIMPLE EXAMPLE
===============================================
Tutorials:
MAIN - https://blog.engineyard.com/2014/doing-an-api-mashup-with-sinatra
http://nicolas.corrarello.com/general/puppet/code/2015/07/08/Creating-an-API-with-Sinatra-and-wrapping-Puppet-code-around-it.html
http://www.sinatrarb.com/intro.html

Sites:
Rails-http-authentication - http://railscasts.com/episodes/352-securing-an-api?view=asciicast
http://blog.fil.vasilak.is/securing-the-sinatra-micro-framework/
Json input - http://stackoverflow.com/questions/17049569/how-to-parse-json-request-body-in-sinatra-just-once-and-expose-it-to-all-routes
Json input - http://stackoverflow.com/questions/24091594/sending-json-via-curl-post-request-to-sinatra
Json input - http://willschenk.com/receiving-posted-json-with-sinatra/

Issues:
RestClient::Unauthorized: 401 Unauthorized
      http://stackoverflow.com/questions/28091678/get-http-error-restclientunauthorized-401-unauthorized-using-rest-client
      https://github.com/jnunemaker/httparty

Failed connect to oralx0001:4567; Connection refused


=====================
Setup RHEL machine
=====================
# firewall-cmd --zone=public --add-port=4567/tcp --permanent
success
# firewall-cmd --reload
success

Verify:
# nmap -sT -O localhost

      Starting Nmap 6.40 ( http://nmap.org ) at 2016-06-08 07:05 CDT
      Nmap scan report for localhost (127.0.0.1)
      Host is up (0.000090s latency).
      Not shown: 997 closed ports
      PORT     STATE SERVICE
      22/tcp   open  ssh
      25/tcp   open  smtp
      4567/tcp open  tram  --> this is unclear why a 'tram' trojan is mentioned here

=====================
INSTALL
=====================

INSTALL RUBY
yum install ruby
yum install ruby-devel (necessory for json gem)

INSTALL PREREQUISITES
yum install gcc
yum install gcc-c++

INSTALL BUNDLER
gem install bundler

INSTALL SINATRA and other stuff
gem install sinatra
...
...

OR, make a Gemfile with the following content and in that directory, run 'bundle install':

  source 'http://rubygems.org'
  gem 'rubygems-update'
  gem 'bundler'
  gem 'sinatra'
  gem 'rest-open-uri'
  gem 'rest-client'
  gem 'json'

Screen output of 'bundle install'

      # bundle install
      Don't run Bundler as root. Bundler can ask for sudo if it is needed, and installing your bundle as root will break this application for all non-root users on this
      machine.
      Fetching gem metadata from http://rubygems.org/
      Fetching version metadata from http://rubygems.org/
      Resolving dependencies...
      Rubygems 2.0.14 is not threadsafe, so your gems will be installed one at a time. Upgrade to Rubygems 2.1.0 or higher to enable parallel gem installation.
      Using bundler 1.12.5
      Using json 1.8.3
      Using rack 1.6.4
      Using rest-open-uri 1.0.0
      Using rubygems-update 2.6.4
      Using tilt 2.0.5
      Using rack-protection 1.5.3
      Using sinatra 1.4.7
      Bundle complete! 5 Gemfile dependencies, 8 gems now installed.
      Use `bundle show [gemname]` to see where a bundled gem is installed.
      
      # bundle show json
      /usr/local/share/gems/gems/json-1.8.3
      
      # bundle show bundler
      /usr/local/share/gems/gems/bundler-1.12.5

CREATE SINATRA USER
useradd ...
/etc/passwd:
sinatra:x:555:100:Sinatra Ruby Container:/home/sinatra:/bin/bash

/etc/group:
users:x:100:

CREATE A FOLDER FOR API CODE
/home/sinatra/sinatra-apis
chown sinatra:users /home/sinatra/sinatra-apis

------------------------
EXAMPLE1 - testgoogle.rb
------------------------
equire 'rubygems'
#require 'bundler'
#Bundler.setup
require 'sinatra'
require 'json'
require 'rest-client'

get '/google' do
  RestClient.get('http://www.google.com')
end

get '/yahoo' do
  RestClient.get('http://www.yahoo.com')
end

-RUN IT
$ ruby testgoogle.rb

-ACCESS IT
In browser http://hostname:4567/google or http://hostname:4567/yahoo
--> That will retrieve content of google or yahoo main pages on to browser

With curl - curl -X http://hostname:4567/google or http://hostname:4567/yahoo
--> That will retrieve content of google or yahoo main pages on to screen (not showing graphics)
